{"version":3,"file":"index.js","sources":["../src/model/immutable/BlockMapBuilder.tsx","../src/model/immutable/CharacterMetadata.tsx","../src/model/immutable/findRangesImmutable.tsx","../src/model/immutable/ContentBlock.tsx","../src/model/immutable/ContentBlockNode.tsx","../src/model/transaction/ContentStateInlineStyle.tsx","../src/model/transaction/applyEntityToContentBlock.tsx","../src/model/transaction/applyEntityToContentState.tsx","../src/model/modifier/DraftEntitySegments.tsx","../src/model/modifier/getRangesForDraftEntity.tsx","../src/model/modifier/getCharacterRemovalRange.tsx","../src/model/keys/generateRandomKey.tsx","../src/model/transaction/randomizeBlockMapKeys.tsx","../src/model/transaction/removeEntitiesAtEdges.tsx","../src/model/transaction/getContentStateFragment.tsx","../src/model/transaction/insertIntoList.tsx","../src/model/transaction/insertFragmentIntoContentState.tsx","../src/model/transaction/insertTextIntoContentState.tsx","../src/model/transaction/modifyBlockForContentState.tsx","../src/model/transaction/exploration/getNextDelimiterBlockKey.tsx","../src/model/transaction/removeRangeFromContentState.tsx","../src/model/transaction/splitBlockInContentState.tsx","../src/model/modifier/DraftModifier.tsx","../src/model/immutable/BlockTree.tsx","../src/model/entity/DraftEntityInstance.tsx","../src/model/entity/DraftEntity.tsx","../src/model/immutable/SelectionState.tsx","../src/stubs/gkx.tsx","../src/model/encoding/sanitizeDraftText.tsx","../src/model/immutable/ContentState.tsx","../src/model/immutable/EditorBidiService.tsx","../src/model/immutable/EditorState.tsx","../src/model/transaction/moveBlockInContentState.tsx","../src/model/modifier/AtomicBlockUtils.tsx","../src/model/decorators/CompositeDraftDecorator.tsx","../src/model/immutable/DefaultDraftBlockRenderMap.tsx","../src/model/immutable/DefaultDraftInlineStyle.tsx","../src/component/utils/getCorrectDocumentFromNode.tsx","../src/component/utils/isElement.tsx","../src/component/selection/getSelectionOffsetKeyForNode.tsx","../src/component/selection/findAncestorOffsetKey.tsx","../src/component/utils/getWindowForNode.tsx","../src/component/handlers/composition/DOMObserver.tsx","../src/component/selection/DraftOffsetKey.tsx","../src/stubs/DraftJsDebugLogging.tsx","../src/component/utils/isHTMLElement.tsx","../src/component/utils/getContentEditableContainer.tsx","../src/component/selection/getUpdatedSelectionState.tsx","../src/component/selection/getDraftEditorSelectionWithNodes.tsx","../src/component/selection/getDraftEditorSelection.tsx","../src/component/handlers/edit/editOnSelect.tsx","../src/component/utils/draftKeyUtils.tsx","../src/model/entity/getEntityKeyForSelection.tsx","../src/component/handlers/composition/DraftEditorCompositionHandler.tsx","../src/component/contents/exploration/DraftEditorDecoratedLeaves.react.tsx","../src/component/contents/DraftEditorTextNode.react.tsx","../src/component/utils/isHTMLBRElement.tsx","../src/stubs/DraftEffects.tsx","../src/component/selection/setDraftEditorSelection.tsx","../src/component/contents/DraftEditorLeaf.react.tsx","../src/component/contents/exploration/DraftEditorNode.react.tsx","../src/component/contents/exploration/DraftEditorBlockNode.react.tsx","../src/component/contents/exploration/DraftEditorContentsExperimental.react.tsx","../src/component/contents/DraftEditorBlock.react.tsx","../src/component/contents/DraftEditorContents-core.react.tsx","../src/stubs/DraftEditorContents.react.tsx","../src/component/utils/getTextContentFromFiles.tsx","../src/component/utils/isEventHandled.tsx","../src/component/handlers/drag/DraftEditorDragHandler.tsx","../src/component/selection/isSelectionAtLeafStart.tsx","../src/component/handlers/edit/editOnBeforeInput.tsx","../src/component/handlers/edit/editOnBlur.tsx","../src/component/handlers/edit/editOnCompositionStart.tsx","../src/component/handlers/edit/getFragmentFromSelection.tsx","../src/component/handlers/edit/editOnCopy.tsx","../src/component/utils/isInstanceOfNode.tsx","../src/component/handlers/edit/editOnCut.tsx","../src/component/handlers/edit/editOnDragOver.tsx","../src/component/handlers/edit/editOnDragStart.tsx","../src/component/handlers/edit/editOnFocus.tsx","../src/component/handlers/edit/commands/moveSelectionBackward.tsx","../src/component/handlers/edit/commands/removeTextWithStrategy.tsx","../src/component/handlers/edit/commands/keyCommandPlainBackspace.tsx","../src/component/handlers/edit/editOnInput.tsx","../src/component/utils/isSoftNewlineEvent.tsx","../src/component/utils/KeyBindingUtil.tsx","../src/component/handlers/edit/commands/SecondaryClipboard.tsx","../src/component/selection/getRangeClientRects.tsx","../src/component/selection/expandRangeToStartOfLine.tsx","../src/component/handlers/edit/commands/keyCommandBackspaceToStartOfLine.tsx","../src/model/modifier/DraftRemovableWord.tsx","../src/component/handlers/edit/commands/keyCommandBackspaceWord.tsx","../src/component/handlers/edit/commands/moveSelectionForward.tsx","../src/component/handlers/edit/commands/keyCommandDeleteWord.tsx","../src/component/handlers/edit/commands/keyCommandInsertNewline.tsx","../src/component/handlers/edit/commands/keyCommandMoveSelectionToEndOfBlock.tsx","../src/component/handlers/edit/commands/keyCommandMoveSelectionToStartOfBlock.tsx","../src/component/handlers/edit/commands/keyCommandPlainDelete.tsx","../src/component/handlers/edit/commands/keyCommandTransposeCharacters.tsx","../src/component/handlers/edit/commands/keyCommandUndo.tsx","../src/component/handlers/edit/editOnKeyDown.tsx","../src/model/paste/getSafeBodyFromHTML.tsx","../src/component/utils/isHTMLAnchorElement.tsx","../src/component/utils/isHTMLImageElement.tsx","../src/model/encoding/convertFromHTMLToContentBlocks.tsx","../src/model/paste/DraftPasteProcessor.tsx","../src/model/transaction/adjustBlockDepthForContentState.tsx","../src/model/modifier/RichTextEditorUtil.tsx","../src/component/utils/splitTextIntoTextBlocks.tsx","../src/component/handlers/edit/editOnPaste.tsx","../src/component/handlers/edit/DraftEditorEditHandler.tsx","../src/component/base/DraftEditorPlaceholder.react.tsx","../src/component/utils/getDefaultKeyBinding.tsx","../src/component/base/DraftEditor.react.tsx","../src/model/encoding/RawDraftContentState.tsx","../src/model/encoding/DraftStringKey.tsx","../src/model/encoding/encodeEntityRanges.tsx","../src/model/encoding/encodeInlineStyleRanges.tsx","../src/model/encoding/convertFromDraftStateToRaw.tsx","../src/component/utils/exploration/DraftTreeAdapter.tsx","../src/component/utils/exploration/DraftTreeInvariants.tsx","../src/model/encoding/createCharacterList.tsx","../src/model/encoding/decodeEntityRanges.tsx","../src/model/encoding/decodeInlineStyleRanges.tsx","../src/model/encoding/convertFromRawToDraftState.tsx","../src/component/selection/getRangeBoundingClientRect.tsx","../src/component/selection/getVisibleSelectionRect.tsx"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport { BlockMap } from \"./BlockMap\";\r\nimport { BlockNodeRecord } from \"./BlockNodeRecord\";\r\n\r\nimport { OrderedMap } from \"immutable\";\r\n\r\nconst BlockMapBuilder = {\r\n    createFromArray: function(blocks: Array<BlockNodeRecord>): BlockMap {\r\n        return OrderedMap(blocks.map(block => [block.getKey(), block]));\r\n    }\r\n};\r\n\r\nexport default BlockMapBuilder;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {DraftInlineStyle} from './DraftInlineStyle';\r\n\r\nimport {Map, OrderedSet, Record} from 'immutable';\r\n\r\n// Immutable.map is typed such that the value for every key in the map\r\n// must be the same type\r\ntype CharacterMetadataConfigValueType = DraftInlineStyle | string;\r\n\r\ntype CharacterMetadataConfig = {\r\n  style?: CharacterMetadataConfigValueType,\r\n  entity?: CharacterMetadataConfigValueType,\r\n};\r\n\r\nconst EMPTY_SET = OrderedSet<string>();\r\n\r\nconst defaultRecord: CharacterMetadataConfig = {\r\n  style: EMPTY_SET,\r\n  entity: null,\r\n};\r\n\r\nconst CharacterMetadataRecord = Record(defaultRecord);\r\n\r\nclass CharacterMetadata extends CharacterMetadataRecord {\r\n  getStyle(): DraftInlineStyle {\r\n    return this.get('style');\r\n  }\r\n\r\n  getEntity():string {\r\n    return this.get('entity');\r\n  }\r\n\r\n  hasStyle(style: string): boolean {\r\n    return this.getStyle().includes(style);\r\n  }\r\n\r\n  static applyStyle(\r\n    record: CharacterMetadata,\r\n    style: string,\r\n  ): CharacterMetadata {\r\n    const withStyle:any = record.set('style', record.getStyle().add(style));\r\n    return CharacterMetadata.create(withStyle);\r\n  }\r\n\r\n  static removeStyle(\r\n    record: CharacterMetadata,\r\n    style: string,\r\n  ): CharacterMetadata {\r\n    const withoutStyle:any = record.set('style', record.getStyle().remove(style));\r\n    return CharacterMetadata.create(withoutStyle);\r\n  }\r\n\r\n  static applyEntity(\r\n    record: CharacterMetadata,\r\n    entityKey:string,\r\n  ): CharacterMetadata {\r\n    const withEntity:any =\r\n      record.getEntity() === entityKey\r\n        ? record\r\n        : record.set('entity', entityKey);\r\n    return CharacterMetadata.create(withEntity);\r\n  }\r\n\r\n  /**\r\n   * Use this function instead of the `CharacterMetadata` constructor.\r\n   * Since most content generally uses only a very small number of\r\n   * style/entity permutations, we can reuse these objects as often as\r\n   * possible.\r\n   */\r\n  static create(config?: CharacterMetadataConfig): CharacterMetadata {\r\n    if (!config) {\r\n      return EMPTY;\r\n    }\r\n\r\n    const defaultConfig: CharacterMetadataConfig = {\r\n      style: EMPTY_SET,\r\n      entity: null,\r\n    };\r\n\r\n    // Fill in unspecified properties, if necessary.\r\n    const configMap = Map(defaultConfig).merge(config);\r\n\r\n    const existing:CharacterMetadata = pool.get(configMap);\r\n    if (existing) {\r\n      return existing;\r\n    }\r\n\r\n    const newCharacter = new CharacterMetadata(configMap);\r\n    pool = pool.set(configMap, newCharacter);\r\n    return newCharacter;\r\n  }\r\n\r\n  static EMPTY;\r\n}\r\n\r\nconst EMPTY = new CharacterMetadata();\r\nlet pool: Map<Map<any, any>, CharacterMetadata> = Map([\r\n  [Map(defaultRecord), EMPTY],\r\n]);\r\n\r\nCharacterMetadata.EMPTY = EMPTY;\r\n\r\nexport default  CharacterMetadata;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {List} from 'immutable';\r\n\r\n/**\r\n * Search through an array to find contiguous stretches of elements that\r\n * match a specified filter function.\r\n *\r\n * When ranges are found, execute a specified `found` function to supply\r\n * the values to the caller.\r\n */\r\nfunction findRangesImmutable<T>(\r\n  haystack: List<T>,\r\n  areEqualFn: (a: T, b: T) => boolean,\r\n  filterFn: (value: T) => boolean,\r\n  foundFn: (start: number, end: number) => void,\r\n): void {\r\n  if (!haystack.size) {\r\n    return;\r\n  }\r\n\r\n  let cursor: number = 0;\r\n\r\n  haystack.reduce((value: T, nextValue, nextIndex) => {\r\n    if (!areEqualFn(value, nextValue)) {\r\n      if (filterFn(value)) {\r\n        foundFn(cursor, nextIndex);\r\n      }\r\n      cursor = nextIndex;\r\n    }\r\n    return nextValue;\r\n  });\r\n\r\n  filterFn(haystack.last()) && foundFn(cursor, haystack.count());\r\n}\r\n\r\nexport default  findRangesImmutable;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNode, BlockNodeConfig, BlockNodeKey} from './BlockNode';\r\nimport {DraftBlockType} from '../constants/DraftBlockType';\r\nimport {DraftInlineStyle} from './DraftInlineStyle';\r\n\r\nimport CharacterMetadata from  './CharacterMetadata';\r\n\r\nimport findRangesImmutable from './findRangesImmutable';\r\nimport { List, Map, OrderedSet, Record, Repeat  } from 'immutable';\r\n\r\nconst EMPTY_SET = OrderedSet<string>();\r\n\r\nconst defaultRecord: BlockNodeConfig = {\r\n  key: '',\r\n  type: 'unstyled',\r\n  text: '',\r\n  characterList: List(),\r\n  depth: 0,\r\n  data: Map(),\r\n};\r\n\r\nconst ContentBlockRecord = Record(defaultRecord);\r\n\r\nconst decorateCharacterList = (config: BlockNodeConfig): BlockNodeConfig => {\r\n  if (!config) {\r\n    return config;\r\n  }\r\n\r\n  const {characterList, text} = config;\r\n\r\n  if (text && !characterList) {\r\n    config.characterList = List(Repeat(CharacterMetadata.EMPTY, text.length));\r\n  }\r\n\r\n  return config;\r\n};\r\n\r\nclass ContentBlock extends ContentBlockRecord implements BlockNode {\r\n  constructor(config: BlockNodeConfig) {\r\n    super(decorateCharacterList(config));\r\n  }\r\n\r\n  getParentKey\r\n  getNextSiblingKey\r\n  getPrevSiblingKey\r\n\r\n  getKey(): BlockNodeKey {\r\n    return this.get('key');\r\n  }\r\n\r\n  getType(): DraftBlockType {\r\n    return this.get('type');\r\n  }\r\n\r\n  getText(): string {\r\n    return this.get('text');\r\n  }\r\n\r\n  getCharacterList(): List<CharacterMetadata> {\r\n    return this.get('characterList');\r\n  }\r\n\r\n  getLength(): number {\r\n    return this.getText().length;\r\n  }\r\n\r\n  getDepth(): number {\r\n    return this.get('depth');\r\n  }\r\n\r\n  getData(): Map<any, any> {\r\n    return this.get('data');\r\n  }\r\n\r\n  getInlineStyleAt(offset: number): DraftInlineStyle {\r\n    const character = this.getCharacterList().get(offset);\r\n    return character ? character.getStyle() : EMPTY_SET;\r\n  }\r\n\r\n  getEntityAt(offset: number): string {\r\n    const character = this.getCharacterList().get(offset);\r\n    return character ? character.getEntity() : null;\r\n  }\r\n\r\n  /**\r\n   * Execute a callback for every contiguous range of styles within the block.\r\n   */\r\n  findStyleRanges(\r\n    filterFn: (value: CharacterMetadata) => boolean,\r\n    callback: (start: number, end: number) => void,\r\n  ): void {\r\n    findRangesImmutable(\r\n      this.getCharacterList(),\r\n      haveEqualStyle,\r\n      filterFn,\r\n      callback,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Execute a callback for every contiguous range of entities within the block.\r\n   */\r\n  findEntityRanges(\r\n    filterFn: (value: CharacterMetadata) => boolean,\r\n    callback: (start: number, end: number) => void,\r\n  ): void {\r\n    findRangesImmutable(\r\n      this.getCharacterList(),\r\n      haveEqualEntity,\r\n      filterFn,\r\n      callback,\r\n    );\r\n  }\r\n}\r\n\r\nfunction haveEqualStyle(\r\n  charA: CharacterMetadata,\r\n  charB: CharacterMetadata,\r\n): boolean {\r\n  return charA.getStyle() === charB.getStyle();\r\n}\r\n\r\nfunction haveEqualEntity(\r\n  charA: CharacterMetadata,\r\n  charB: CharacterMetadata,\r\n): boolean {\r\n  return charA.getEntity() === charB.getEntity();\r\n}\r\n\r\nexport default  ContentBlock;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n *\r\n * This file is a fork of ContentBlock adding support for nesting references by\r\n * providing links to children, parent, prevSibling, and nextSibling.\r\n *\r\n * This is unstable and not part of the public API and should not be used by\r\n * production systems. This file may be update/removed without notice.\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport { BlockNode, BlockNodeConfig, BlockNodeKey } from \"./BlockNode\";\r\nimport { DraftBlockType } from \"../constants/DraftBlockType\";\r\nimport { DraftInlineStyle } from \"./DraftInlineStyle\";\r\n\r\nimport CharacterMetadata from \"./CharacterMetadata\";\r\n\r\nimport findRangesImmutable from \"./findRangesImmutable\";\r\nimport { List, Map, OrderedSet, Record, Repeat } from \"immutable\";\r\n\r\ntype ContentBlockNodeConfig = BlockNodeConfig & {\r\n    children?: List<BlockNodeKey>;\r\n    parent?: BlockNodeKey;\r\n    prevSibling?: BlockNodeKey;\r\n    nextSibling?: BlockNodeKey;\r\n};\r\n\r\nconst EMPTY_SET = OrderedSet<string>();\r\n\r\nconst defaultRecord: ContentBlockNodeConfig = {\r\n    parent: null,\r\n    characterList: List(),\r\n    data: Map(),\r\n    depth: 0,\r\n    key: \"\",\r\n    text: \"\",\r\n    type: \"unstyled\",\r\n    children: List(),\r\n    prevSibling: null,\r\n    nextSibling: null\r\n};\r\n\r\nconst haveEqualStyle = (charA: CharacterMetadata, charB: CharacterMetadata): boolean => charA.getStyle() === charB.getStyle();\r\n\r\nconst haveEqualEntity = (charA: CharacterMetadata, charB: CharacterMetadata): boolean => charA.getEntity() === charB.getEntity();\r\n\r\nconst decorateCharacterList = (config: ContentBlockNodeConfig): ContentBlockNodeConfig => {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n\r\n    const { characterList, text } = config;\r\n\r\n    if (text && !characterList) {\r\n        config.characterList = List(Repeat(CharacterMetadata.EMPTY, text.length));\r\n    }\r\n\r\n    return config;\r\n};\r\n\r\nclass ContentBlockNode extends Record(defaultRecord) implements BlockNode {\r\n    constructor(props: ContentBlockNodeConfig = defaultRecord) {\r\n        /* eslint-disable-next-line constructor-super */\r\n        super(decorateCharacterList(props));\r\n    }\r\n\r\n    getKey(): BlockNodeKey {\r\n        return this.get(\"key\");\r\n    }\r\n\r\n    getType(): DraftBlockType {\r\n        return this.get(\"type\");\r\n    }\r\n\r\n    getText(): string {\r\n        return this.get(\"text\");\r\n    }\r\n\r\n    getCharacterList(): List<CharacterMetadata> {\r\n        return this.get(\"characterList\");\r\n    }\r\n\r\n    getLength(): number {\r\n        return this.getText().length;\r\n    }\r\n\r\n    getDepth(): number {\r\n        return this.get(\"depth\");\r\n    }\r\n\r\n    getData(): Map<any, any> {\r\n        return this.get(\"data\");\r\n    }\r\n\r\n    getInlineStyleAt(offset: number): DraftInlineStyle {\r\n        const character = this.getCharacterList().get(offset);\r\n        return character ? character.getStyle() : EMPTY_SET;\r\n    }\r\n\r\n    getEntityAt(offset: number): string {\r\n        const character = this.getCharacterList().get(offset);\r\n        return character ? character.getEntity() : null;\r\n    }\r\n\r\n    getChildKeys(): List<BlockNodeKey> {\r\n        return this.get(\"children\");\r\n    }\r\n\r\n    getParentKey(): BlockNodeKey {\r\n        return this.get(\"parent\");\r\n    }\r\n\r\n    getPrevSiblingKey(): BlockNodeKey {\r\n        return this.get(\"prevSibling\");\r\n    }\r\n\r\n    getNextSiblingKey(): BlockNodeKey {\r\n        return this.get(\"nextSibling\");\r\n    }\r\n\r\n    findStyleRanges(filterFn: (value: CharacterMetadata) => boolean, callback: (start: number, end: number) => void): void {\r\n        findRangesImmutable(this.getCharacterList(), haveEqualStyle, filterFn, callback);\r\n    }\r\n\r\n    findEntityRanges(filterFn: (value: CharacterMetadata) => boolean, callback: (start: number, end: number) => void): void {\r\n        findRangesImmutable(this.getCharacterList(), haveEqualEntity, filterFn, callback);\r\n    }\r\n}\r\n\r\nexport default ContentBlockNode;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nimport CharacterMetadata from '../immutable/CharacterMetadata';\r\nimport {Map} from 'immutable';\r\n\r\nconst ContentStateInlineStyle = {\r\n  add: function(\r\n    contentState: ContentState,\r\n    selectionState: SelectionState,\r\n    inlineStyle: string,\r\n  ): ContentState {\r\n    return modifyInlineStyle(contentState, selectionState, inlineStyle, true);\r\n  },\r\n\r\n  remove: function(\r\n    contentState: ContentState,\r\n    selectionState: SelectionState,\r\n    inlineStyle: string,\r\n  ): ContentState {\r\n    return modifyInlineStyle(contentState, selectionState, inlineStyle, false);\r\n  },\r\n};\r\n\r\nfunction modifyInlineStyle(\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n  inlineStyle: string,\r\n  addOrRemove: boolean,\r\n): ContentState {\r\n  const blockMap = contentState.getBlockMap();\r\n  const startKey = selectionState.getStartKey();\r\n  const startOffset = selectionState.getStartOffset();\r\n  const endKey = selectionState.getEndKey();\r\n  const endOffset = selectionState.getEndOffset();\r\n\r\n  const newBlocks:any = blockMap\r\n    .skipUntil((_, k) => k === startKey)\r\n    .takeUntil((_, k) => k === endKey)\r\n    .concat(Map([[endKey, blockMap.get(endKey)]]))\r\n    .map((block, blockKey) => {\r\n      let sliceStart;\r\n      let sliceEnd;\r\n\r\n      if (startKey === endKey) {\r\n        sliceStart = startOffset;\r\n        sliceEnd = endOffset;\r\n      } else {\r\n        sliceStart = blockKey === startKey ? startOffset : 0;\r\n        sliceEnd = blockKey === endKey ? endOffset : block.getLength();\r\n      }\r\n\r\n      let chars = block.getCharacterList();\r\n      let current;\r\n      while (sliceStart < sliceEnd) {\r\n        current = chars.get(sliceStart);\r\n        chars = chars.set(\r\n          sliceStart,\r\n          addOrRemove\r\n            ? CharacterMetadata.applyStyle(current, inlineStyle)\r\n            : CharacterMetadata.removeStyle(current, inlineStyle),\r\n        );\r\n        sliceStart++;\r\n      }\r\n\r\n      return block.set('characterList', chars);\r\n    });\r\n\r\n  return contentState.merge({\r\n    blockMap: blockMap.merge(newBlocks),\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState,\r\n  }) as any;\r\n}\r\n\r\nexport default  ContentStateInlineStyle;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\n\r\nimport CharacterMetadata from '../immutable/CharacterMetadata';\r\n\r\nfunction applyEntityToContentBlock(\r\n  contentBlock: BlockNodeRecord,\r\n  start: number,\r\n  end: number,\r\n  entityKey: string,\r\n): BlockNodeRecord {\r\n  let characterList = contentBlock.getCharacterList();\r\n  while (start < end) {\r\n    characterList = characterList.set(\r\n      start,\r\n      CharacterMetadata.applyEntity(characterList.get(start), entityKey),\r\n    );\r\n    start++;\r\n  }\r\n  return contentBlock.set('characterList', characterList) as BlockNodeRecord;\r\n}\r\n\r\nexport default  applyEntityToContentBlock;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nimport applyEntityToContentBlock from './applyEntityToContentBlock';\r\nimport { OrderedMap } from 'immutable';\r\n\r\nfunction applyEntityToContentState(\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n  entityKey: string,\r\n): ContentState {\r\n  const blockMap = contentState.getBlockMap();\r\n  const startKey = selectionState.getStartKey();\r\n  const startOffset = selectionState.getStartOffset();\r\n  const endKey = selectionState.getEndKey();\r\n  const endOffset = selectionState.getEndOffset();\r\n\r\n  const newBlocks = blockMap\r\n    .skipUntil((_, k) => k === startKey)\r\n    .takeUntil((_, k) => k === endKey)\r\n    .toOrderedMap()\r\n    .merge(OrderedMap([[endKey, blockMap.get(endKey)]]))\r\n    .map((block, blockKey) => {\r\n      const sliceStart = blockKey === startKey ? startOffset : 0;\r\n      const sliceEnd = blockKey === endKey ? endOffset : block.getLength();\r\n      return applyEntityToContentBlock(block, sliceStart, sliceEnd, entityKey);\r\n    });\r\n\r\n  return contentState.merge({\r\n    blockMap: blockMap.merge(newBlocks),\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState,\r\n  }) as any;\r\n}\r\n\r\nexport default  applyEntityToContentState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {DraftRange} from './DraftRange';\r\nimport  {DraftRemovalDirection} from '../constants/DraftRemovalDirection';\r\n\r\n/**\r\n * Identify the range to delete from a segmented entity.\r\n *\r\n * Rules:\r\n *\r\n *  Example: 'John F. Kennedy'\r\n *\r\n *   - Deletion from within any non-whitespace (i.e. ['John', 'F.', 'Kennedy'])\r\n *     will return the range of that text.\r\n *\r\n *       'John F. Kennedy' -> 'John F.'\r\n *                  ^\r\n *\r\n *   - Forward deletion of whitespace will remove the following section:\r\n *\r\n *       'John F. Kennedy' -> 'John Kennedy'\r\n *            ^\r\n *\r\n *   - Backward deletion of whitespace will remove the previous section:\r\n *\r\n *       'John F. Kennedy' -> 'F. Kennedy'\r\n *            ^\r\n */\r\nconst DraftEntitySegments = {\r\n  getRemovalRange: function(\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    text: string,\r\n    entityStart: number,\r\n    direction: DraftRemovalDirection,\r\n  ): DraftRange {\r\n    let segments = text.split(' ');\r\n    segments = segments.map((/*string*/ segment, /*number*/ ii) => {\r\n      if (direction === 'forward') {\r\n        if (ii > 0) {\r\n          return ' ' + segment;\r\n        }\r\n      } else if (ii < segments.length - 1) {\r\n        return segment + ' ';\r\n      }\r\n      return segment;\r\n    });\r\n\r\n    let segmentStart = entityStart;\r\n    let segmentEnd;\r\n    let segment;\r\n    let removalStart: any = null;\r\n    let removalEnd: any = null;\r\n\r\n    for (let jj = 0; jj < segments.length; jj++) {\r\n      segment = segments[jj];\r\n      segmentEnd = segmentStart + segment.length;\r\n\r\n      // Our selection overlaps this segment.\r\n      if (selectionStart < segmentEnd && segmentStart < selectionEnd) {\r\n        if (removalStart !== null) {\r\n          removalEnd = segmentEnd;\r\n        } else {\r\n          removalStart = segmentStart;\r\n          removalEnd = segmentEnd;\r\n        }\r\n      } else if (removalStart !== null) {\r\n        break;\r\n      }\r\n\r\n      segmentStart = segmentEnd;\r\n    }\r\n\r\n    const entityEnd = entityStart + text.length;\r\n    const atStart = removalStart === entityStart;\r\n    const atEnd = removalEnd === entityEnd;\r\n\r\n    if ((!atStart && atEnd) || (atStart && !atEnd)) {\r\n      if (direction === 'forward') {\r\n        if (removalEnd !== entityEnd) {\r\n          removalEnd++;\r\n        }\r\n      } else if (removalStart !== entityStart) {\r\n        removalStart--;\r\n      }\r\n    }\r\n\r\n    return {\r\n      start: removalStart,\r\n      end: removalEnd,\r\n    };\r\n  },\r\n};\r\n\r\nexport default  DraftEntitySegments;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport  {DraftRange} from './DraftRange';\r\n\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\n/**\r\n * Obtain the start and end positions of the range that has the\r\n * specified entity applied to it.\r\n *\r\n * Entity keys are applied only to contiguous stretches of text, so this\r\n * method searches for the first instance of the entity key and returns\r\n * the subsequent range.\r\n */\r\nfunction getRangesForDraftEntity(\r\n  block: BlockNodeRecord,\r\n  key: string,\r\n): Array<DraftRange> {\r\n  const ranges = [];\r\n  block.findEntityRanges(\r\n    c => c.getEntity() === key,\r\n    (start, end) => {\r\n      ranges.push({start, end});\r\n    },\r\n  );\r\n\r\n  invariant(!!ranges.length, 'Entity key not found in this range.');\r\n\r\n  return ranges;\r\n}\r\n\r\nexport default  getRangesForDraftEntity;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport  {DraftRemovalDirection} from '../constants/DraftRemovalDirection';\r\nimport {EntityMap} from '../immutable/EntityMap';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nimport DraftEntitySegments from './DraftEntitySegments';\r\n\r\nimport getRangesForDraftEntity from './getRangesForDraftEntity';\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\n/**\r\n * Given a SelectionState and a removal direction, determine the entire range\r\n * that should be removed from a ContentState. This is based on any entities\r\n * within the target, with their `mutability` values taken into account.\r\n *\r\n * For instance, if we are attempting to remove part of an \"immutable\" entity\r\n * range, the entire entity must be removed. The returned `SelectionState`\r\n * will be adjusted accordingly.\r\n */\r\nfunction getCharacterRemovalRange(\r\n  entityMap: EntityMap,\r\n  startBlock: BlockNodeRecord,\r\n  endBlock: BlockNodeRecord,\r\n  selectionState: SelectionState,\r\n  direction: DraftRemovalDirection,\r\n): SelectionState {\r\n  const start = selectionState.getStartOffset();\r\n  const end = selectionState.getEndOffset();\r\n  const startEntityKey = startBlock.getEntityAt(start);\r\n  const endEntityKey = endBlock.getEntityAt(end - 1);\r\n  if (!startEntityKey && !endEntityKey) {\r\n    return selectionState;\r\n  }\r\n  let newSelectionState:any = selectionState;\r\n  if (startEntityKey && startEntityKey === endEntityKey) {\r\n    newSelectionState = getEntityRemovalRange(\r\n      entityMap,\r\n      startBlock,\r\n      newSelectionState,\r\n      direction,\r\n      startEntityKey,\r\n      true,\r\n      true,\r\n    );\r\n  } else if (startEntityKey && endEntityKey) {\r\n    const startSelectionState = getEntityRemovalRange(\r\n      entityMap,\r\n      startBlock,\r\n      newSelectionState,\r\n      direction,\r\n      startEntityKey,\r\n      false,\r\n      true,\r\n    );\r\n    const endSelectionState = getEntityRemovalRange(\r\n      entityMap,\r\n      endBlock,\r\n      newSelectionState,\r\n      direction,\r\n      endEntityKey,\r\n      false,\r\n      false,\r\n    );\r\n    newSelectionState = newSelectionState.merge({\r\n      anchorOffset: startSelectionState.getAnchorOffset(),\r\n      focusOffset: endSelectionState.getFocusOffset(),\r\n      isBackward: false,\r\n    });\r\n  } else if (startEntityKey) {\r\n    const startSelectionState = getEntityRemovalRange(\r\n      entityMap,\r\n      startBlock,\r\n      newSelectionState,\r\n      direction,\r\n      startEntityKey,\r\n      false,\r\n      true,\r\n    );\r\n    newSelectionState = newSelectionState.merge({\r\n      anchorOffset: startSelectionState.getStartOffset(),\r\n      isBackward: false,\r\n    });\r\n  } else if (endEntityKey) {\r\n    const endSelectionState = getEntityRemovalRange(\r\n      entityMap,\r\n      endBlock,\r\n      newSelectionState,\r\n      direction,\r\n      endEntityKey,\r\n      false,\r\n      false,\r\n    );\r\n    newSelectionState = newSelectionState.merge({\r\n      focusOffset: endSelectionState.getEndOffset(),\r\n      isBackward: false,\r\n    });\r\n  }\r\n  return newSelectionState;\r\n}\r\n\r\nfunction getEntityRemovalRange(\r\n  entityMap: EntityMap,\r\n  block: BlockNodeRecord,\r\n  selectionState: SelectionState,\r\n  direction: DraftRemovalDirection,\r\n  entityKey: string,\r\n  isEntireSelectionWithinEntity: boolean,\r\n  isEntityAtStart: boolean,\r\n): SelectionState {\r\n  let start = selectionState.getStartOffset();\r\n  let end = selectionState.getEndOffset();\r\n  const entity = entityMap.__get(entityKey);\r\n  const mutability = entity.getMutability();\r\n  const sideToConsider = isEntityAtStart ? start : end;\r\n\r\n  // `MUTABLE` entities can just have the specified range of text removed\r\n  // directly. No adjustments are needed.\r\n  if (mutability === 'MUTABLE') {\r\n    return selectionState;\r\n  }\r\n\r\n  // Find the entity range that overlaps with our removal range.\r\n  const entityRanges = getRangesForDraftEntity(block, entityKey).filter(\r\n    range => sideToConsider <= range.end && sideToConsider >= range.start,\r\n  );\r\n\r\n  invariant(\r\n    entityRanges.length == 1,\r\n    'There should only be one entity range within this removal range.',\r\n  );\r\n\r\n  const entityRange = entityRanges[0];\r\n\r\n  // For `IMMUTABLE` entity types, we will remove the entire entity range.\r\n  if (mutability === 'IMMUTABLE') {\r\n    return selectionState.merge({\r\n      anchorOffset: entityRange.start,\r\n      focusOffset: entityRange.end,\r\n      isBackward: false,\r\n    }) as any;\r\n  }\r\n\r\n  // For `SEGMENTED` entity types, determine the appropriate segment to\r\n  // remove.\r\n  if (!isEntireSelectionWithinEntity) {\r\n    if (isEntityAtStart) {\r\n      end = entityRange.end;\r\n    } else {\r\n      start = entityRange.start;\r\n    }\r\n  }\r\n\r\n  const removalRange = DraftEntitySegments.getRemovalRange(\r\n    start,\r\n    end,\r\n    block.getText().slice(entityRange.start, entityRange.end),\r\n    entityRange.start,\r\n    direction,\r\n  );\r\n\r\n  return selectionState.merge({\r\n    anchorOffset: removalRange.start,\r\n    focusOffset: removalRange.end,\r\n    isBackward: false,\r\n  }) as any;\r\n}\r\n\r\nexport default  getCharacterRemovalRange;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nconst seenKeys = {};\r\nconst MULTIPLIER = Math.pow(2, 32);\r\n\r\nfunction generateRandomKey(): string {\r\n  let key;\r\n  while (key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(+key)) {\r\n    key = Math.floor(Math.random() * MULTIPLIER).toString(32);\r\n  }\r\n  seenKeys[key] = true;\r\n  return key;\r\n}\r\n\r\nexport default  generateRandomKey;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from '../immutable/BlockMap';\r\n\r\nimport ContentBlockNode from '../immutable/ContentBlockNode';\r\n\r\nimport generateRandomKey from '../keys/generateRandomKey';\r\nimport {OrderedMap}from 'immutable';\r\n\r\n\r\nconst randomizeContentBlockNodeKeys = (blockMap: BlockMap): BlockMap => {\r\n  const newKeysRef = {};\r\n\r\n  // we keep track of root blocks in order to update subsequent sibling links\r\n  let lastRootBlock: ContentBlockNode;\r\n\r\n  return OrderedMap(\r\n    blockMap\r\n      .withMutations(blockMapState => {\r\n        blockMapState.forEach((block:any, index) => {\r\n          const oldKey = block.getKey();\r\n          const nextKey = block.getNextSiblingKey();\r\n          const prevKey = block.getPrevSiblingKey();\r\n          const childrenKeys = block.getChildKeys();\r\n          const parentKey = block.getParentKey();\r\n\r\n          // new key that we will use to build linking\r\n          const key = generateRandomKey();\r\n\r\n          // we will add it here to re-use it later\r\n          newKeysRef[oldKey] = key;\r\n\r\n          if (nextKey) {\r\n            const nextBlock = blockMapState.get(nextKey);\r\n            if (nextBlock) {\r\n              blockMapState.setIn([nextKey, 'prevSibling'], key);\r\n            } else {\r\n              // this can happen when generating random keys for fragments\r\n              blockMapState.setIn([oldKey, 'nextSibling'], null);\r\n            }\r\n          }\r\n\r\n          if (prevKey) {\r\n            const prevBlock = blockMapState.get(prevKey);\r\n            if (prevBlock) {\r\n              blockMapState.setIn([prevKey, 'nextSibling'], key);\r\n            } else {\r\n              // this can happen when generating random keys for fragments\r\n              blockMapState.setIn([oldKey, 'prevSibling'], null);\r\n            }\r\n          }\r\n\r\n          if (parentKey && blockMapState.get(parentKey)) {\r\n            const parentBlock:any = blockMapState.get(parentKey);\r\n            const parentChildrenList = parentBlock.getChildKeys();\r\n            blockMapState.setIn(\r\n              [parentKey, 'children'],\r\n              parentChildrenList.set(\r\n                parentChildrenList.indexOf(block.getKey()),\r\n                key,\r\n              ),\r\n            );\r\n          } else {\r\n            // blocks will then be treated as root block nodes\r\n            blockMapState.setIn([oldKey, 'parent'], null);\r\n\r\n            if (lastRootBlock) {\r\n              blockMapState.setIn([lastRootBlock.getKey(), 'nextSibling'], key);\r\n              blockMapState.setIn(\r\n                [oldKey, 'prevSibling'],\r\n                newKeysRef[lastRootBlock.getKey()],\r\n              );\r\n            }\r\n\r\n            lastRootBlock = blockMapState.get(oldKey) as any ;\r\n          }\r\n\r\n          childrenKeys.forEach(childKey => {\r\n            const childBlock = blockMapState.get(childKey);\r\n            if (childBlock) {\r\n              blockMapState.setIn([childKey, 'parent'], key);\r\n            } else {\r\n              blockMapState.setIn(\r\n                [oldKey, 'children'],\r\n                block.getChildKeys().filter(child => child !== childKey),\r\n              );\r\n            }\r\n          });\r\n        });\r\n      })\r\n      .toArray()\r\n      .map(block => [\r\n        newKeysRef[block.getKey()],\r\n        block.set('key', newKeysRef[block.getKey()]),\r\n      ]),\r\n  );\r\n};\r\n\r\nconst randomizeContentBlockKeys = (blockMap: BlockMap): BlockMap => {\r\n  return OrderedMap(\r\n    blockMap.toArray().map(block => {\r\n      const key = generateRandomKey();\r\n      return [key, block.set('key', key)];\r\n    }),\r\n  );\r\n};\r\n\r\nconst randomizeBlockMapKeys = (blockMap: BlockMap): BlockMap => {\r\n  const isTreeBasedBlockMap = blockMap.first() instanceof ContentBlockNode;\r\n\r\n  if (!isTreeBasedBlockMap) {\r\n    return randomizeContentBlockKeys(blockMap);\r\n  }\r\n\r\n  return randomizeContentBlockNodeKeys(blockMap);\r\n};\r\n\r\nexport default  randomizeBlockMapKeys;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport  ContentState from '../immutable/ContentState';\r\nimport {EntityMap} from '../immutable/EntityMap';\r\nimport  SelectionState from '../immutable/SelectionState';\r\nimport  {List} from 'immutable';\r\n\r\nimport CharacterMetadata from '../immutable/CharacterMetadata';\r\n\r\nimport findRangesImmutable from '../immutable/findRangesImmutable';\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\nfunction removeEntitiesAtEdges(\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n): ContentState {\r\n  const blockMap = contentState.getBlockMap();\r\n  const entityMap = contentState.getEntityMap();\r\n\r\n  const updatedBlocks = {};\r\n\r\n  const startKey = selectionState.getStartKey();\r\n  const startOffset = selectionState.getStartOffset();\r\n  const startBlock = blockMap.get(startKey);\r\n  const updatedStart = removeForBlock(entityMap, startBlock, startOffset);\r\n\r\n  if (updatedStart !== startBlock) {\r\n    updatedBlocks[startKey] = updatedStart;\r\n  }\r\n\r\n  const endKey = selectionState.getEndKey();\r\n  const endOffset = selectionState.getEndOffset();\r\n  let endBlock = blockMap.get(endKey);\r\n  if (startKey === endKey) {\r\n    endBlock = updatedStart;\r\n  }\r\n\r\n  const updatedEnd = removeForBlock(entityMap, endBlock, endOffset);\r\n\r\n  if (updatedEnd !== endBlock) {\r\n    updatedBlocks[endKey] = updatedEnd;\r\n  }\r\n\r\n  if (!Object.keys(updatedBlocks).length) {\r\n    return contentState.set('selectionAfter', selectionState) as any;\r\n  }\r\n\r\n  return contentState.merge({\r\n    blockMap: blockMap.merge(updatedBlocks),\r\n    selectionAfter: selectionState,\r\n  }) as any;\r\n}\r\n\r\n/**\r\n * Given a list of characters and an offset that is in the middle of an entity,\r\n * returns the start and end of the entity that is overlapping the offset.\r\n * Note: This method requir es that the offset be in an entity range.\r\n */\r\nfunction getRemovalRange(\r\n  characters: List<CharacterMetadata>,\r\n  entityKey: string,\r\n  offset: number,\r\n): {\r\n  start: number,\r\n  end: number,\r\n} {\r\n  let removalRange;\r\n\r\n  // Iterates through a list looking for ranges of matching items\r\n  // based on the 'isEqual' callback.\r\n  // Then instead of returning the result, call the 'found' callback\r\n  // with each range.\r\n  // Then filters those ranges based on the 'filter' callback\r\n  //\r\n  // Here we use it to find ranges of characters with the same entity key.\r\n  findRangesImmutable(\r\n    characters, // the list to iterate through\r\n    (a, b) => a.getEntity() === b.getEntity(), // 'isEqual' callback\r\n    element => element.getEntity() === entityKey, // 'filter' callback\r\n    (start: number, end: number) => {\r\n      // 'found' callback\r\n      if (start <= offset && end >= offset) {\r\n        // this entity overlaps the offset index\r\n        removalRange = {start, end};\r\n      }\r\n    },\r\n  );\r\n  invariant(\r\n    typeof removalRange === 'object',\r\n    'Removal range must exist within character list.',\r\n  );\r\n  return removalRange;\r\n}\r\n\r\nfunction removeForBlock(\r\n  entityMap: EntityMap,\r\n  block: BlockNodeRecord,\r\n  offset: number,\r\n): BlockNodeRecord {\r\n  let chars = block.getCharacterList();\r\n  const charBefore = offset > 0 ? chars.get(offset - 1) : undefined;\r\n  const charAfter = offset < chars.count() ? chars.get(offset) : undefined;\r\n  const entityBeforeCursor = charBefore ? charBefore.getEntity() : undefined;\r\n  const entityAfterCursor = charAfter ? charAfter.getEntity() : undefined;\r\n\r\n  if (entityAfterCursor && entityAfterCursor === entityBeforeCursor) {\r\n    const entity = entityMap.__get(entityAfterCursor);\r\n    if (entity.getMutability() !== 'MUTABLE') {\r\n      let {start, end} = getRemovalRange(chars, entityAfterCursor, offset);\r\n      let current;\r\n      while (start < end) {\r\n        current = chars.get(start);\r\n        chars = chars.set(start, CharacterMetadata.applyEntity(current, null));\r\n        start++;\r\n      }\r\n      return block.set('characterList', chars) as any;\r\n    }\r\n  }\r\n\r\n  return block;\r\n}\r\n\r\nexport default  removeEntitiesAtEdges;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from '../immutable/BlockMap';\r\nimport  ContentState from '../immutable/ContentState';\r\nimport SelectionState from '../immutable/SelectionState';\r\n\r\nimport randomizeBlockMapKeys from './randomizeBlockMapKeys';\r\nimport removeEntitiesAtEdges from './removeEntitiesAtEdges';\r\n\r\nconst getContentStateFragment = (\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n): BlockMap => {\r\n  const startKey = selectionState.getStartKey();\r\n  const startOffset = selectionState.getStartOffset();\r\n  const endKey = selectionState.getEndKey();\r\n  const endOffset = selectionState.getEndOffset();\r\n\r\n  // Edge entities should be stripped to ensure that we don't preserve\r\n  // invalid partial entities when the fragment is reused. We do, however,\r\n  // preserve entities that are entirely within the selection range.\r\n  const contentWithoutEdgeEntities = removeEntitiesAtEdges(\r\n    contentState,\r\n    selectionState,\r\n  );\r\n\r\n  const blockMap = contentWithoutEdgeEntities.getBlockMap();\r\n  const blockKeys = blockMap.keySeq();\r\n  const startIndex = blockKeys.indexOf(startKey);\r\n  const endIndex = blockKeys.indexOf(endKey) + 1;\r\n\r\n  return randomizeBlockMapKeys(\r\n    blockMap.slice(startIndex, endIndex).map((block, blockKey) => {\r\n      const text = block.getText();\r\n      const chars = block.getCharacterList();\r\n\r\n      if (startKey === endKey) {\r\n        return block.merge({\r\n          text: text.slice(startOffset, endOffset),\r\n          characterList: chars.slice(startOffset, endOffset),\r\n        });\r\n      }\r\n\r\n      if (blockKey === startKey) {\r\n        return block.merge({\r\n          text: text.slice(startOffset),\r\n          characterList: chars.slice(startOffset),\r\n        });\r\n      }\r\n\r\n      if (blockKey === endKey) {\r\n        return block.merge({\r\n          text: text.slice(0, endOffset),\r\n          characterList: chars.slice(0, endOffset),\r\n        });\r\n      }\r\n\r\n      return block;\r\n    }) as any,\r\n  );\r\n};\r\n\r\nexport default  getContentStateFragment;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {List} from 'immutable';\r\n\r\n/**\r\n * Maintain persistence for target list when appending and prepending.\r\n */\r\nfunction insertIntoList<T>(\r\n  targetListArg: List<T>,\r\n  toInsert: List<T>,\r\n  offset: number,\r\n): List<T> {\r\n  let targetList = targetListArg;\r\n  if (offset === targetList.count()) {\r\n    toInsert.forEach(c => {\r\n      targetList = targetList.push(c);\r\n    });\r\n  } else if (offset === 0) {\r\n    toInsert.reverse().forEach(c => {\r\n      targetList = targetList.unshift(c);\r\n    });\r\n  } else {\r\n    const head = targetList.slice(0, offset);\r\n    const tail = targetList.slice(offset);\r\n    targetList = head.concat(toInsert, tail).toList();\r\n  }\r\n  return targetList;\r\n}\r\n\r\nexport default  insertIntoList;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {BlockMap} from '../immutable/BlockMap';\r\nimport  {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nimport BlockMapBuilder from '../immutable/BlockMapBuilder';\r\nimport ContentBlockNode from '../immutable/ContentBlockNode';\r\n\r\nimport {List  } from 'immutable';\r\nimport insertIntoList from './insertIntoList';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport randomizeBlockMapKeys from './randomizeBlockMapKeys';\r\n\r\n\r\nexport type BlockDataMergeBehavior =\r\n  | 'REPLACE_WITH_NEW_DATA'\r\n  | 'MERGE_OLD_DATA_TO_NEW_DATA';\r\n\r\nconst updateExistingBlock = (\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n  blockMap: BlockMap,\r\n  fragmentBlock: BlockNodeRecord,\r\n  targetKey: string,\r\n  targetOffset: number,\r\n  mergeBlockData: BlockDataMergeBehavior = 'REPLACE_WITH_NEW_DATA',\r\n): ContentState => {\r\n  const targetBlock = blockMap.get(targetKey);\r\n  const text = targetBlock.getText();\r\n  const chars = targetBlock.getCharacterList();\r\n  const finalKey = targetKey;\r\n  const finalOffset = targetOffset + fragmentBlock.getText().length;\r\n\r\n  let data = null;\r\n\r\n  switch (mergeBlockData) {\r\n    case 'MERGE_OLD_DATA_TO_NEW_DATA':\r\n      data = fragmentBlock.getData().merge(targetBlock.getData());\r\n      break;\r\n    case 'REPLACE_WITH_NEW_DATA':\r\n      data = fragmentBlock.getData();\r\n      break;\r\n  }\r\n\r\n  const newBlock:any = targetBlock.merge({\r\n    text:\r\n      text.slice(0, targetOffset) +\r\n      fragmentBlock.getText() +\r\n      text.slice(targetOffset),\r\n    characterList: insertIntoList(\r\n      chars,\r\n      fragmentBlock.getCharacterList(),\r\n      targetOffset,\r\n    ),\r\n    data,\r\n  });\r\n\r\n  return contentState.merge({\r\n    blockMap: blockMap.set(targetKey, newBlock),\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState.merge({\r\n      anchorKey: finalKey,\r\n      anchorOffset: finalOffset,\r\n      focusKey: finalKey,\r\n      focusOffset: finalOffset,\r\n      isBackward: false,\r\n    }),\r\n  }) as any;\r\n};\r\n\r\n/**\r\n * Appends text/characterList from the fragment first block to\r\n * target block.\r\n */\r\nconst updateHead = (\r\n  block: BlockNodeRecord,\r\n  targetOffset: number,\r\n  fragment: BlockMap,\r\n): BlockNodeRecord => {\r\n  const text = block.getText();\r\n  const chars = block.getCharacterList();\r\n\r\n  // Modify head portion of block.\r\n  const headText = text.slice(0, targetOffset);\r\n  const headCharacters = chars.slice(0, targetOffset);\r\n  const appendToHead = fragment.first();\r\n\r\n  return block.merge({\r\n    text: headText + appendToHead.getText(),\r\n    characterList: headCharacters.concat(appendToHead.getCharacterList()),\r\n    type: headText ? block.getType() : appendToHead.getType(),\r\n    data: appendToHead.getData(),\r\n  }) as any;\r\n};\r\n\r\n/**\r\n * Appends offset text/characterList from the target block to the last\r\n * fragment block.\r\n */\r\nconst updateTail = (\r\n  block: BlockNodeRecord,\r\n  targetOffset: number,\r\n  fragment: BlockMap,\r\n): BlockNodeRecord => {\r\n  // Modify tail portion of block.\r\n  const text = block.getText();\r\n  const chars = block.getCharacterList();\r\n\r\n  // Modify head portion of block.\r\n  const blockSize = text.length;\r\n  const tailText = text.slice(targetOffset, blockSize);\r\n  const tailCharacters = chars.slice(targetOffset, blockSize);\r\n  const prependToTail = fragment.last();\r\n\r\n  return prependToTail.merge({\r\n    text: prependToTail.getText() + tailText,\r\n    characterList: prependToTail.getCharacterList().concat(tailCharacters),\r\n    data: prependToTail.getData(),\r\n  }) as any;\r\n};\r\n\r\nconst getRootBlocks = (\r\n  block: ContentBlockNode,\r\n  blockMap: BlockMap,\r\n): Array<string> => {\r\n  const headKey = block.getKey();\r\n  let rootBlock:any = block;\r\n  const rootBlocks = [];\r\n\r\n  // sometimes the fragment head block will not be part of the blockMap itself this can happen when\r\n  // the fragment head is used to update the target block, however when this does not happen we need\r\n  // to make sure that we include it on the rootBlocks since the first block of a fragment is always a\r\n  // fragment root block\r\n  if (blockMap.get(headKey)) {\r\n    rootBlocks.push(headKey);\r\n  }\r\n\r\n  while (rootBlock && rootBlock.getNextSiblingKey()) {\r\n    const lastSiblingKey = rootBlock.getNextSiblingKey();\r\n\r\n    if (!lastSiblingKey) {\r\n      break;\r\n    }\r\n\r\n    rootBlocks.push(lastSiblingKey);\r\n    rootBlock = blockMap.get(lastSiblingKey);\r\n  }\r\n\r\n  return rootBlocks;\r\n};\r\n\r\nconst updateBlockMapLinks = (\r\n  blockMap: BlockMap,\r\n  originalBlockMap: BlockMap,\r\n  targetBlock: ContentBlockNode,\r\n  fragmentHeadBlock: ContentBlockNode,\r\n): BlockMap => {\r\n  return blockMap.withMutations(blockMapState => {\r\n    const targetKey = targetBlock.getKey();\r\n    const headKey = fragmentHeadBlock.getKey();\r\n    const targetNextKey = targetBlock.getNextSiblingKey();\r\n    const targetParentKey = targetBlock.getParentKey();\r\n    const fragmentRootBlocks = getRootBlocks(fragmentHeadBlock, blockMap);\r\n    const lastRootFragmentBlockKey =\r\n      fragmentRootBlocks[fragmentRootBlocks.length - 1];\r\n\r\n    if (blockMapState.get(headKey)) {\r\n      // update the fragment head when it is part of the blockMap otherwise\r\n      blockMapState.setIn([targetKey, 'nextSibling'], headKey);\r\n      blockMapState.setIn([headKey, 'prevSibling'], targetKey);\r\n    } else {\r\n      // update the target block that had the fragment head contents merged into it\r\n      blockMapState.setIn(\r\n        [targetKey, 'nextSibling'],\r\n        fragmentHeadBlock.getNextSiblingKey(),\r\n      );\r\n      blockMapState.setIn(\r\n        [fragmentHeadBlock.getNextSiblingKey(), 'prevSibling'],\r\n        targetKey,\r\n      );\r\n    }\r\n\r\n    // update the last root block fragment\r\n    blockMapState.setIn(\r\n      [lastRootFragmentBlockKey, 'nextSibling'],\r\n      targetNextKey,\r\n    );\r\n\r\n    // update the original target next block\r\n    if (targetNextKey) {\r\n      blockMapState.setIn(\r\n        [targetNextKey, 'prevSibling'],\r\n        lastRootFragmentBlockKey,\r\n      );\r\n    }\r\n\r\n    // update fragment parent links\r\n    fragmentRootBlocks.forEach(blockKey =>\r\n      blockMapState.setIn([blockKey, 'parent'], targetParentKey),\r\n    );\r\n\r\n    // update targetBlock parent child links\r\n    if (targetParentKey) {\r\n      const targetParent:any = blockMap.get(targetParentKey);\r\n      const originalTargetParentChildKeys = targetParent.getChildKeys();\r\n\r\n      const targetBlockIndex = originalTargetParentChildKeys.indexOf(targetKey);\r\n      const insertionIndex = targetBlockIndex + 1;\r\n\r\n      const newChildrenKeysArray = originalTargetParentChildKeys.toArray();\r\n\r\n      // insert fragment children\r\n      newChildrenKeysArray.splice(insertionIndex, 0, ...fragmentRootBlocks);\r\n\r\n      blockMapState.setIn(\r\n        [targetParentKey, 'children'],\r\n        List(newChildrenKeysArray),\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nconst insertFragment = (\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n  blockMap: BlockMap,\r\n  fragment: BlockMap,\r\n  targetKey: string,\r\n  targetOffset: number,\r\n): ContentState => {\r\n  const isTreeBasedBlockMap = blockMap.first() instanceof ContentBlockNode;\r\n  const newBlockArr = [];\r\n  const fragmentSize = fragment.size;\r\n  const target:any = blockMap.get(targetKey);\r\n  const head:any = fragment.first();\r\n  const tail = fragment.last();\r\n  const finalOffset = tail.getLength();\r\n  const finalKey = tail.getKey();\r\n  const shouldNotUpdateFromFragmentBlock =\r\n    isTreeBasedBlockMap &&\r\n    (!target.getChildKeys().isEmpty() || !head.getChildKeys().isEmpty());\r\n\r\n  blockMap.forEach((block, blockKey) => {\r\n    if (blockKey !== targetKey) {\r\n      newBlockArr.push(block);\r\n      return;\r\n    }\r\n\r\n    if (shouldNotUpdateFromFragmentBlock) {\r\n      newBlockArr.push(block);\r\n    } else {\r\n      newBlockArr.push(updateHead(block, targetOffset, fragment));\r\n    }\r\n\r\n    // Insert fragment blocks after the head and before the tail.\r\n    fragment\r\n      // when we are updating the target block with the head fragment block we skip the first fragment\r\n      // head since its contents have already been merged with the target block otherwise we include\r\n      // the whole fragment\r\n      .slice(shouldNotUpdateFromFragmentBlock ? 0 : 1, fragmentSize - 1)\r\n      .forEach(fragmentBlock => newBlockArr.push(fragmentBlock));\r\n\r\n    // update tail\r\n    newBlockArr.push(updateTail(block, targetOffset, fragment));\r\n  });\r\n\r\n  let updatedBlockMap = BlockMapBuilder.createFromArray(newBlockArr);\r\n\r\n  if (isTreeBasedBlockMap) {\r\n    updatedBlockMap = updateBlockMapLinks(\r\n      updatedBlockMap,\r\n      blockMap,\r\n      target,\r\n      head,\r\n    );\r\n  }\r\n\r\n  return contentState.merge({\r\n    blockMap: updatedBlockMap,\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState.merge({\r\n      anchorKey: finalKey,\r\n      anchorOffset: finalOffset,\r\n      focusKey: finalKey,\r\n      focusOffset: finalOffset,\r\n      isBackward: false,\r\n    }),\r\n  }) as any;\r\n};\r\n\r\nconst insertFragmentIntoContentState = (\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n  fragmentBlockMap: BlockMap,\r\n  mergeBlockData: BlockDataMergeBehavior = 'REPLACE_WITH_NEW_DATA',\r\n): ContentState => {\r\n  invariant(\r\n    selectionState.isCollapsed(),\r\n    '`insertFragment` should only be called with a collapsed selection state.',\r\n  );\r\n\r\n  const blockMap = contentState.getBlockMap();\r\n  const fragment = randomizeBlockMapKeys(fragmentBlockMap);\r\n  const targetKey = selectionState.getStartKey();\r\n  const targetOffset = selectionState.getStartOffset();\r\n\r\n  const targetBlock = blockMap.get(targetKey);\r\n\r\n  if (targetBlock instanceof ContentBlockNode) {\r\n    invariant(\r\n      targetBlock.getChildKeys().isEmpty(),\r\n      '`insertFragment` should not be called when a container node is selected.',\r\n    );\r\n  }\r\n\r\n  // When we insert a fragment with a single block we simply update the target block\r\n  // with the contents of the inserted fragment block\r\n  if (fragment.size === 1) {\r\n    return updateExistingBlock(\r\n      contentState,\r\n      selectionState,\r\n      blockMap,\r\n      fragment.first(),\r\n      targetKey,\r\n      targetOffset,\r\n      mergeBlockData,\r\n    );\r\n  }\r\n\r\n  return insertFragment(\r\n    contentState,\r\n    selectionState,\r\n    blockMap,\r\n    fragment,\r\n    targetKey,\r\n    targetOffset,\r\n  );\r\n};\r\n\r\nexport default  insertFragmentIntoContentState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {  Repeat } from 'immutable';\r\nimport insertIntoList from './insertIntoList';\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\n\r\nimport  CharacterMetadata from '../immutable/CharacterMetadata';\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nfunction insertTextIntoContentState(\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n  text: string,\r\n  characterMetadata: CharacterMetadata,\r\n): ContentState {\r\n  invariant(\r\n    selectionState.isCollapsed(),\r\n    '`insertText` should only be called with a collapsed range.',\r\n  );\r\n\r\n  let len: number = null;\r\n  if (text != null) {\r\n    len = text.length;\r\n  }\r\n\r\n  if (len == null || len === 0) {\r\n    return contentState;\r\n  }\r\n\r\n  const blockMap = contentState.getBlockMap();\r\n  const key = selectionState.getStartKey();\r\n  const offset = selectionState.getStartOffset();\r\n  const block = blockMap.get(key);\r\n  const blockText = block.getText();\r\n\r\n  const newBlock:any = block.merge({\r\n    text:\r\n      blockText.slice(0, offset) +\r\n      text +\r\n      blockText.slice(offset, block.getLength()),\r\n    characterList: insertIntoList(\r\n      block.getCharacterList(),\r\n      Repeat(characterMetadata, len).toList(),\r\n      offset,\r\n    ),\r\n  });\r\n\r\n  const newOffset = offset + len;\r\n\r\n  return contentState.merge({\r\n    blockMap: blockMap.set(key, newBlock),\r\n    selectionAfter: selectionState.merge({\r\n      anchorOffset: newOffset,\r\n      focusOffset: newOffset,\r\n    }),\r\n  }) as any;\r\n}\r\n\r\nexport default  insertTextIntoContentState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nimport { Map } from 'immutable';\r\n\r\n\r\nfunction modifyBlockForContentState(\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n  operation: (block: BlockNodeRecord) => BlockNodeRecord,\r\n): ContentState {\r\n  const startKey = selectionState.getStartKey();\r\n  const endKey = selectionState.getEndKey();\r\n  const blockMap = contentState.getBlockMap();\r\n  const newBlocks = blockMap\r\n    .toSeq()\r\n    .skipUntil((_, k) => k === startKey)\r\n    .takeUntil((_, k) => k === endKey)\r\n    .concat(Map([[endKey, blockMap.get(endKey)]]))\r\n    .map(operation);\r\n\r\n  return contentState.merge({\r\n    blockMap: blockMap.merge(newBlocks),\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState,\r\n  }) as any ;\r\n}\r\n\r\nexport default  modifyBlockForContentState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n *\r\n * This is unstable and not part of the public API and should not be used by\r\n * production systems. This file may be update/removed without notice.\r\n */\r\n\r\nimport  {BlockMap} from '../../immutable/BlockMap';\r\nimport  {BlockNodeRecord} from '../../immutable/BlockNodeRecord';\r\n\r\nimport ContentBlockNode from '../../immutable/ContentBlockNode';\r\n\r\nconst getNextDelimiterBlockKey = (\r\n  block: BlockNodeRecord,\r\n  blockMap: BlockMap,\r\n): string => {\r\n  const isExperimentalTreeBlock = block instanceof ContentBlockNode;\r\n\r\n  if (!isExperimentalTreeBlock) {\r\n    return null;\r\n  }\r\n\r\n  const nextSiblingKey = block.getNextSiblingKey();\r\n\r\n  if (nextSiblingKey) {\r\n    return nextSiblingKey;\r\n  }\r\n\r\n  const parent = block.getParentKey();\r\n\r\n  if (!parent) {\r\n    return null;\r\n  }\r\n\r\n  let nextNonDescendantBlock = blockMap.get(parent);\r\n  while (\r\n    nextNonDescendantBlock &&\r\n    !nextNonDescendantBlock.getNextSiblingKey()\r\n  ) {\r\n    const parentKey = nextNonDescendantBlock.getParentKey();\r\n    nextNonDescendantBlock = parentKey ? blockMap.get(parentKey) : null;\r\n  }\r\n\r\n  if (!nextNonDescendantBlock) {\r\n    return null;\r\n  }\r\n\r\n  return nextNonDescendantBlock.getNextSiblingKey();\r\n};\r\n\r\nexport default  getNextDelimiterBlockKey;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from '../immutable/BlockMap';\r\nimport  CharacterMetadata from '../immutable/CharacterMetadata';\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nimport ContentBlockNode from '../immutable/ContentBlockNode';\r\n\r\nimport getNextDelimiterBlockKey from './exploration/getNextDelimiterBlockKey';\r\nimport {List, Map}from 'immutable';\r\n\r\n\r\nconst transformBlock = (\r\n  key: string,\r\n  blockMap: BlockMap,\r\n  func: (block: ContentBlockNode) => ContentBlockNode,\r\n): void => {\r\n  if (!key) {\r\n    return;\r\n  }\r\n\r\n  const block:any = blockMap.get(key);\r\n\r\n  if (!block) {\r\n    return;\r\n  }\r\n\r\n  blockMap.set(key, func(block));\r\n};\r\n\r\n/**\r\n * Ancestors needs to be preserved when there are non selected\r\n * children to make sure we do not leave any orphans behind\r\n */\r\nconst getAncestorsKeys = (\r\n  blockKey: string,\r\n  blockMap: BlockMap,\r\n): Array<string> => {\r\n  const parents = [];\r\n\r\n  if (!blockKey) {\r\n    return parents;\r\n  }\r\n\r\n  let blockNode = blockMap.get(blockKey);\r\n  while (blockNode && blockNode.getParentKey()) {\r\n    const parentKey = blockNode.getParentKey();\r\n    if (parentKey) {\r\n      parents.push(parentKey);\r\n    }\r\n    blockNode = parentKey ? blockMap.get(parentKey) : null;\r\n  }\r\n\r\n  return parents;\r\n};\r\n\r\n/**\r\n * Get all next delimiter keys until we hit a root delimiter and return\r\n * an array of key references\r\n */\r\nconst getNextDelimitersBlockKeys = (\r\n  block: ContentBlockNode,\r\n  blockMap: BlockMap,\r\n): Array<string> => {\r\n  const nextDelimiters = [];\r\n\r\n  if (!block) {\r\n    return nextDelimiters;\r\n  }\r\n\r\n  let nextDelimiter = getNextDelimiterBlockKey(block, blockMap);\r\n  while (nextDelimiter && blockMap.get(nextDelimiter)) {\r\n    const block = blockMap.get(nextDelimiter);\r\n    nextDelimiters.push(nextDelimiter);\r\n\r\n    // we do not need to keep checking all root node siblings, just the first occurance\r\n    nextDelimiter = block.getParentKey()\r\n      ? getNextDelimiterBlockKey(block, blockMap)\r\n      : null;\r\n  }\r\n\r\n  return nextDelimiters;\r\n};\r\n\r\nconst getNextValidSibling = (\r\n  block: ContentBlockNode,\r\n  blockMap: BlockMap,\r\n  originalBlockMap: BlockMap,\r\n): string => {\r\n  if (!block) {\r\n    return null;\r\n  }\r\n\r\n  // note that we need to make sure we refer to the original block since this\r\n  // function is called within a withMutations\r\n  let nextValidSiblingKey = originalBlockMap\r\n    .get(block.getKey())\r\n    .getNextSiblingKey();\r\n\r\n  while (nextValidSiblingKey && !blockMap.get(nextValidSiblingKey)) {\r\n    nextValidSiblingKey =\r\n      originalBlockMap.get(nextValidSiblingKey).getNextSiblingKey() || null;\r\n  }\r\n\r\n  return nextValidSiblingKey;\r\n};\r\n\r\nconst getPrevValidSibling = (\r\n  block: ContentBlockNode,\r\n  blockMap: BlockMap,\r\n  originalBlockMap: BlockMap,\r\n): string => {\r\n  if (!block) {\r\n    return null;\r\n  }\r\n\r\n  // note that we need to make sure we refer to the original block since this\r\n  // function is called within a withMutations\r\n  let prevValidSiblingKey = originalBlockMap\r\n    .get(block.getKey())\r\n    .getPrevSiblingKey();\r\n\r\n  while (prevValidSiblingKey && !blockMap.get(prevValidSiblingKey)) {\r\n    prevValidSiblingKey =\r\n      originalBlockMap.get(prevValidSiblingKey).getPrevSiblingKey() || null;\r\n  }\r\n\r\n  return prevValidSiblingKey;\r\n};\r\n\r\nconst updateBlockMapLinks = (\r\n  blockMap: BlockMap,\r\n  startBlock: ContentBlockNode,\r\n  endBlock: ContentBlockNode,\r\n  originalBlockMap: BlockMap,\r\n): BlockMap => {\r\n  return blockMap.withMutations(blocks => {\r\n    // update start block if its retained\r\n    transformBlock(startBlock.getKey(), blocks, block =>\r\n      block.merge({\r\n        nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\r\n        prevSibling: getPrevValidSibling(block, blocks, originalBlockMap),\r\n      }) as any,\r\n    );\r\n\r\n    // update endblock if its retained\r\n    transformBlock(endBlock.getKey(), blocks, block =>\r\n      block.merge({\r\n        nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\r\n        prevSibling: getPrevValidSibling(block, blocks, originalBlockMap),\r\n      }) as any,\r\n    );\r\n\r\n    // update start block parent ancestors\r\n    getAncestorsKeys(startBlock.getKey(), originalBlockMap).forEach(parentKey =>\r\n      transformBlock(parentKey, blocks, block =>\r\n        block.merge({\r\n          children: block.getChildKeys().filter(key => blocks.get(key) as any),\r\n          nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\r\n          prevSibling: getPrevValidSibling(block, blocks, originalBlockMap),\r\n        }) as any,\r\n      ),\r\n    );\r\n\r\n    // update start block next - can only happen if startBlock == endBlock\r\n    transformBlock(startBlock.getNextSiblingKey(), blocks, block =>\r\n      block.merge({\r\n        prevSibling: startBlock.getPrevSiblingKey(),\r\n      }) as any,\r\n    );\r\n\r\n    // update start block prev\r\n    transformBlock(startBlock.getPrevSiblingKey(), blocks, block =>\r\n      block.merge({\r\n        nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\r\n      }) as any,\r\n    );\r\n\r\n    // update end block next\r\n    transformBlock(endBlock.getNextSiblingKey(), blocks, block =>\r\n      block.merge({\r\n        prevSibling: getPrevValidSibling(block, blocks, originalBlockMap),\r\n      }) as any,\r\n    );\r\n\r\n    // update end block prev\r\n    transformBlock(endBlock.getPrevSiblingKey(), blocks, block =>\r\n      block.merge({\r\n        nextSibling: endBlock.getNextSiblingKey(),\r\n      }) as any,\r\n    );\r\n\r\n    // update end block parent ancestors\r\n    getAncestorsKeys(endBlock.getKey(), originalBlockMap).forEach(parentKey => {\r\n      transformBlock(parentKey, blocks, block =>\r\n        block.merge({\r\n          children: block.getChildKeys().filter(key => blocks.get(key) as any),\r\n          nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\r\n          prevSibling: getPrevValidSibling(block, blocks, originalBlockMap),\r\n        }) as any,\r\n      );\r\n    });\r\n\r\n    // update next delimiters all the way to a root delimiter\r\n    getNextDelimitersBlockKeys(endBlock, originalBlockMap).forEach(\r\n      delimiterKey =>\r\n        transformBlock(delimiterKey, blocks, block =>\r\n          block.merge({\r\n            nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\r\n            prevSibling: getPrevValidSibling(block, blocks, originalBlockMap),\r\n          }) as any,\r\n        ),\r\n    );\r\n\r\n    // if parent (startBlock) was deleted\r\n    if (\r\n      blockMap.get(startBlock.getKey()) == null &&\r\n      blockMap.get(endBlock.getKey()) != null &&\r\n      endBlock.getParentKey() === startBlock.getKey() &&\r\n      endBlock.getPrevSiblingKey() == null\r\n    ) {\r\n      const prevSiblingKey = startBlock.getPrevSiblingKey();\r\n      // endBlock becomes next sibling of parent's prevSibling\r\n      transformBlock(endBlock.getKey(), blocks, block =>\r\n        block.merge({\r\n          prevSibling: prevSiblingKey,\r\n        }) as any,\r\n      );\r\n      transformBlock(prevSiblingKey, blocks, block =>\r\n        block.merge({\r\n          nextSibling: endBlock.getKey(),\r\n        }) as any,\r\n      );\r\n\r\n      // Update parent for previous parent's children, and children for that parent\r\n      const prevSibling = prevSiblingKey ? blockMap.get(prevSiblingKey) : null;\r\n      const newParentKey = prevSibling ? prevSibling.getParentKey() : null;\r\n      startBlock.getChildKeys().forEach(childKey => {\r\n        transformBlock(childKey, blocks, block =>\r\n          block.merge({\r\n            parent: newParentKey, // set to null if there is no parent\r\n          }) as any,\r\n        );\r\n      });\r\n      if (newParentKey != null) {\r\n        const newParent:any = blockMap.get(newParentKey);\r\n        transformBlock(newParentKey, blocks, block =>\r\n          block.merge({\r\n            children: newParent\r\n              .getChildKeys() \r\n              .concat(startBlock.getChildKeys()),\r\n          }) as any,\r\n        );\r\n      }\r\n\r\n      // last child of deleted parent should point to next sibling\r\n      transformBlock(\r\n        startBlock.getChildKeys().find(key => {\r\n          const block = (blockMap.get(key) as ContentBlockNode);\r\n          return block.getNextSiblingKey() === null;\r\n        }),\r\n        blocks,\r\n        block =>\r\n          block.merge({\r\n            nextSibling: startBlock.getNextSiblingKey(),\r\n          }) as any,\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nconst removeRangeFromContentState = (\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n): ContentState => {\r\n  if (selectionState.isCollapsed()) {\r\n    return contentState;\r\n  }\r\n\r\n  const blockMap = contentState.getBlockMap();\r\n  const startKey = selectionState.getStartKey();\r\n  const startOffset = selectionState.getStartOffset();\r\n  const endKey = selectionState.getEndKey();\r\n  const endOffset = selectionState.getEndOffset();\r\n\r\n  const startBlock:any = blockMap.get(startKey);\r\n  const endBlock:any = blockMap.get(endKey);\r\n\r\n  // we assume that ContentBlockNode and ContentBlocks are not mixed together\r\n  const isExperimentalTreeBlock = startBlock instanceof ContentBlockNode;\r\n\r\n  // used to retain blocks that should not be deleted to avoid orphan children\r\n  let parentAncestors = [];\r\n\r\n  if (isExperimentalTreeBlock) {\r\n    const endBlockchildrenKeys = endBlock.getChildKeys();\r\n    const endBlockAncestors = getAncestorsKeys(endKey, blockMap);\r\n\r\n    // endBlock has unselected siblings so we can not remove its ancestors parents\r\n    if (endBlock.getNextSiblingKey()) {\r\n      parentAncestors = parentAncestors.concat(endBlockAncestors);\r\n    }\r\n\r\n    // endBlock has children so can not remove this block or any of its ancestors\r\n    if (!endBlockchildrenKeys.isEmpty()) {\r\n      parentAncestors = parentAncestors.concat(\r\n        endBlockAncestors.concat([endKey]),\r\n      );\r\n    }\r\n\r\n    // we need to retain all ancestors of the next delimiter block\r\n    parentAncestors = parentAncestors.concat(\r\n      getAncestorsKeys(getNextDelimiterBlockKey(endBlock, blockMap), blockMap),\r\n    );\r\n  }\r\n\r\n  let characterList;\r\n\r\n  if (startBlock === endBlock) {\r\n    characterList = removeFromList(\r\n      startBlock.getCharacterList(),\r\n      startOffset,\r\n      endOffset,\r\n    );\r\n  } else {\r\n    characterList = startBlock\r\n      .getCharacterList()\r\n      .slice(0, startOffset)\r\n      .concat(endBlock.getCharacterList().slice(endOffset));\r\n  }\r\n\r\n  const modifiedStart = startBlock.merge({\r\n    text:\r\n      startBlock.getText().slice(0, startOffset) +\r\n      endBlock.getText().slice(endOffset),\r\n    characterList,\r\n  });\r\n\r\n  // If cursor (collapsed) is at the start of the first child, delete parent\r\n  // instead of child\r\n  const shouldDeleteParent =\r\n    isExperimentalTreeBlock &&\r\n    startOffset === 0 &&\r\n    endOffset === 0 &&\r\n    endBlock.getParentKey() === startKey &&\r\n    endBlock.getPrevSiblingKey() == null;\r\n  const newBlocks:any = shouldDeleteParent\r\n    ? Map([[startKey, null]])\r\n    : blockMap\r\n        .toSeq()\r\n        .skipUntil((_, k) => k === startKey)\r\n        .takeUntil((_, k) => k === endKey)\r\n        .filter((_, k) => parentAncestors.indexOf(k) === -1)\r\n        .concat(Map([[endKey, null]]))\r\n        .map((_, k) => {\r\n          return k === startKey ? modifiedStart : null;\r\n        });\r\n  let updatedBlockMap:any = blockMap.merge(newBlocks).filter(block => !!block);\r\n\r\n  // Only update tree block pointers if the range is across blocks\r\n  if (isExperimentalTreeBlock && startBlock !== endBlock) {\r\n    updatedBlockMap = updateBlockMapLinks(\r\n      updatedBlockMap,\r\n      startBlock,\r\n      endBlock,\r\n      blockMap,\r\n    );\r\n  }\r\n\r\n  return contentState.merge({\r\n    blockMap: updatedBlockMap,\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState.merge({\r\n      anchorKey: startKey,\r\n      anchorOffset: startOffset,\r\n      focusKey: startKey,\r\n      focusOffset: startOffset,\r\n      isBackward: false,\r\n    }),\r\n  }) as any;\r\n};\r\n\r\n/**\r\n * Maintain persistence for target list when removing characters on the\r\n * head and tail of the character list.\r\n */\r\nconst removeFromList = (\r\n  targetList: List<CharacterMetadata>,\r\n  startOffset: number,\r\n  endOffset: number,\r\n): List<CharacterMetadata> => {\r\n  if (startOffset === 0) {\r\n    while (startOffset < endOffset) {\r\n      targetList = targetList.shift();\r\n      startOffset++;\r\n    }\r\n  } else if (endOffset === targetList.count()) {\r\n    while (endOffset > startOffset) {\r\n      targetList = targetList.pop();\r\n      endOffset--;\r\n    }\r\n  } else {\r\n    const head = targetList.slice(0, startOffset);\r\n    const tail = targetList.slice(endOffset);\r\n    targetList = head.concat(tail).toList();\r\n  }\r\n  return targetList;\r\n};\r\n\r\nexport default  removeRangeFromContentState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from '../immutable/BlockMap';\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nimport ContentBlockNode from '../immutable/ContentBlockNode';\r\n\r\nimport generateRandomKey from '../keys/generateRandomKey';\r\nimport {List, Map}from 'immutable';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport modifyBlockForContentState from './modifyBlockForContentState';\r\n\r\n\r\nconst transformBlock = (\r\n  key: string,\r\n  blockMap: BlockMap,\r\n  func: (block: ContentBlockNode) => ContentBlockNode,\r\n): void => {\r\n  if (!key) {\r\n    return;\r\n  }\r\n\r\n  const block:any = blockMap.get(key);\r\n\r\n  if (!block) {\r\n    return;\r\n  }\r\n\r\n  blockMap.set(key, func(block));\r\n};\r\n\r\nconst updateBlockMapLinks = (\r\n  blockMap: BlockMap,\r\n  originalBlock: ContentBlockNode,\r\n  belowBlock: ContentBlockNode,\r\n): BlockMap => {\r\n  return blockMap.withMutations(blocks => {\r\n    const originalBlockKey = originalBlock.getKey();\r\n    const belowBlockKey = belowBlock.getKey();\r\n\r\n    // update block parent\r\n    transformBlock(originalBlock.getParentKey(), blocks, (block:any) => {\r\n      const parentChildrenList = block.getChildKeys();\r\n      const insertionIndex = parentChildrenList.indexOf(originalBlockKey) + 1;\r\n      const newChildrenArray = parentChildrenList.toArray();\r\n\r\n      newChildrenArray.splice(insertionIndex, 0, belowBlockKey);\r\n\r\n      return block.merge({\r\n        children: List(newChildrenArray),\r\n      });\r\n    });\r\n\r\n    // update original next block\r\n    transformBlock(originalBlock.getNextSiblingKey(), blocks, block =>\r\n      block.merge({\r\n        prevSibling: belowBlockKey,\r\n      }) as any,\r\n    );\r\n\r\n    // update original block\r\n    transformBlock(originalBlockKey, blocks, block =>\r\n      block.merge({\r\n        nextSibling: belowBlockKey,\r\n      }) as any,\r\n    );\r\n\r\n    // update below block\r\n    transformBlock(belowBlockKey, blocks, block =>\r\n      block.merge({\r\n        prevSibling: originalBlockKey,\r\n      }) as any,\r\n    );\r\n  });\r\n};\r\n\r\nconst splitBlockInContentState = (\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n): ContentState => {\r\n  invariant(selectionState.isCollapsed(), 'Selection range must be collapsed.');\r\n\r\n  const key = selectionState.getAnchorKey();\r\n  const blockMap = contentState.getBlockMap();\r\n  const blockToSplit:any = blockMap.get(key);\r\n  const text = blockToSplit.getText();\r\n\r\n  if (!text) {\r\n    const blockType = blockToSplit.getType();\r\n    if (\r\n      blockType === 'unordered-list-item' ||\r\n      blockType === 'ordered-list-item'\r\n    ) {\r\n      return modifyBlockForContentState(contentState, selectionState, block =>\r\n        block.merge({type: 'unstyled', depth: 0}) as any,\r\n      );\r\n    }\r\n  }\r\n\r\n  const offset = selectionState.getAnchorOffset();\r\n  const chars = blockToSplit.getCharacterList();\r\n  const keyBelow = generateRandomKey();\r\n  const isExperimentalTreeBlock = blockToSplit instanceof ContentBlockNode;\r\n\r\n  const blockAbove = blockToSplit.merge({\r\n    text: text.slice(0, offset),\r\n    characterList: chars.slice(0, offset),\r\n  });\r\n  const blockBelow = blockAbove.merge({\r\n    key: keyBelow,\r\n    text: text.slice(offset),\r\n    characterList: chars.slice(offset),\r\n    data: Map(),\r\n  });\r\n\r\n  const blocksBefore = blockMap.toSeq().takeUntil(v => v === blockToSplit);\r\n  const blocksAfter = blockMap\r\n    .toSeq()\r\n    .skipUntil(v => v === blockToSplit)\r\n    .rest();\r\n  let newBlocks = blocksBefore\r\n    .concat(\r\n      [\r\n        [key, blockAbove],\r\n        [keyBelow, blockBelow],\r\n      ],\r\n      blocksAfter,\r\n    )\r\n    .toOrderedMap();\r\n\r\n  if (isExperimentalTreeBlock) {\r\n    invariant(\r\n      blockToSplit.getChildKeys().isEmpty(),\r\n      'ContentBlockNode must not have children',\r\n    );\r\n\r\n    newBlocks = updateBlockMapLinks(newBlocks, blockAbove, blockBelow);\r\n  }\r\n\r\n  return contentState.merge({\r\n    blockMap: newBlocks,\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState.merge({\r\n      anchorKey: keyBelow,\r\n      anchorOffset: 0,\r\n      focusKey: keyBelow,\r\n      focusOffset: 0,\r\n      isBackward: false,\r\n    }) ,\r\n  }) as any;\r\n};\r\n\r\nexport default  splitBlockInContentState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from '../immutable/BlockMap';\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  {DraftBlockType} from '../constants/DraftBlockType';\r\nimport  {DraftInlineStyle} from '../immutable/DraftInlineStyle';\r\nimport  {DraftRemovalDirection} from '../constants/DraftRemovalDirection';\r\nimport  SelectionState from '../immutable/SelectionState';\r\nimport  {BlockDataMergeBehavior} from '../transaction/insertFragmentIntoContentState';\r\n\r\nimport CharacterMetadata from '../immutable/CharacterMetadata';\r\nimport ContentStateInlineStyle from '../transaction/ContentStateInlineStyle';\r\n\r\nimport applyEntityToContentState from '../transaction/applyEntityToContentState';\r\nimport getCharacterRemovalRange from './getCharacterRemovalRange';\r\nimport getContentStateFragment from '../transaction/getContentStateFragment';\r\nimport{OrderedSet, Map}from 'immutable';\r\nimport insertFragmentIntoContentState from '../transaction/insertFragmentIntoContentState';\r\nimport insertTextIntoContentState from '../transaction/insertTextIntoContentState';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport modifyBlockForContentState from '../transaction/modifyBlockForContentState';\r\nimport removeEntitiesAtEdges from '../transaction/removeEntitiesAtEdges';\r\nimport removeRangeFromContentState from '../transaction/removeRangeFromContentState';\r\nimport splitBlockInContentState from '../transaction/splitBlockInContentState';\r\n\r\n\r\n/**\r\n * `DraftModifier` provides a set of convenience methods that apply\r\n * modifications to a `ContentState` object based on a target `SelectionState`.\r\n *\r\n * Any change to a `ContentState` should be decomposable into a series of\r\n * transaction functions that apply the re quired changes and return output\r\n * `ContentState` objects.\r\n *\r\n * These functions encapsulate some of the most common transaction sequences.\r\n */\r\nconst DraftModifier = {\r\n  replaceText: function(\r\n    contentState: ContentState,\r\n    rangeToReplace: SelectionState,\r\n    text: string,\r\n    inlineStyle?: DraftInlineStyle,\r\n    entityKey?: string,\r\n  ): ContentState {\r\n    const withoutEntities = removeEntitiesAtEdges(contentState, rangeToReplace);\r\n    const withoutText = removeRangeFromContentState(\r\n      withoutEntities,\r\n      rangeToReplace,\r\n    );\r\n\r\n    const character = CharacterMetadata.create({\r\n      style: inlineStyle || OrderedSet(),\r\n      entity: entityKey || null,\r\n    });\r\n\r\n    return insertTextIntoContentState(\r\n      withoutText,\r\n      withoutText.getSelectionAfter(),\r\n      text,\r\n      character,\r\n    );\r\n  },\r\n\r\n  insertText: function(\r\n    contentState: ContentState,\r\n    targetRange: SelectionState,\r\n    text: string,\r\n    inlineStyle?: DraftInlineStyle,\r\n    entityKey?: string,\r\n  ): ContentState {\r\n    invariant(\r\n      targetRange.isCollapsed(),\r\n      'Target range must be collapsed for `insertText`.',\r\n    );\r\n    return DraftModifier.replaceText(\r\n      contentState,\r\n      targetRange,\r\n      text,\r\n      inlineStyle,\r\n      entityKey,\r\n    );\r\n  },\r\n\r\n  moveText: function(\r\n    contentState: ContentState,\r\n    removalRange: SelectionState,\r\n    targetRange: SelectionState,\r\n  ): ContentState {\r\n    const movedFragment = getContentStateFragment(contentState, removalRange);\r\n\r\n    const afterRemoval = DraftModifier.removeRange(\r\n      contentState,\r\n      removalRange,\r\n      'backward',\r\n    );\r\n\r\n    return DraftModifier.replaceWithFragment(\r\n      afterRemoval,\r\n      targetRange,\r\n      movedFragment,\r\n    );\r\n  },\r\n\r\n  replaceWithFragment: function(\r\n    contentState: ContentState,\r\n    targetRange: SelectionState,\r\n    fragment: BlockMap,\r\n    mergeBlockData: BlockDataMergeBehavior = 'REPLACE_WITH_NEW_DATA',\r\n  ): ContentState {\r\n    const withoutEntities = removeEntitiesAtEdges(contentState, targetRange);\r\n    const withoutText = removeRangeFromContentState(\r\n      withoutEntities,\r\n      targetRange,\r\n    );\r\n\r\n    return insertFragmentIntoContentState(\r\n      withoutText,\r\n      withoutText.getSelectionAfter(),\r\n      fragment,\r\n      mergeBlockData,\r\n    );\r\n  },\r\n\r\n  removeRange: function(\r\n    contentState: ContentState,\r\n    rangeToRemove: SelectionState,\r\n    removalDirection: DraftRemovalDirection,\r\n  ): ContentState {\r\n    let startKey, endKey, startBlock, endBlock;\r\n    if (rangeToRemove.getIsBackward()) {\r\n      rangeToRemove = rangeToRemove.merge({\r\n        anchorKey: rangeToRemove.getFocusKey(),\r\n        anchorOffset: rangeToRemove.getFocusOffset(),\r\n        focusKey: rangeToRemove.getAnchorKey(),\r\n        focusOffset: rangeToRemove.getAnchorOffset(),\r\n        isBackward: false,\r\n      }) as any;\r\n    }\r\n    startKey = rangeToRemove.getAnchorKey();\r\n    endKey = rangeToRemove.getFocusKey();\r\n    startBlock = contentState.getBlockForKey(startKey);\r\n    endBlock = contentState.getBlockForKey(endKey);\r\n    const startOffset = rangeToRemove.getStartOffset();\r\n    const endOffset = rangeToRemove.getEndOffset();\r\n\r\n    const startEntityKey = startBlock.getEntityAt(startOffset);\r\n    const endEntityKey = endBlock.getEntityAt(endOffset - 1);\r\n\r\n    // Check whether the selection state overlaps with a single entity.\r\n    // If so, try to remove the appropriate substring of the entity text.\r\n    if (startKey === endKey) {\r\n      if (startEntityKey && startEntityKey === endEntityKey) {\r\n        const adjustedRemovalRange = getCharacterRemovalRange(\r\n          contentState.getEntityMap(),\r\n          startBlock,\r\n          endBlock,\r\n          rangeToRemove,\r\n          removalDirection,\r\n        );\r\n        return removeRangeFromContentState(contentState, adjustedRemovalRange);\r\n      }\r\n    }\r\n\r\n    const withoutEntities = removeEntitiesAtEdges(contentState, rangeToRemove);\r\n    return removeRangeFromContentState(withoutEntities, rangeToRemove);\r\n  },\r\n\r\n  splitBlock: function(\r\n    contentState: ContentState,\r\n    selectionState: SelectionState,\r\n  ): ContentState {\r\n    const withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\r\n    const withoutText = removeRangeFromContentState(\r\n      withoutEntities,\r\n      selectionState,\r\n    );\r\n\r\n    return splitBlockInContentState(\r\n      withoutText,\r\n      withoutText.getSelectionAfter(),\r\n    );\r\n  },\r\n\r\n  applyInlineStyle: function(\r\n    contentState: ContentState,\r\n    selectionState: SelectionState,\r\n    inlineStyle: string,\r\n  ): ContentState {\r\n    return ContentStateInlineStyle.add(\r\n      contentState,\r\n      selectionState,\r\n      inlineStyle,\r\n    );\r\n  },\r\n\r\n  removeInlineStyle: function(\r\n    contentState: ContentState,\r\n    selectionState: SelectionState,\r\n    inlineStyle: string,\r\n  ): ContentState {\r\n    return ContentStateInlineStyle.remove(\r\n      contentState,\r\n      selectionState,\r\n      inlineStyle,\r\n    );\r\n  },\r\n\r\n  setBlockType: function(\r\n    contentState: ContentState,\r\n    selectionState: SelectionState,\r\n    blockType: DraftBlockType,\r\n  ): ContentState {\r\n    return modifyBlockForContentState(contentState, selectionState, block =>\r\n      block.merge({type: blockType, depth: 0}) as any,\r\n    );\r\n  },\r\n\r\n  setBlockData: function(\r\n    contentState: ContentState,\r\n    selectionState: SelectionState,\r\n    blockData: Map<any, any>,\r\n  ): ContentState {\r\n    return modifyBlockForContentState(contentState, selectionState, block =>\r\n      block.merge({data: blockData}) as any,\r\n    );\r\n  },\r\n\r\n  mergeBlockData: function(\r\n    contentState: ContentState,\r\n    selectionState: SelectionState,\r\n    blockData: Map<any, any>,\r\n  ): ContentState {\r\n    return modifyBlockForContentState(contentState, selectionState, block =>\r\n      block.merge({data: block.getData().merge(blockData)}) as any,\r\n    );\r\n  },\r\n\r\n  applyEntity: function(\r\n    contentState: ContentState,\r\n    selectionState: SelectionState,\r\n    entityKey: string,\r\n  ): ContentState {\r\n    const withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\r\n    return applyEntityToContentState(\r\n      withoutEntities,\r\n      selectionState,\r\n      entityKey,\r\n    );\r\n  },\r\n};\r\n\r\nexport default  DraftModifier;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from './BlockNodeRecord';\r\nimport CharacterMetadata from './CharacterMetadata';\r\nimport ContentState from './ContentState';\r\nimport {DraftDecoratorType} from '../decorators/DraftDecoratorType';\r\nimport findRangesImmutable from './findRangesImmutable';\r\nimport {List, Repeat, Record, Map} from 'immutable';\r\n\r\n\r\nconst returnTrue = function() {\r\n  return true;\r\n};\r\n\r\nconst defaultLeafRange: {\r\n  start: number,\r\n  end: number,\r\n} = {\r\n  start: null,\r\n  end: null,\r\n};\r\n\r\nconst LeafRange = Record(defaultLeafRange);\r\n\r\nconst defaultDecoratorRange: {\r\n  start: number,\r\n  end: number,\r\n  decoratorKey: string,\r\n  leaves: List<typeof LeafRange>,\r\n} = {\r\n  start: null,\r\n  end: null,\r\n  decoratorKey: null,\r\n  leaves: null,\r\n};\r\n\r\nconst DecoratorRange = Record(defaultDecoratorRange);\r\n\r\nconst BlockTree = {\r\n  /**\r\n   * Generate a block tree for a given ContentBlock/decorator pair.\r\n   */\r\n  generate: function(\r\n    contentState: ContentState,\r\n    block: BlockNodeRecord,\r\n    decorator:DraftDecoratorType,\r\n  ): List<Map<string, any>> {\r\n    const textLength = block.getLength();\r\n    if (!textLength) {\r\n      return List.of(\r\n        new DecoratorRange({\r\n          start: 0,\r\n          end: 0,\r\n          decoratorKey: null,\r\n          leaves: List.of(new LeafRange({start: 0, end: 0})),\r\n        }),\r\n      );\r\n    }\r\n\r\n    const leafSets = [];\r\n    const decorations = decorator\r\n      ? decorator.getDecorations(block, contentState)\r\n      : List(Repeat(null, textLength));\r\n\r\n    const chars = block.getCharacterList();\r\n\r\n    findRangesImmutable(decorations, areEqual, returnTrue, (start, end) => {\r\n      leafSets.push(\r\n        new DecoratorRange({\r\n          start,\r\n          end,\r\n          decoratorKey: decorations.get(start),\r\n          leaves: generateLeaves(chars.slice(start, end).toList(), start),\r\n        }),\r\n      );\r\n    });\r\n\r\n    return List(leafSets);\r\n  },\r\n};\r\n\r\n/**\r\n * Generate LeafRange records for a given character list.\r\n */\r\nfunction generateLeaves(\r\n  characters: List<CharacterMetadata>,\r\n  offset: number,\r\n): List<typeof LeafRange> {\r\n  const leaves = [];\r\n  const inlineStyles = characters.map(c => c.getStyle()).toList();\r\n  findRangesImmutable(inlineStyles, areEqual, returnTrue, (start, end) => {\r\n    leaves.push(\r\n      new LeafRange({\r\n        start: start + offset,\r\n        end: end + offset,\r\n      }),\r\n    );\r\n  });\r\n  return List(leaves);\r\n}\r\n\r\nfunction areEqual(a: any, b: any): boolean {\r\n  return a === b;\r\n}\r\n\r\nexport default  BlockTree;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @legacyServerCallableInstance\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {DraftEntityMutability} from './DraftEntityMutability';\r\nimport  {DraftEntityType} from './DraftEntityType';\r\n\r\nimport  {Record}  from 'immutable';\r\n\r\nconst DraftEntityInstanceRecord = Record({\r\n  type: 'TOKEN',\r\n  mutability: 'IMMUTABLE',\r\n  data: Object,\r\n})\r\n\r\n/**\r\n * An instance of a document entity, consisting of a `type` and relevant\r\n * `data`, metadata about the entity.\r\n *\r\n * For instance, a \"link\" entity might provide a URI, and a \"mention\"\r\n * entity might provide the mentioned user's ID. These pieces of data\r\n * may be used when rendering the entity as part of a ContentBlock DOM\r\n * representation. For a link, the data would be used as an href for\r\n * the rendered anchor. For a mention, the ID could be used to retrieve\r\n * a hovercard.\r\n */\r\nclass DraftEntityInstance extends DraftEntityInstanceRecord {\r\n  getType(): DraftEntityType {\r\n    return this.get('type');\r\n  }\r\n\r\n  getMutability(): DraftEntityMutability {\r\n    return this.get('mutability');\r\n  }\r\n\r\n  getData(): Object {\r\n    return this.get('data');\r\n  }\r\n}\r\n\r\nexport default  DraftEntityInstance;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\nimport  {DraftEntityMutability} from './DraftEntityMutability';\r\nimport {DraftEntityType} from './DraftEntityType';\r\n\r\nimport DraftEntityInstance  from  './DraftEntityInstance';\r\n\r\nimport {Map}  from 'immutable';\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\n\r\nlet instances: Map<string, DraftEntityInstance> = Map();\r\nlet instanceKey = 0;\r\n\r\n/**\r\n * Temporary utility for generating the warnings\r\n */\r\nfunction logWarning(oldMethodCall, newMethodCall) {\r\n  console.warn(\r\n    'WARNING: ' +\r\n      oldMethodCall +\r\n      ' will be deprecated soon!\\nPlease use \"' +\r\n      newMethodCall +\r\n      '\" instead.',\r\n  );\r\n}\r\n\r\nexport type DraftEntityMapObject = {\r\n  getLastCreatedEntityKey: () => string,\r\n\r\n  create: (\r\n    type: DraftEntityType,\r\n    mutability: DraftEntityMutability,\r\n    data?: Object,\r\n  ) => string,\r\n\r\n  add: (instance: DraftEntityInstance) => string,\r\n\r\n  get: (key: string) => DraftEntityInstance,\r\n\r\n  mergeData: (\r\n    key: string,\r\n    toMerge: {[key: string]: any},\r\n  ) => DraftEntityInstance,\r\n\r\n  replaceData: (\r\n    key: string,\r\n    newData: {[key: string]: any},\r\n  ) => DraftEntityInstance,\r\n\r\n  __getLastCreatedEntityKey: () => string,\r\n\r\n  __create: (\r\n    type: DraftEntityType,\r\n    mutability: DraftEntityMutability,\r\n    data?: Object,\r\n  ) => string,\r\n\r\n  __add: (instance: DraftEntityInstance) => string,\r\n\r\n  __get: (key: string) => DraftEntityInstance,\r\n\r\n  __mergeData: (\r\n    key: string,\r\n    toMerge: {[key: string]: any},\r\n  ) => DraftEntityInstance,\r\n\r\n  __replaceData: (\r\n    key: string,\r\n    newData: {[key: string]: any},\r\n  ) => DraftEntityInstance,\r\n};\r\n\r\n/**\r\n * A \"document entity\" is an object containing metadata associated with a\r\n * piece of text in a ContentBlock.\r\n *\r\n * For example, a `link` entity might include a `uri` property. When a\r\n * ContentBlock is rendered in the browser, text that refers to that link\r\n * entity may be rendered as an anchor, with the `uri` as the href value.\r\n *\r\n * In a ContentBlock, every position in the text may correspond to zero\r\n * or one entities. This correspondence is tracked using a key string,\r\n * generated via DraftEntity.create() and used to obtain entity metadata\r\n * via DraftEntity.get().\r\n */\r\nconst DraftEntity: DraftEntityMapObject = {\r\n  /**\r\n   * WARNING: This method will be deprecated soon!\r\n   * Please use 'contentState.getLastCreatedEntityKey' instead.\r\n   * ---\r\n   * Get the random key string from whatever entity was last created.\r\n   * We need this to support the new API, as part of transitioning to put Entity\r\n   * storage in contentState.\r\n   */\r\n  getLastCreatedEntityKey: function(): string {\r\n    logWarning(\r\n      'DraftEntity.getLastCreatedEntityKey',\r\n      'contentState.getLastCreatedEntityKey',\r\n    );\r\n    return DraftEntity.__getLastCreatedEntityKey();\r\n  },\r\n\r\n  /**\r\n   * WARNING: This method will be deprecated soon!\r\n   * Please use 'contentState.createEntity' instead.\r\n   * ---\r\n   * Create a DraftEntityInstance and store it for later retrieval.\r\n   *\r\n   * A random key string will be generated and returned. This key may\r\n   * be used to track the entity's usage in a ContentBlock, and for\r\n   * retrieving data about the entity at render time.\r\n   */\r\n  create: function(\r\n    type: DraftEntityType,\r\n    mutability: DraftEntityMutability,\r\n    data?: Object,\r\n  ): string {\r\n    logWarning('DraftEntity.create', 'contentState.createEntity');\r\n    return DraftEntity.__create(type, mutability, data);\r\n  },\r\n\r\n  /**\r\n   * WARNING: This method will be deprecated soon!\r\n   * Please use 'contentState.addEntity' instead.\r\n   * ---\r\n   * Add an existing DraftEntityInstance to the DraftEntity map. This is\r\n   * useful when restoring instances from the server.\r\n   */\r\n  add: function(instance: DraftEntityInstance): string {\r\n    logWarning('DraftEntity.add', 'contentState.addEntity');\r\n    return DraftEntity.__add(instance);\r\n  },\r\n\r\n  /**\r\n   * WARNING: This method will be deprecated soon!\r\n   * Please use 'contentState.getEntity' instead.\r\n   * ---\r\n   * Retrieve the entity corresponding to the supplied key string.\r\n   */\r\n  get: function(key: string): DraftEntityInstance {\r\n    logWarning('DraftEntity.get', 'contentState.getEntity');\r\n    return DraftEntity.__get(key);\r\n  },\r\n\r\n  /**\r\n   * WARNING: This method will be deprecated soon!\r\n   * Please use 'contentState.mergeEntityData' instead.\r\n   * ---\r\n   * Entity instances are immutable. If you need to update the data for an\r\n   * instance, this method will merge your data updates and return a new\r\n   * instance.\r\n   */\r\n  mergeData: function(\r\n    key: string,\r\n    toMerge: {[key: string]: any},\r\n  ): DraftEntityInstance {\r\n    logWarning('DraftEntity.mergeData', 'contentState.mergeEntityData');\r\n    return DraftEntity.__mergeData(key, toMerge);\r\n  },\r\n\r\n  /**\r\n   * WARNING: This method will be deprecated soon!\r\n   * Please use 'contentState.replaceEntityData' instead.\r\n   * ---\r\n   * Completely replace the data for a given instance.\r\n   */\r\n  replaceData: function(\r\n    key: string,\r\n    newData: {[key: string]: any},\r\n  ): DraftEntityInstance {\r\n    logWarning('DraftEntity.replaceData', 'contentState.replaceEntityData');\r\n    return DraftEntity.__replaceData(key, newData);\r\n  },\r\n\r\n  // ***********************************WARNING******************************\r\n  // --- the above public API will be deprecated in the next version of Draft!\r\n  // The methods below this line are private - don't call them directly.\r\n\r\n  /**\r\n   * Get the random key string from whatever entity was last created.\r\n   * We need this to support the new API, as part of transitioning to put Entity\r\n   * storage in contentState.\r\n   */\r\n  __getLastCreatedEntityKey: function(): string {\r\n    return '' + instanceKey;\r\n  },\r\n\r\n  /**\r\n   * Create a DraftEntityInstance and store it for later retrieval.\r\n   *\r\n   * A random key string will be generated and returned. This key may\r\n   * be used to track the entity's usage in a ContentBlock, and for\r\n   * retrieving data about the entity at render time.\r\n   */\r\n  __create: function(\r\n    type: DraftEntityType,\r\n    mutability: DraftEntityMutability,\r\n    data?: Object,\r\n  ): string {\r\n    return DraftEntity.__add(\r\n      new DraftEntityInstance({type, mutability, data: data || {}}),\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Add an existing DraftEntityInstance to the DraftEntity map. This is\r\n   * useful when restoring instances from the server.\r\n   */\r\n  __add: function(instance: DraftEntityInstance): string {\r\n    const key = '' + ++instanceKey;\r\n    instances = instances.set(key, instance);\r\n    return key;\r\n  },\r\n\r\n  /**\r\n   * Retrieve the entity corresponding to the supplied key string.\r\n   */\r\n  __get: function(key: string): DraftEntityInstance {\r\n    const instance = instances.get(key);\r\n    invariant(!!instance, 'Unknown DraftEntity key: %s.', key);\r\n    return instance;\r\n  },\r\n\r\n  /**\r\n   * Entity instances are immutable. If you need to update the data for an\r\n   * instance, this method will merge your data updates and return a new\r\n   * instance.\r\n   */\r\n  __mergeData: function(\r\n    key: string,\r\n    toMerge: {[key: string]: any},\r\n  ): DraftEntityInstance {\r\n    const instance = DraftEntity.__get(key);\r\n    const newData = {...instance.getData(), ...toMerge};\r\n    const newInstance:DraftEntityInstance = (instance as any ).set('data', newData);\r\n    instances = instances.set(key, newInstance);\r\n    return newInstance;\r\n  },\r\n\r\n  /**\r\n   * Completely replace the data for a given instance.\r\n   */\r\n  __replaceData: function(\r\n    key: string,\r\n    newData: {[key: string]: any},\r\n  ): DraftEntityInstance {\r\n    const instance = DraftEntity.__get(key);\r\n    const newInstance:any = instance.set('data', newData);\r\n    instances = instances.set(key, newInstance);\r\n    return newInstance;\r\n  },\r\n};\r\n\r\nexport default  DraftEntity;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {Record} from 'immutable';\r\n\r\n\r\nconst defaultRecord: {\r\n  anchorKey: string,\r\n  anchorOffset: number,\r\n  focusKey: string,\r\n  focusOffset: number,\r\n  isBackward: boolean,\r\n  hasFocus: boolean,\r\n} = {\r\n  anchorKey: '',\r\n  anchorOffset: 0,\r\n  focusKey: '',\r\n  focusOffset: 0,\r\n  isBackward: false,\r\n  hasFocus: false,\r\n};\r\n\r\n/* $FlowFixMe This comment suppresses an error found when automatically adding\r\n * a type annotation with the codemod Komodo/Annotate_exports. To see the error\r\n * delete this comment and run Flow. */\r\nconst SelectionStateRecord = Record(defaultRecord);\r\n\r\nclass SelectionState extends SelectionStateRecord {\r\n  serialize(): string {\r\n    return (\r\n      'Anchor: ' +\r\n      this.getAnchorKey() +\r\n      ':' +\r\n      this.getAnchorOffset() +\r\n      ', ' +\r\n      'Focus: ' +\r\n      this.getFocusKey() +\r\n      ':' +\r\n      this.getFocusOffset() +\r\n      ', ' +\r\n      'Is Backward: ' +\r\n      String(this.getIsBackward()) +\r\n      ', ' +\r\n      'Has Focus: ' +\r\n      String(this.getHasFocus())\r\n    );\r\n  }\r\n\r\n  getAnchorKey(): string {\r\n    return this.get('anchorKey');\r\n  }\r\n\r\n  getAnchorOffset(): number {\r\n    return this.get('anchorOffset');\r\n  }\r\n\r\n  getFocusKey(): string {\r\n    return this.get('focusKey');\r\n  }\r\n\r\n  getFocusOffset(): number {\r\n    return this.get('focusOffset');\r\n  }\r\n\r\n  getIsBackward(): boolean {\r\n    return this.get('isBackward');\r\n  }\r\n\r\n  getHasFocus(): boolean {\r\n    return this.get('hasFocus');\r\n  }\r\n\r\n  /**\r\n   * Return whether the specified range overlaps with an edge of the\r\n   * SelectionState.\r\n   */\r\n  hasEdgeWithin(blockKey: string, start: number, end: number): boolean {\r\n    const anchorKey = this.getAnchorKey();\r\n    const focusKey = this.getFocusKey();\r\n\r\n    if (anchorKey === focusKey && anchorKey === blockKey) {\r\n      const selectionStart = this.getStartOffset();\r\n      const selectionEnd = this.getEndOffset();\r\n\r\n      return (\r\n        (start <= selectionStart && selectionStart <= end) || // selectionStart is between start and end, or\r\n        (start <= selectionEnd && selectionEnd <= end) // selectionEnd is between start and end\r\n      );\r\n    }\r\n\r\n    if (blockKey !== anchorKey && blockKey !== focusKey) {\r\n      return false;\r\n    }\r\n\r\n    const offsetToCheck =\r\n      blockKey === anchorKey ? this.getAnchorOffset() : this.getFocusOffset();\r\n\r\n    return start <= offsetToCheck && end >= offsetToCheck;\r\n  }\r\n\r\n  isCollapsed(): boolean {\r\n    return (\r\n      this.getAnchorKey() === this.getFocusKey() &&\r\n      this.getAnchorOffset() === this.getFocusOffset()\r\n    );\r\n  }\r\n\r\n  getStartKey(): string {\r\n    return this.getIsBackward() ? this.getFocusKey() : this.getAnchorKey();\r\n  }\r\n\r\n  getStartOffset(): number {\r\n    return this.getIsBackward()\r\n      ? this.getFocusOffset()\r\n      : this.getAnchorOffset();\r\n  }\r\n\r\n  getEndKey(): string {\r\n    return this.getIsBackward() ? this.getAnchorKey() : this.getFocusKey();\r\n  }\r\n\r\n  getEndOffset(): number {\r\n    return this.getIsBackward()\r\n      ? this.getAnchorOffset()\r\n      : this.getFocusOffset();\r\n  }\r\n\r\n  static createEmpty(key: string): SelectionState {\r\n    return new SelectionState({\r\n      anchorKey: key,\r\n      anchorOffset: 0,\r\n      focusKey: key,\r\n      focusOffset: 0,\r\n      isBackward: false,\r\n      hasFocus: false,\r\n    });\r\n  }\r\n}\r\n\r\nexport default  SelectionState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n */\r\n\r\n'use strict';\r\ndeclare const window: {\r\n  __DRAFT_GKX\r\n}\r\n// window['draft_tree_data_support'] = true;\r\n\r\nexport default  function(name: string) {\r\n  if (typeof window !== 'undefined' && window.__DRAFT_GKX) {\r\n    return !!window.__DRAFT_GKX[name];\r\n  }\r\n  return false;\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nconst REGEX_BLOCK_DELIMITER = new RegExp('\\r', 'g');\r\n\r\nfunction sanitizeDraftText(input: string): string {\r\n  return input.replace(REGEX_BLOCK_DELIMITER, '');\r\n}\r\n\r\nexport default  sanitizeDraftText;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {BlockMap} from './BlockMap';\r\nimport  {BlockNodeRecord} from './BlockNodeRecord';\r\nimport  DraftEntityInstance from '../entity/DraftEntityInstance';\r\nimport  {DraftEntityMutability} from '../entity/DraftEntityMutability';\r\nimport {DraftEntityType} from '../entity/DraftEntityType';\r\n\r\nimport BlockMapBuilder from './BlockMapBuilder';\r\nimport CharacterMetadata from './CharacterMetadata';\r\nimport ContentBlock from './ContentBlock';\r\nimport ContentBlockNode from './ContentBlockNode';\r\nimport DraftEntity from '../entity/DraftEntity';\r\nimport SelectionState from './SelectionState';\r\n\r\nimport generateRandomKey from '../keys/generateRandomKey';\r\nimport gkx from '../../stubs/gkx';\r\nimport {List, Record, Repeat} from 'immutable';\r\nimport sanitizeDraftText from '../encoding/sanitizeDraftText';\r\n\r\n\r\nconst defaultRecord: {\r\n  entityMap: any,\r\n  blockMap: BlockMap,\r\n  selectionBefore: SelectionState,\r\n  selectionAfter: SelectionState,\r\n} = {\r\n  entityMap: null,\r\n  blockMap: null,\r\n  selectionBefore: null,\r\n  selectionAfter: null,\r\n};\r\n\r\nconst ContentStateRecord = Record(defaultRecord);\r\n\r\nclass ContentState extends ContentStateRecord {\r\n  getEntityMap(): any {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    return DraftEntity;\r\n  }\r\n\r\n  getBlockMap(): BlockMap {\r\n    return this.get('blockMap');\r\n  }\r\n\r\n  getSelectionBefore(): SelectionState {\r\n    return this.get('selectionBefore');\r\n  }\r\n\r\n  getSelectionAfter(): SelectionState {\r\n    return this.get('selectionAfter');\r\n  }\r\n\r\n  getBlockForKey(key: string): BlockNodeRecord {\r\n    const block: BlockNodeRecord = this.getBlockMap().get(key);\r\n    return block;\r\n  }\r\n\r\n  getKeyBefore(key: string): string {\r\n    return this.getBlockMap()\r\n      .reverse()\r\n      .keySeq()\r\n      .skipUntil(v => v === key)\r\n      .skip(1)\r\n      .first();\r\n  }\r\n\r\n  getKeyAfter(key: string): string {\r\n    return this.getBlockMap()\r\n      .keySeq()\r\n      .skipUntil(v => v === key)\r\n      .skip(1)\r\n      .first();\r\n  }\r\n\r\n  getBlockAfter(key: string): BlockNodeRecord {\r\n    return this.getBlockMap()\r\n      .skipUntil((_, k) => k === key)\r\n      .skip(1)\r\n      .first();\r\n  }\r\n\r\n  getBlockBefore(key: string): BlockNodeRecord {\r\n    return this.getBlockMap()\r\n      .reverse()\r\n      .skipUntil((_, k) => k === key)\r\n      .skip(1)\r\n      .first();\r\n  }\r\n\r\n  getBlocksAsArray(): Array<BlockNodeRecord> {\r\n    return this.getBlockMap().toArray();\r\n  }\r\n\r\n  getFirstBlock(): BlockNodeRecord {\r\n    return this.getBlockMap().first();\r\n  }\r\n\r\n  getLastBlock(): BlockNodeRecord {\r\n    return this.getBlockMap().last();\r\n  }\r\n\r\n  getPlainText(delimiter?: string): string {\r\n    return this.getBlockMap()\r\n      .map(block => {\r\n        return block ? block.getText() : '';\r\n      })\r\n      .join(delimiter || '\\n');\r\n  }\r\n\r\n  getLastCreatedEntityKey(): string {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    return DraftEntity.__getLastCreatedEntityKey();\r\n  }\r\n\r\n  hasText(): boolean {\r\n    const blockMap = this.getBlockMap();\r\n    return (\r\n      blockMap.size > 1 ||\r\n      // make sure that there are no zero width space chars\r\n      escape(blockMap.first().getText()).replace(/%u200B/g, '').length > 0\r\n    );\r\n  }\r\n\r\n  createEntity(\r\n    type: DraftEntityType,\r\n    mutability: DraftEntityMutability,\r\n    data?: Object,\r\n  ): ContentState {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__create(type, mutability, data);\r\n    return this;\r\n  }\r\n\r\n  mergeEntityData(key: string, toMerge: {[key: string]: any}): ContentState {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__mergeData(key, toMerge);\r\n    return this;\r\n  }\r\n\r\n  replaceEntityData(key: string, newData: {[key: string]: any}): ContentState {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__replaceData(key, newData);\r\n    return this;\r\n  }\r\n\r\n  addEntity(instance: DraftEntityInstance): ContentState {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__add(instance);\r\n    return this;\r\n  }\r\n\r\n  getEntity(key: string): DraftEntityInstance {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    return DraftEntity.__get(key);\r\n  }\r\n\r\n  static createFromBlockArray(\r\n    // TODO: update flow type when we completely deprecate the old entity API\r\n    blocks: Array<BlockNodeRecord> | {contentBlocks: Array<BlockNodeRecord>},\r\n    entityMap?: any,\r\n  ): ContentState {\r\n    // TODO: remove this when we completely deprecate the old entity API\r\n    const theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\r\n    const blockMap = BlockMapBuilder.createFromArray(theBlocks);\r\n    const selectionState = blockMap.isEmpty()\r\n      ? new SelectionState()\r\n      : SelectionState.createEmpty(blockMap.first().getKey());\r\n    return new ContentState({\r\n      blockMap,\r\n      entityMap: entityMap || DraftEntity,\r\n      selectionBefore: selectionState,\r\n      selectionAfter: selectionState,\r\n    });\r\n  }\r\n\r\n  static createFromText(\r\n    text: string,\r\n    delimiter: string | RegExp = /\\r\\n?|\\n/g,\r\n  ): ContentState {\r\n    const strings = text.split(delimiter);\r\n    const blocks = strings.map(block => {\r\n      block = sanitizeDraftText(block);\r\n      const ContentBlockNodeRecord = gkx('draft_tree_data_support')\r\n        ? ContentBlockNode\r\n        : ContentBlock;\r\n      return new ContentBlockNodeRecord({\r\n        key: generateRandomKey(),\r\n        text: block,\r\n        type: 'unstyled',\r\n        characterList: List(Repeat(CharacterMetadata.EMPTY, block.length)),\r\n      });\r\n    });\r\n    return ContentState.createFromBlockArray(blocks);\r\n  }\r\n}\r\n\r\nexport default  ContentState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  ContentState from './ContentState';\r\n\r\nimport UnicodeBidiService from 'fbjs/lib/UnicodeBidiService';\r\n\r\nimport {OrderedMap, is} from 'immutable';\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\n\r\nlet bidiService;\r\n\r\nconst EditorBidiService = {\r\n  getDirectionMap: function(\r\n    content: ContentState,\r\n    prevBidiMap: OrderedMap<any, any>,\r\n  ): OrderedMap<any, any> {\r\n    if (!bidiService) {\r\n      bidiService = new UnicodeBidiService();\r\n    } else {\r\n      bidiService.reset();\r\n    }\r\n\r\n    const blockMap = content.getBlockMap();\r\n    const nextBidi = blockMap\r\n      .valueSeq()\r\n      .map(block => nullthrows(bidiService).getDirection(block.getText()));\r\n    const bidiMap = OrderedMap(blockMap.keySeq().zip(nextBidi));\r\n\r\n    if (prevBidiMap != null && is(prevBidiMap, bidiMap)) {\r\n      return prevBidiMap;\r\n    }\r\n\r\n    return bidiMap;\r\n  },\r\n};\r\n\r\nexport default  EditorBidiService;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from './BlockMap';\r\nimport {DraftDecoratorType} from '../decorators/DraftDecoratorType';\r\nimport  {DraftInlineStyle} from './DraftInlineStyle';\r\nimport  {EditorChangeType} from './EditorChangeType';\r\nimport {EntityMap} from './EntityMap';\r\nimport  {List, OrderedMap} from 'immutable';\r\n\r\nimport BlockTree from './BlockTree';\r\nimport ContentState from './ContentState';\r\nimport EditorBidiService from './EditorBidiService';\r\nimport SelectionState from './SelectionState';\r\n\r\nimport {OrderedSet, Record, Stack} from 'immutable';\r\n\r\n\r\ntype EditorStateRecordType = {\r\n  allowUndo: boolean,\r\n  currentContent: ContentState,\r\n  decorator: DraftDecoratorType,\r\n  directionMap: OrderedMap<string, string>,\r\n  forceSelection: boolean,\r\n  inCompositionMode: boolean,\r\n  inlineStyleOverride: DraftInlineStyle,\r\n  lastChangeType: EditorChangeType,\r\n  nativelyRenderedContent: ContentState,\r\n  redoStack: Stack<ContentState>,\r\n  selection: SelectionState,\r\n  treeMap: OrderedMap<string, List<any>>,\r\n  undoStack: Stack<ContentState>,\r\n};\r\n\r\nconst defaultRecord: EditorStateRecordType = {\r\n  allowUndo: true,\r\n  currentContent: null,\r\n  decorator: null,\r\n  directionMap: null,\r\n  forceSelection: false,\r\n  inCompositionMode: false,\r\n  inlineStyleOverride: null,\r\n  lastChangeType: null,\r\n  nativelyRenderedContent: null,\r\n  redoStack: Stack(),\r\n  selection: null,\r\n  treeMap: null,\r\n  undoStack: Stack(),\r\n};\r\n\r\nconst EditorStateRecord = Record(defaultRecord);\r\n\r\nclass EditorState {\r\n  _immutable:typeof EditorStateRecord;\r\n\r\n  static createEmpty(decorator?: DraftDecoratorType): EditorState {\r\n    return EditorState.createWithContent(\r\n      ContentState.createFromText(''),\r\n      decorator,\r\n    );\r\n  }\r\n\r\n  static createWithContent(\r\n    contentState: ContentState,\r\n    decorator?: DraftDecoratorType,\r\n  ): EditorState {\r\n    if (contentState.getBlockMap().count() === 0) {\r\n      return EditorState.createEmpty(decorator);\r\n    }\r\n    const firstKey = contentState\r\n      .getBlockMap()\r\n      .first()\r\n      .getKey();\r\n    return EditorState.create({\r\n      currentContent: contentState,\r\n      undoStack: Stack(),\r\n      redoStack: Stack(),\r\n      decorator: decorator || null,\r\n      selection: SelectionState.createEmpty(firstKey),\r\n    });\r\n  }\r\n\r\n  static create(config: any): EditorState {\r\n    const {currentContent, decorator} = config;\r\n    const recordConfig = {\r\n      ...config,\r\n      treeMap: generateNewTreeMap(currentContent, decorator),\r\n      directionMap: (EditorBidiService as any).getDirectionMap(currentContent),\r\n    };\r\n    return new EditorState(new EditorStateRecord(recordConfig) as any );\r\n  }\r\n\r\n  static set(editorState: EditorState, put: any): EditorState {\r\n    const map = (editorState as any).getImmutable().withMutations(state => {\r\n      const existingDecorator = state.get('decorator');\r\n      let decorator = existingDecorator;\r\n      if (put.decorator === null) {\r\n        decorator = null;\r\n      } else if (put.decorator) {\r\n        decorator = put.decorator;\r\n      }\r\n\r\n      const newContent = put.currentContent || editorState.getCurrentContent();\r\n\r\n      if (decorator !== existingDecorator) {\r\n        const treeMap: OrderedMap<any, any> = state.get('treeMap');\r\n        let newTreeMap;\r\n        if (decorator && existingDecorator) {\r\n          newTreeMap = regenerateTreeForNewDecorator(\r\n            newContent,\r\n            newContent.getBlockMap(),\r\n            treeMap,\r\n            decorator,\r\n            existingDecorator,\r\n          );\r\n        } else {\r\n          newTreeMap = generateNewTreeMap(newContent, decorator);\r\n        }\r\n\r\n        state.merge({\r\n          decorator,\r\n          treeMap: newTreeMap,\r\n          nativelyRenderedContent: null,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const existingContent = editorState.getCurrentContent();\r\n      if (newContent !== existingContent) {\r\n        state.set(\r\n          'treeMap',\r\n          regenerateTreeForNewBlocks(\r\n            editorState,\r\n            newContent.getBlockMap(),\r\n            newContent.getEntityMap(),\r\n            decorator,\r\n          ),\r\n        );\r\n      }\r\n\r\n      state.merge(put);\r\n    });\r\n\r\n    return new EditorState(map);\r\n  }\r\n\r\n  toJS(): Object {\r\n    return (this.getImmutable() as any).toJS();\r\n  }\r\n\r\n  getAllowUndo(): boolean {\r\n    return (this.getImmutable() as any).get('allowUndo');\r\n  }\r\n\r\n  getCurrentContent(): ContentState {\r\n    return (this.getImmutable() as any).get('currentContent');\r\n  }\r\n\r\n  getUndoStack(): Stack<ContentState> {\r\n    return (this.getImmutable() as any).get('undoStack');\r\n  }\r\n\r\n  getRedoStack(): Stack<ContentState> {\r\n    return (this.getImmutable() as any).get('redoStack');\r\n  }\r\n\r\n  getSelection(): SelectionState {\r\n    return this.getImmutable().get('selection');\r\n  }\r\n\r\n  getDecorator(): DraftDecoratorType {\r\n    return (this.getImmutable() as any).get('decorator');\r\n  }\r\n\r\n  isInCompositionMode(): boolean {\r\n    return this.getImmutable().get('inCompositionMode');\r\n  }\r\n\r\n  mustForceSelection(): boolean {\r\n    return this.getImmutable().get('forceSelection');\r\n  }\r\n\r\n  getNativelyRenderedContent(): ContentState {\r\n    return this.getImmutable().get('nativelyRenderedContent');\r\n  }\r\n\r\n  getLastChangeType(): EditorChangeType {\r\n    return this.getImmutable().get('lastChangeType');\r\n  }\r\n\r\n  /**\r\n   * While editing, the user may apply inline style commands with a collapsed\r\n   * cursor, intending to type text that adopts the specified style. In this\r\n   * case, we track the specified style as an \"override\" that takes precedence\r\n   * over the inline style of the text adjacent to the cursor.\r\n   *\r\n   * If null, there is no override in place.\r\n   */\r\n  getInlineStyleOverride(): DraftInlineStyle {\r\n    return this.getImmutable().get('inlineStyleOverride');\r\n  }\r\n\r\n  static setInlineStyleOverride(\r\n    editorState: EditorState,\r\n    inlineStyleOverride: DraftInlineStyle,\r\n  ): EditorState {\r\n    return EditorState.set(editorState, {inlineStyleOverride});\r\n  }\r\n\r\n  /**\r\n   * Get the appropriate inline style for the editor state. If an\r\n   * override is in place, use it. Otherwise, the current style is\r\n   * based on the location of the selection state.\r\n   */\r\n  getCurrentInlineStyle(): DraftInlineStyle {\r\n    const override = this.getInlineStyleOverride();\r\n    if (override != null) {\r\n      return override;\r\n    }\r\n\r\n    const content = this.getCurrentContent();\r\n    const selection = this.getSelection();\r\n\r\n    if (selection.isCollapsed()) {\r\n      return getInlineStyleForCollapsedSelection(content, selection);\r\n    }\r\n\r\n    return getInlineStyleForNonCollapsedSelection(content, selection);\r\n  }\r\n\r\n  getBlockTree(blockKey: string): List<any> {\r\n    return this.getImmutable().getIn(['treeMap', blockKey]);\r\n  }\r\n\r\n  isSelectionAtStartOfContent(): boolean {\r\n    const firstKey = this.getCurrentContent()\r\n      .getBlockMap()\r\n      .first()\r\n      .getKey();\r\n    return this.getSelection().hasEdgeWithin(firstKey, 0, 0);\r\n  }\r\n\r\n  isSelectionAtEndOfContent(): boolean {\r\n    const content = this.getCurrentContent();\r\n    const blockMap = content.getBlockMap();\r\n    const last = blockMap.last();\r\n    const end = last.getLength();\r\n    return this.getSelection().hasEdgeWithin(last.getKey(), end, end);\r\n  }\r\n\r\n  getDirectionMap(): OrderedMap<any, any> {\r\n    return this.getImmutable().get('directionMap');\r\n  }\r\n\r\n  /**\r\n   * Incorporate native DOM selection changes into the EditorState. This\r\n   * method can be used when we simply want to accept whatever the DOM\r\n   * has given us to represent selection, and we do not need to re-render\r\n   * the editor.\r\n   *\r\n   * To forcibly move the DOM selection, see `EditorState.forceSelection`.\r\n   */\r\n  static acceptSelection(\r\n    editorState: EditorState,\r\n    selection: SelectionState,\r\n  ): EditorState {\r\n    return updateSelection(editorState, selection, false);\r\n  }\r\n\r\n  /**\r\n   * At times, we need to force the DOM selection to be where we\r\n   * need it to be. This can occur when the anchor or focus nodes\r\n   * are non-text nodes, for instance. In this case, we want to trigger\r\n   * a re-render of the editor, which in turn forces selection into\r\n   * the correct place in the DOM. The `forceSelection` method\r\n   * accomplishes this.\r\n   *\r\n   * This method should be used in cases where you need to explicitly\r\n   * move the DOM selection from one place to another without a change\r\n   * in ContentState.\r\n   */\r\n  static forceSelection(\r\n    editorState: EditorState,\r\n    selection: SelectionState,\r\n  ): EditorState {\r\n    if (!selection.getHasFocus()) {\r\n      selection = selection.set('hasFocus', true) as any;\r\n    }\r\n    return updateSelection(editorState, selection, true);\r\n  }\r\n\r\n  /**\r\n   * Move selection to the end of the editor without forcing focus.\r\n   */\r\n  static moveSelectionToEnd(editorState: EditorState): EditorState {\r\n    const content = editorState.getCurrentContent();\r\n    const lastBlock = content.getLastBlock();\r\n    const lastKey = lastBlock.getKey();\r\n    const length = lastBlock.getLength();\r\n\r\n    return EditorState.acceptSelection(\r\n      editorState,\r\n      new SelectionState({\r\n        anchorKey: lastKey,\r\n        anchorOffset: length,\r\n        focusKey: lastKey,\r\n        focusOffset: length,\r\n        isBackward: false,\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Force focus to the end of the editor. This is useful in scenarios\r\n   * where we want to programmatically focus the input and it makes sense\r\n   * to allow the user to continue working seamlessly.\r\n   */\r\n  static moveFocusToEnd(editorState: EditorState): EditorState {\r\n    const afterSelectionMove = EditorState.moveSelectionToEnd(editorState);\r\n    return EditorState.forceSelection(\r\n      afterSelectionMove,\r\n      afterSelectionMove.getSelection(),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Push the current ContentState onto the undo stack if it should be\r\n   * considered a boundary state, and set the provided ContentState as the\r\n   * new current content.\r\n   */\r\n  static push(\r\n    editorState: EditorState,\r\n    contentState: ContentState,\r\n    changeType: EditorChangeType,\r\n    forceSelection: boolean = true,\r\n  ): EditorState {\r\n    if (editorState.getCurrentContent() === contentState) {\r\n      return editorState;\r\n    }\r\n\r\n    const directionMap = EditorBidiService.getDirectionMap(\r\n      contentState,\r\n      editorState.getDirectionMap(),\r\n    );\r\n\r\n    if (!editorState.getAllowUndo()) {\r\n      return EditorState.set(editorState, {\r\n        currentContent: contentState,\r\n        directionMap,\r\n        lastChangeType: changeType,\r\n        selection: contentState.getSelectionAfter(),\r\n        forceSelection,\r\n        inlineStyleOverride: null,\r\n      });\r\n    }\r\n\r\n    const selection = editorState.getSelection();\r\n    const currentContent = editorState.getCurrentContent();\r\n    let undoStack = editorState.getUndoStack();\r\n    let newContent:any = contentState;\r\n\r\n    if (\r\n      selection !== currentContent.getSelectionAfter() ||\r\n      mustBecomeBoundary(editorState, changeType)\r\n    ) {\r\n      undoStack = undoStack.push(currentContent);\r\n      newContent = newContent.set('selectionBefore', selection);\r\n    } else if (\r\n      changeType === 'insert-characters' ||\r\n      changeType === 'backspace-character' ||\r\n      changeType === 'delete-character'\r\n    ) {\r\n      // Preserve the previous selection.\r\n      newContent = newContent.set(\r\n        'selectionBefore',\r\n        currentContent.getSelectionBefore(),\r\n      );\r\n    }\r\n\r\n    let inlineStyleOverride = editorState.getInlineStyleOverride();\r\n\r\n    // Don't discard inline style overrides for the following change types:\r\n    const overrideChangeTypes = [\r\n      'adjust-depth',\r\n      'change-block-type',\r\n      'split-block',\r\n    ];\r\n\r\n    if (overrideChangeTypes.indexOf(changeType) === -1) {\r\n      inlineStyleOverride = null;\r\n    }\r\n\r\n    const editorStateChanges = {\r\n      currentContent: newContent,\r\n      directionMap,\r\n      undoStack,\r\n      redoStack: Stack(),\r\n      lastChangeType: changeType,\r\n      selection: contentState.getSelectionAfter(),\r\n      forceSelection,\r\n      inlineStyleOverride,\r\n    };\r\n\r\n    return EditorState.set(editorState, editorStateChanges);\r\n  }\r\n\r\n  /**\r\n   * Make the top ContentState in the undo stack the new current content and\r\n   * push the current content onto the redo stack.\r\n   */\r\n  static undo(editorState: EditorState): EditorState {\r\n    if (!editorState.getAllowUndo()) {\r\n      return editorState;\r\n    }\r\n\r\n    const undoStack = editorState.getUndoStack();\r\n    const newCurrentContent = undoStack.peek();\r\n    if (!newCurrentContent) {\r\n      return editorState;\r\n    }\r\n\r\n    const currentContent = editorState.getCurrentContent();\r\n    const directionMap = EditorBidiService.getDirectionMap(\r\n      newCurrentContent,\r\n      editorState.getDirectionMap(),\r\n    );\r\n\r\n    return EditorState.set(editorState, {\r\n      currentContent: newCurrentContent,\r\n      directionMap,\r\n      undoStack: undoStack.shift(),\r\n      redoStack: editorState.getRedoStack().push(currentContent),\r\n      forceSelection: true,\r\n      inlineStyleOverride: null,\r\n      lastChangeType: 'undo',\r\n      nativelyRenderedContent: null,\r\n      selection: currentContent.getSelectionBefore(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Make the top ContentState in the redo stack the new current content and\r\n   * push the current content onto the undo stack.\r\n   */\r\n  static redo(editorState: EditorState): EditorState {\r\n    if (!editorState.getAllowUndo()) {\r\n      return editorState;\r\n    }\r\n\r\n    const redoStack = editorState.getRedoStack();\r\n    const newCurrentContent = redoStack.peek();\r\n    if (!newCurrentContent) {\r\n      return editorState;\r\n    }\r\n\r\n    const currentContent = editorState.getCurrentContent();\r\n    const directionMap = EditorBidiService.getDirectionMap(\r\n      newCurrentContent,\r\n      editorState.getDirectionMap(),\r\n    );\r\n\r\n    return EditorState.set(editorState, {\r\n      currentContent: newCurrentContent,\r\n      directionMap,\r\n      undoStack: editorState.getUndoStack().push(currentContent),\r\n      redoStack: redoStack.shift(),\r\n      forceSelection: true,\r\n      inlineStyleOverride: null,\r\n      lastChangeType: 'redo',\r\n      nativelyRenderedContent: null,\r\n      selection: newCurrentContent.getSelectionAfter(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Not for public consumption.\r\n   */\r\n  constructor(immutable:typeof EditorStateRecord) {\r\n    this._immutable = immutable;\r\n  }\r\n\r\n  /**\r\n   * Not for public consumption.\r\n   */\r\n  getImmutable():any {  //EditorStateRecord\r\n    return this._immutable;\r\n  }\r\n}\r\n\r\n/**\r\n * Set the supplied SelectionState as the new current selection, and set\r\n * the `force` flag to trigger manual selection placement by the view.\r\n */\r\nfunction updateSelection(\r\n  editorState: EditorState,\r\n  selection: SelectionState,\r\n  forceSelection: boolean,\r\n): EditorState {\r\n  return EditorState.set(editorState, {\r\n    selection,\r\n    forceSelection,\r\n    nativelyRenderedContent: null,\r\n    inlineStyleOverride: null,\r\n  });\r\n}\r\n\r\n/**\r\n * Regenerate the entire tree map for a given ContentState and decorator.\r\n * Returns an OrderedMap that maps all available ContentBlock objects.\r\n */\r\nfunction generateNewTreeMap(\r\n  contentState: ContentState,\r\n  decorator?: DraftDecoratorType,\r\n): OrderedMap<string, List<any>> {\r\n  return contentState\r\n    .getBlockMap()\r\n    .map(block => BlockTree.generate(contentState, block, decorator))\r\n    .toOrderedMap();\r\n}\r\n\r\n/**\r\n * Regenerate tree map objects for all ContentBlocks that have changed\r\n * between the current editorState and newContent. Returns an OrderedMap\r\n * with only changed regenerated tree map objects.\r\n */\r\nfunction regenerateTreeForNewBlocks(\r\n  editorState: EditorState,\r\n  newBlockMap: BlockMap,\r\n  newEntityMap: EntityMap,\r\n  decorator?: DraftDecoratorType,\r\n): OrderedMap<string, List<any>> {\r\n  const contentState:any = editorState\r\n    .getCurrentContent()\r\n    .set('entityMap', newEntityMap);\r\n  const prevBlockMap = contentState.getBlockMap();\r\n  const prevTreeMap = (editorState as any).getImmutable().get('treeMap');\r\n  return prevTreeMap.merge(\r\n    newBlockMap\r\n      .toSeq()\r\n      .filter((block, key) => block !== prevBlockMap.get(key))\r\n      .map(block => BlockTree.generate(contentState, block, decorator)),\r\n  );\r\n}\r\n\r\n/**\r\n * Generate tree map objects for a new decorator object, preserving any\r\n * decorations that are unchanged from the previous decorator.\r\n *\r\n * Note that in order for this to perform optimally, decoration Lists for\r\n * decorators should be preserved when possible to allow for direct immutable\r\n * List comparison.\r\n */\r\nfunction regenerateTreeForNewDecorator(\r\n  content: ContentState,\r\n  blockMap: BlockMap,\r\n  previousTreeMap: OrderedMap<string, List<any>>,\r\n  decorator: DraftDecoratorType,\r\n  existingDecorator: DraftDecoratorType,\r\n): OrderedMap<string, List<any>> {\r\n  return previousTreeMap.merge(\r\n    blockMap\r\n      .toSeq()\r\n      .filter(block => {\r\n        return (\r\n          decorator.getDecorations(block, content) !==\r\n          existingDecorator.getDecorations(block, content)\r\n        );\r\n      })\r\n      .map(block => BlockTree.generate(content, block, decorator)),\r\n  );\r\n}\r\n\r\n/**\r\n * Return whether a change should be considered a boundary state, given\r\n * the previous change type. Allows us to discard potential boundary states\r\n * during standard typing or deletion behavior.\r\n */\r\nfunction mustBecomeBoundary(\r\n  editorState: EditorState,\r\n  changeType: EditorChangeType,\r\n): boolean {\r\n  const lastChangeType = editorState.getLastChangeType();\r\n  return (\r\n    changeType !== lastChangeType ||\r\n    (changeType !== 'insert-characters' &&\r\n      changeType !== 'backspace-character' &&\r\n      changeType !== 'delete-character')\r\n  );\r\n}\r\n\r\nfunction getInlineStyleForCollapsedSelection(\r\n  content: ContentState,\r\n  selection: SelectionState,\r\n): DraftInlineStyle {\r\n  const startKey = selection.getStartKey();\r\n  const startOffset = selection.getStartOffset();\r\n  const startBlock = content.getBlockForKey(startKey);\r\n\r\n  // If the cursor is not at the start of the block, look backward to\r\n  // preserve the style of the preceding character.\r\n  if (startOffset > 0) {\r\n    return startBlock.getInlineStyleAt(startOffset - 1);\r\n  }\r\n\r\n  // The caret is at position zero in this block. If the block has any\r\n  // text at all, use the style of the first character.\r\n  if (startBlock.getLength()) {\r\n    return startBlock.getInlineStyleAt(0);\r\n  }\r\n\r\n  // Otherwise, look upward in the document to find the closest character.\r\n  return lookUpwardForInlineStyle(content, startKey);\r\n}\r\n\r\nfunction getInlineStyleForNonCollapsedSelection(\r\n  content: ContentState,\r\n  selection: SelectionState,\r\n): DraftInlineStyle {\r\n  const startKey = selection.getStartKey();\r\n  const startOffset = selection.getStartOffset();\r\n  const startBlock = content.getBlockForKey(startKey);\r\n\r\n  // If there is a character just inside the selection, use its style.\r\n  if (startOffset < startBlock.getLength()) {\r\n    return startBlock.getInlineStyleAt(startOffset);\r\n  }\r\n\r\n  // Check if the selection at the end of a non-empty block. Use the last\r\n  // style in the block.\r\n  if (startOffset > 0) {\r\n    return startBlock.getInlineStyleAt(startOffset - 1);\r\n  }\r\n\r\n  // Otherwise, look upward in the document to find the closest character.\r\n  return lookUpwardForInlineStyle(content, startKey);\r\n}\r\n\r\nfunction lookUpwardForInlineStyle(\r\n  content: ContentState,\r\n  fromKey: string,\r\n): DraftInlineStyle {\r\n  const lastNonEmpty = content\r\n    .getBlockMap()\r\n    .reverse()\r\n    .skipUntil((_, k) => k === fromKey)\r\n    .skip(1)\r\n    .skipUntil((block:any, _) => block.getLength())\r\n    .first();\r\n\r\n  if (lastNonEmpty) {\r\n    return lastNonEmpty.getInlineStyleAt(lastNonEmpty.getLength() - 1);\r\n  }\r\n  return OrderedSet();\r\n}\r\n\r\nexport default  EditorState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from '../immutable/BlockMap';\r\nimport {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  {DraftInsertionType} from '../constants/DraftInsertionType';\r\n\r\nimport ContentBlockNode  from '../immutable/ContentBlockNode';\r\n\r\nimport getNextDelimiterBlockKey from './exploration/getNextDelimiterBlockKey';\r\nimport { OrderedMap,List } from 'immutable';\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\n\r\nconst transformBlock = (\r\n  key: string,\r\n  blockMap: BlockMap,\r\n  func: (block: ContentBlockNode) => ContentBlockNode,\r\n): void => {\r\n  if (!key) {\r\n    return;\r\n  }\r\n\r\n  const block:any = blockMap.get(key);\r\n\r\n  if (!block) {\r\n    return;\r\n  }\r\n\r\n  blockMap.set(key, func(block));\r\n};\r\n\r\nconst updateBlockMapLinks = (\r\n  blockMap: BlockMap,\r\n  originalBlockToBeMoved: BlockNodeRecord,\r\n  originalTargetBlock: BlockNodeRecord,\r\n  insertionMode: DraftInsertionType,\r\n  isExperimentalTreeBlock: boolean,\r\n): BlockMap => {\r\n  if (!isExperimentalTreeBlock) {\r\n    return blockMap;\r\n  }\r\n  // possible values of 'insertionMode' are: 'after', 'before'\r\n  const isInsertedAfterTarget = insertionMode === 'after';\r\n\r\n  const originalBlockKey = originalBlockToBeMoved.getKey();\r\n  const originalTargetKey = originalTargetBlock.getKey();\r\n  const originalParentKey = originalBlockToBeMoved.getParentKey();\r\n  const originalNextSiblingKey = originalBlockToBeMoved.getNextSiblingKey();\r\n  const originalPrevSiblingKey = originalBlockToBeMoved.getPrevSiblingKey();\r\n  const newParentKey = originalTargetBlock.getParentKey();\r\n  const newNextSiblingKey = isInsertedAfterTarget\r\n    ? originalTargetBlock.getNextSiblingKey()\r\n    : originalTargetKey;\r\n  const newPrevSiblingKey = isInsertedAfterTarget\r\n    ? originalTargetKey\r\n    : originalTargetBlock.getPrevSiblingKey();\r\n\r\n  return blockMap.withMutations(blocks => {\r\n    // update old parent\r\n    transformBlock(originalParentKey, blocks, (block:any) => {\r\n      const parentChildrenList = block.getChildKeys();\r\n      return block.merge({\r\n        children: parentChildrenList.delete(\r\n          parentChildrenList.indexOf(originalBlockKey),\r\n        ),\r\n      });\r\n    });\r\n\r\n    // update old prev\r\n    transformBlock(originalPrevSiblingKey, blocks, block =>\r\n      block.merge({\r\n        nextSibling: originalNextSiblingKey,\r\n      }) as any ,\r\n    );\r\n\r\n    // update old next\r\n    transformBlock(originalNextSiblingKey, blocks, block =>\r\n      block.merge({\r\n        prevSibling: originalPrevSiblingKey,\r\n      }) as any ,\r\n    );\r\n\r\n    // update new next\r\n    transformBlock(newNextSiblingKey, blocks, block =>\r\n      block.merge({\r\n        prevSibling: originalBlockKey,\r\n      }) as any,\r\n    );\r\n\r\n    // update new prev\r\n    transformBlock(newPrevSiblingKey, blocks, block =>\r\n      block.merge({\r\n        nextSibling: originalBlockKey,\r\n      }) as any,\r\n    );\r\n\r\n    // update new parent\r\n    transformBlock(newParentKey, blocks, (block:any) => {\r\n      const newParentChildrenList = block.getChildKeys();\r\n      const targetBlockIndex = newParentChildrenList.indexOf(originalTargetKey);\r\n\r\n      const insertionIndex = isInsertedAfterTarget\r\n        ? targetBlockIndex + 1\r\n        : targetBlockIndex !== 0\r\n        ? targetBlockIndex - 1\r\n        : 0;\r\n\r\n      const newChildrenArray = newParentChildrenList.toArray();\r\n      newChildrenArray.splice(insertionIndex, 0, originalBlockKey);\r\n\r\n      return block.merge({\r\n        children: List(newChildrenArray),\r\n      });\r\n    });\r\n\r\n    // update block\r\n    transformBlock(originalBlockKey, blocks, block =>\r\n      block.merge({\r\n        nextSibling: newNextSiblingKey,\r\n        prevSibling: newPrevSiblingKey,\r\n        parent: newParentKey,\r\n      }) as any,\r\n    );\r\n  });\r\n};\r\n\r\nconst moveBlockInContentState = (\r\n  contentState: ContentState,\r\n  blockToBeMoved: BlockNodeRecord,\r\n  targetBlock: BlockNodeRecord,\r\n  insertionMode: DraftInsertionType,\r\n): ContentState => {\r\n  invariant(insertionMode !== 'replace', 'Replacing blocks is not supported.');\r\n\r\n  const targetKey = targetBlock.getKey();\r\n  const blockKey = blockToBeMoved.getKey();\r\n\r\n  invariant(blockKey !== targetKey, 'Block cannot be moved next to itself.');\r\n\r\n  const blockMap = contentState.getBlockMap();\r\n  const isExperimentalTreeBlock = blockToBeMoved instanceof ContentBlockNode;\r\n\r\n  let blocksToBeMoved = [blockToBeMoved];\r\n  let blockMapWithoutBlocksToBeMoved = blockMap.delete(blockKey);\r\n\r\n  if (isExperimentalTreeBlock) {\r\n    blocksToBeMoved = [];\r\n    blockMapWithoutBlocksToBeMoved = blockMap.withMutations(blocks => {\r\n      const nextSiblingKey = blockToBeMoved.getNextSiblingKey();\r\n      const nextDelimiterBlockKey = getNextDelimiterBlockKey(\r\n        blockToBeMoved,\r\n        blocks,\r\n      );\r\n\r\n      blocks\r\n        .toSeq()\r\n        .skipUntil(block => block.getKey() === blockKey)\r\n        .takeWhile(block => {\r\n          const key = block.getKey();\r\n          const isBlockToBeMoved = key === blockKey;\r\n          const hasNextSiblingAndIsNotNextSibling =\r\n            nextSiblingKey && key !== nextSiblingKey;\r\n          const doesNotHaveNextSiblingAndIsNotDelimiter =\r\n            !nextSiblingKey &&\r\n            block.getParentKey() &&\r\n            (!nextDelimiterBlockKey || key !== nextDelimiterBlockKey);\r\n\r\n          return !!(\r\n            isBlockToBeMoved ||\r\n            hasNextSiblingAndIsNotNextSibling ||\r\n            doesNotHaveNextSiblingAndIsNotDelimiter\r\n          );\r\n        })\r\n        .forEach(block => {\r\n          blocksToBeMoved.push(block);\r\n          blocks.delete(block.getKey());\r\n        });\r\n    });\r\n  }\r\n\r\n  const blocksBefore = blockMapWithoutBlocksToBeMoved\r\n    .toSeq()\r\n    .takeUntil(v => v === targetBlock);\r\n\r\n  const blocksAfter = blockMapWithoutBlocksToBeMoved\r\n    .toSeq()\r\n    .skipUntil(v => v === targetBlock)\r\n    .skip(1);\r\n\r\n  const slicedBlocks = blocksToBeMoved.map(block => [block.getKey(), block]);\r\n\r\n  let newBlocks:any = OrderedMap();\r\n\r\n  if (insertionMode === 'before') {\r\n    const blockBefore = contentState.getBlockBefore(targetKey);\r\n\r\n    invariant(\r\n      !blockBefore || blockBefore.getKey() !== blockToBeMoved.getKey(),\r\n      'Block cannot be moved next to itself.',\r\n    );\r\n\r\n    newBlocks = blocksBefore\r\n      .concat([...slicedBlocks, [targetKey, targetBlock]], blocksAfter)\r\n      .toOrderedMap();\r\n  } else if (insertionMode === 'after') {\r\n    const blockAfter = contentState.getBlockAfter(targetKey);\r\n\r\n    invariant(\r\n      !blockAfter || blockAfter.getKey() !== blockKey,\r\n      'Block cannot be moved next to itself.',\r\n    );\r\n\r\n    newBlocks = blocksBefore\r\n      .concat([[targetKey, targetBlock], ...slicedBlocks], blocksAfter)\r\n      .toOrderedMap();\r\n  }\r\n\r\n  return contentState.merge({\r\n    blockMap: updateBlockMapLinks(\r\n      newBlocks,\r\n      blockToBeMoved,\r\n      targetBlock,\r\n      insertionMode,\r\n      isExperimentalTreeBlock,\r\n    ),\r\n    selectionBefore: contentState.getSelectionAfter(),\r\n    selectionAfter: contentState.getSelectionAfter().merge({\r\n      anchorKey: blockKey,\r\n      focusKey: blockKey,\r\n    }),\r\n  }) as any;\r\n};\r\n\r\nexport default  moveBlockInContentState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport {DraftInsertionType} from '../constants/DraftInsertionType';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nimport BlockMapBuilder from '../immutable/BlockMapBuilder';\r\nimport CharacterMetadata from '../immutable/CharacterMetadata';\r\nimport ContentBlock from '../immutable/ContentBlock';\r\nimport ContentBlockNode from '../immutable/ContentBlockNode';\r\nimport DraftModifier from './DraftModifier';\r\nimport EditorState from '../immutable/EditorState';\r\n\r\nimport generateRandomKey from '../keys/generateRandomKey';\r\nimport gkx from '../../stubs/gkx';\r\nimport {List, Repeat} from 'immutable';\r\nimport moveBlockInContentState from '../transaction/moveBlockInContentState';\r\n\r\nconst experimentalTreeDataSupport = gkx('draft_tree_data_support');\r\nconst ContentBlockRecord = experimentalTreeDataSupport\r\n  ? ContentBlockNode\r\n  : ContentBlock;\r\n\r\n\r\nconst AtomicBlockUtils = {\r\n  insertAtomicBlock: function(\r\n    editorState: EditorState,\r\n    entityKey: string,\r\n    character: string,\r\n  ): EditorState {\r\n    const contentState = editorState.getCurrentContent();\r\n    const selectionState = editorState.getSelection();\r\n\r\n    const afterRemoval = DraftModifier.removeRange(\r\n      contentState,\r\n      selectionState,\r\n      'backward',\r\n    );\r\n\r\n    const targetSelection = afterRemoval.getSelectionAfter();\r\n    const afterSplit = DraftModifier.splitBlock(afterRemoval, targetSelection);\r\n    const insertionTarget = afterSplit.getSelectionAfter();\r\n\r\n    const asAtomicBlock = DraftModifier.setBlockType(\r\n      afterSplit,\r\n      insertionTarget,\r\n      'atomic',\r\n    );\r\n\r\n    const charData = CharacterMetadata.create({entity: entityKey});\r\n\r\n    let atomicBlockConfig:any = {\r\n      key: generateRandomKey(),\r\n      type: 'atomic',\r\n      text: character,\r\n      characterList: List(Repeat(charData, character.length)),\r\n    };\r\n\r\n    let atomicDividerBlockConfig:any = {\r\n      key: generateRandomKey(),\r\n      type: 'unstyled',\r\n    };\r\n\r\n    if (experimentalTreeDataSupport) {\r\n      atomicBlockConfig = {\r\n        ...atomicBlockConfig,\r\n        nextSibling: atomicDividerBlockConfig.key,\r\n      };\r\n      atomicDividerBlockConfig = {\r\n        ...atomicDividerBlockConfig,\r\n        prevSibling: atomicBlockConfig.key,\r\n      };\r\n    }\r\n\r\n    const fragmentArray = [\r\n      new ContentBlockRecord(atomicBlockConfig),\r\n      new ContentBlockRecord(atomicDividerBlockConfig),\r\n    ];\r\n\r\n    const fragment = BlockMapBuilder.createFromArray(fragmentArray);\r\n\r\n    const withAtomicBlock = DraftModifier.replaceWithFragment(\r\n      asAtomicBlock,\r\n      insertionTarget,\r\n      fragment,\r\n    );\r\n\r\n    const newContent:any = withAtomicBlock.merge({\r\n      selectionBefore: selectionState,\r\n      selectionAfter: withAtomicBlock.getSelectionAfter().set('hasFocus', true),\r\n    });\r\n\r\n    return EditorState.push(editorState, newContent, 'insert-fragment');\r\n  },\r\n\r\n  moveAtomicBlock: function(\r\n    editorState: EditorState,\r\n    atomicBlock: BlockNodeRecord,\r\n    targetRange: SelectionState,\r\n    insertionMode?: DraftInsertionType,\r\n  ): EditorState {\r\n    const contentState = editorState.getCurrentContent();\r\n    const selectionState = editorState.getSelection();\r\n\r\n    let withMovedAtomicBlock;\r\n\r\n    if (insertionMode === 'before' || insertionMode === 'after') {\r\n      const targetBlock = contentState.getBlockForKey(\r\n        insertionMode === 'before'\r\n          ? targetRange.getStartKey()\r\n          : targetRange.getEndKey(),\r\n      );\r\n\r\n      withMovedAtomicBlock = moveBlockInContentState(\r\n        contentState,\r\n        atomicBlock,\r\n        targetBlock,\r\n        insertionMode,\r\n      );\r\n    } else {\r\n      const afterRemoval = DraftModifier.removeRange(\r\n        contentState,\r\n        targetRange,\r\n        'backward',\r\n      );\r\n\r\n      const selectionAfterRemoval = afterRemoval.getSelectionAfter();\r\n      const targetBlock = afterRemoval.getBlockForKey(\r\n        selectionAfterRemoval.getFocusKey(),\r\n      );\r\n\r\n      if (selectionAfterRemoval.getStartOffset() === 0) {\r\n        withMovedAtomicBlock = moveBlockInContentState(\r\n          afterRemoval,\r\n          atomicBlock,\r\n          targetBlock,\r\n          'before',\r\n        );\r\n      } else if (\r\n        selectionAfterRemoval.getEndOffset() === targetBlock.getLength()\r\n      ) {\r\n        withMovedAtomicBlock = moveBlockInContentState(\r\n          afterRemoval,\r\n          atomicBlock,\r\n          targetBlock,\r\n          'after',\r\n        );\r\n      } else {\r\n        const afterSplit = DraftModifier.splitBlock(\r\n          afterRemoval,\r\n          selectionAfterRemoval,\r\n        );\r\n\r\n        const selectionAfterSplit = afterSplit.getSelectionAfter();\r\n        const targetBlock = afterSplit.getBlockForKey(\r\n          selectionAfterSplit.getFocusKey(),\r\n        );\r\n\r\n        withMovedAtomicBlock = moveBlockInContentState(\r\n          afterSplit,\r\n          atomicBlock,\r\n          targetBlock,\r\n          'before',\r\n        );\r\n      }\r\n    }\r\n\r\n    const newContent = withMovedAtomicBlock.merge({\r\n      selectionBefore: selectionState,\r\n      selectionAfter: withMovedAtomicBlock\r\n        .getSelectionAfter()\r\n        .set('hasFocus', true),\r\n    });\r\n\r\n    return EditorState.push(editorState, newContent, 'move-block');\r\n  },\r\n};\r\n\r\nexport default  AtomicBlockUtils;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport { BlockNodeRecord } from \"../immutable/BlockNodeRecord\";\r\nimport ContentState from \"../immutable/ContentState\";\r\nimport { DraftDecorator } from \"./DraftDecorator\";\r\n\r\nimport { List } from \"immutable\";\r\n\r\nconst DELIMITER = \".\";\r\n\r\n/**\r\n * A CompositeDraftDecorator traverses through a list of DraftDecorator\r\n * instances to identify sections of a ContentBlock that should be rendered\r\n * in a \"decorated\" manner. For example, hashtags, mentions, and links may\r\n * be intended to stand out visually, be rendered as anchors, etc.\r\n *\r\n * The list of decorators supplied to the constructor will be used in the\r\n * order they are provided. This allows the caller to specify a priority for\r\n * string matching, in case of match collisions among decorators.\r\n *\r\n * For instance, I may have a link with a `#` in its text. Though this section\r\n * of text may match our hashtag decorator, it should not be treated as a\r\n * hashtag. I should therefore list my link DraftDecorator\r\n * before my hashtag DraftDecorator when constructing this composite\r\n * decorator instance.\r\n *\r\n * Thus, when a collision like this is encountered, the earlier match is\r\n * preserved and the new match is discarded.\r\n */\r\nclass CompositeDraftDecorator {\r\n    _decorators: Array<DraftDecorator>;\r\n\r\n    constructor(decorators: Array<DraftDecorator>) {\r\n        // Copy the decorator array, since we use this array order to determine\r\n        // precedence of decoration matching. If the array is mutated externally,\r\n        // we don't want to be affected here.\r\n        this._decorators = decorators.slice();\r\n    }\r\n\r\n    getDecorations(block: BlockNodeRecord, contentState: ContentState): List<string> {\r\n        const decorations = Array(block.getText().length).fill(null);\r\n\r\n        this._decorators.forEach((/*object*/ decorator, /*number*/ ii) => {\r\n            let counter = 0;\r\n            const strategy = decorator.strategy;\r\n            const callback = (/*number*/ start, /*number*/ end) => {\r\n                // Find out if any of our matching range is already occupied\r\n                // by another decorator. If so, discard the match. Otherwise, store\r\n                // the component key for rendering.\r\n                if (canOccupySlice(decorations, start, end)) {\r\n                    occupySlice(decorations, start, end, ii + DELIMITER + counter);\r\n                    counter++;\r\n                }\r\n            };\r\n            strategy(block, callback, contentState);\r\n        });\r\n\r\n        return List(decorations);\r\n    }\r\n\r\n    getComponentForKey(key: string): Function {\r\n        const componentKey = parseInt(key.split(DELIMITER)[0], 10);\r\n        return this._decorators[componentKey].component;\r\n    }\r\n\r\n    getPropsForKey(key: string): Object {\r\n        const componentKey = parseInt(key.split(DELIMITER)[0], 10);\r\n        return this._decorators[componentKey].props;\r\n    }\r\n}\r\n\r\n/**\r\n * Determine whether we can occupy the specified slice of the decorations\r\n * array.\r\n */\r\nfunction canOccupySlice(decorations: Array<string>, start: number, end: number): boolean {\r\n    for (let ii = start; ii < end; ii++) {\r\n        if (decorations[ii] != null) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Splice the specified component into our decoration array at the desired\r\n * range.\r\n */\r\nfunction occupySlice(targetArr: Array<string>, start: number, end: number, componentKey: string): void {\r\n    for (let ii = start; ii < end; ii++) {\r\n        targetArr[ii] = componentKey;\r\n    }\r\n}\r\n\r\nexport default CompositeDraftDecorator;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {DraftBlockRenderConfig} from './DraftBlockRenderConfig';\r\nimport  {CoreDraftBlockType} from '../constants/DraftBlockType';\r\n\r\nimport React from 'react'\r\nimport cx from 'fbjs/lib/cx';\r\n\r\nimport {Map} from 'immutable';\r\n\r\ntype DefaultCoreDraftBlockRenderMap = Map<\r\n  CoreDraftBlockType,\r\n  DraftBlockRenderConfig\r\n>;\r\n\r\nconst UL_WRAP = <ul className={cx('public/DraftStyleDefault/ul')} />;\r\nconst OL_WRAP = <ol className={cx('public/DraftStyleDefault/ol')} />;\r\nconst PRE_WRAP = <pre className={cx('public/DraftStyleDefault/pre')} />;\r\n\r\nconst DefaultDraftBlockRenderMap: DefaultCoreDraftBlockRenderMap = Map<CoreDraftBlockType, any>({\r\n  'header-one': {\r\n    element: 'h1',\r\n  },\r\n  'header-two': {\r\n    element: 'h2',\r\n  },\r\n  'header-three': {\r\n    element: 'h3',\r\n  },\r\n  'header-four': {\r\n    element: 'h4',\r\n  },\r\n  'header-five': {\r\n    element: 'h5',\r\n  },\r\n  'header-six': {\r\n    element: 'h6',\r\n  },\r\n  section: {\r\n    element: 'section',\r\n  },\r\n  article: {\r\n    element: 'article',\r\n  },\r\n  'unordered-list-item': {\r\n    element: 'li',\r\n    wrapper: UL_WRAP,\r\n  },\r\n  'ordered-list-item': {\r\n    element: 'li',\r\n    wrapper: OL_WRAP,\r\n  },\r\n  blockquote: {\r\n    element: 'blockquote',\r\n  },\r\n  atomic: {\r\n    element: 'figure',\r\n  },\r\n  'code-block': {\r\n    element: 'pre',\r\n    wrapper: PRE_WRAP,\r\n  },\r\n  unstyled: {\r\n    element: 'div',\r\n    aliasedElements: ['p'],\r\n  },\r\n});\r\n\r\nexport default  DefaultDraftBlockRenderMap;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nexport default  {\r\n  BOLD: {\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  CODE: {\r\n    fontFamily: 'monospace',\r\n    wordWrap: 'break-word',\r\n  },\r\n\r\n  ITALIC: {\r\n    fontStyle: 'italic',\r\n  },\r\n\r\n  STRIKETHROUGH: {\r\n    textDecoration: 'line-through',\r\n  },\r\n\r\n  UNDERLINE: {\r\n    textDecoration: 'underline',\r\n  },\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\nfunction getCorrectDocumentFromNode(node: Node): Document {\r\n  if (!node || !node.ownerDocument) {\r\n    return document;\r\n  }\r\n  return node.ownerDocument;\r\n}\r\n\r\nexport default  getCorrectDocumentFromNode;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\nfunction isElement(node: Node): boolean {\r\n  if (!node || !node.ownerDocument) {\r\n    return false;\r\n  }\r\n  return node.nodeType === Node.ELEMENT_NODE;\r\n}\r\n\r\nexport default  isElement;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Get offset key from a node or it's child nodes. Return the first offset key\r\n * found on the DOM tree of given node.\r\n */\r\nimport isElement from '../utils/isElement';\r\n\r\nfunction getSelectionOffsetKeyForNode(node: Node): string {\r\n  if (isElement(node)) {\r\n    const castedNode: Element = (node as any);\r\n    const offsetKey = castedNode.getAttribute('data-offset-key');\r\n    if (offsetKey) {\r\n      return offsetKey;\r\n    }\r\n    for (let ii = 0; ii < castedNode.childNodes.length; ii++) {\r\n      const childOffsetKey = getSelectionOffsetKeyForNode(\r\n        castedNode.childNodes[ii],\r\n      );\r\n      if (childOffsetKey) {\r\n        return childOffsetKey;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default  getSelectionOffsetKeyForNode;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport getCorrectDocumentFromNode from '../utils/getCorrectDocumentFromNode';\r\nimport getSelectionOffsetKeyForNode from './getSelectionOffsetKeyForNode';\r\n/**\r\n * Get the key from the node's nearest offset-aware ancestor.\r\n */\r\nfunction findAncestorOffsetKey(node: Node): string {\r\n  let searchNode = node;\r\n  while (\r\n    searchNode &&\r\n    searchNode !== getCorrectDocumentFromNode(node).documentElement\r\n  ) {\r\n    const key = getSelectionOffsetKeyForNode(searchNode);\r\n    if (key != null) {\r\n      return key;\r\n    }\r\n    searchNode = searchNode.parentNode;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default  findAncestorOffsetKey;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\nfunction getWindowForNode(node: Node): any {\r\n  if (!node || !node.ownerDocument || !node.ownerDocument.defaultView) {\r\n    return window;\r\n  }\r\n  return node.ownerDocument.defaultView;\r\n}\r\n\r\nexport default  getWindowForNode;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nimport findAncestorOffsetKey from '../../selection/findAncestorOffsetKey';\r\nimport getWindowForNode from '../../utils/getWindowForNode';\r\nimport {Map} from 'immutable';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\n\r\ntype MutationRecordT =\r\n  | MutationRecord\r\n  | {type: 'characterData', target: Node, removedNodes?: void};\r\n\r\n// Heavily based on Prosemirror's DOMObserver https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js\r\n\r\nconst DOM_OBSERVER_OPTIONS = {\r\n  subtree: true,\r\n  characterData: true,\r\n  childList: true,\r\n  characterDataOldValue: false,\r\n  attributes: false,\r\n};\r\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\r\nconst USE_CHAR_DATA = UserAgent.isBrowser('IE <= 11');\r\n\r\nclass DOMObserver {\r\n  observer: MutationObserver;\r\n  container: HTMLElement;\r\n  mutations: Map<string, string>;\r\n  onCharData: ({target: EventTarget, type: string}) => void;\r\n\r\n  constructor(container: HTMLElement) {\r\n    this.container = container;\r\n    this.mutations = Map();\r\n    const containerWindow = getWindowForNode(container);\r\n    if (containerWindow.MutationObserver && !USE_CHAR_DATA) {\r\n      this.observer = new containerWindow.MutationObserver(mutations =>\r\n        this.registerMutations(mutations),\r\n      );\r\n    } else {\r\n      this.onCharData = e => {\r\n        invariant(\r\n          e.target instanceof Node,\r\n          'Expected target to be an instance of Node',\r\n        );\r\n        this.registerMutation({\r\n          type: 'characterData',\r\n          target: e.target,\r\n        });\r\n      };\r\n    }\r\n  }\r\n\r\n  start(): void {\r\n    if (this.observer) {\r\n      this.observer.observe(this.container, DOM_OBSERVER_OPTIONS);\r\n    } else {\r\n      /* $FlowFixMe(>=0.68.0 site=www,mobile) This event type is not defined\r\n       * by Flow's standard library */\r\n      this.container.addEventListener(\r\n        'DOMCharacterDataModified',\r\n        this.onCharData,\r\n      );\r\n    }\r\n  }\r\n\r\n  stopAndFlushMutations(): Map<string, string> {\r\n    const {observer} = this;\r\n    if (observer) {\r\n      this.registerMutations(observer.takeRecords());\r\n      observer.disconnect();\r\n    } else {\r\n      /* $FlowFixMe(>=0.68.0 site=www,mobile) This event type is not defined\r\n       * by Flow's standard library */\r\n      this.container.removeEventListener(\r\n        'DOMCharacterDataModified',\r\n        this.onCharData,\r\n      );\r\n    }\r\n    const mutations = this.mutations;\r\n    this.mutations = Map();\r\n    return mutations;\r\n  }\r\n\r\n  registerMutations(mutations: Array<MutationRecord>): void {\r\n    for (let i = 0; i < mutations.length; i++) {\r\n      this.registerMutation(mutations[i]);\r\n    }\r\n  }\r\n\r\n  getMutationTextContent(mutation: MutationRecordT): string {\r\n    const {type, target, removedNodes} = mutation;\r\n    if (type === 'characterData') {\r\n      // When `textContent` is '', there is a race condition that makes\r\n      // getting the offsetKey from the target not possible.\r\n      // These events are also followed by a `childList`, which is the one\r\n      // we are able to retrieve the offsetKey and apply the '' text.\r\n      if (target.textContent !== '') {\r\n        return target.textContent;\r\n      }\r\n    } else if (type === 'childList') {\r\n      if (removedNodes && removedNodes.length) {\r\n        // `characterData` events won't happen or are ignored when\r\n        // removing the last character of a leaf node, what happens\r\n        // instead is a `childList` event with a `removedNodes` array.\r\n        // For this case the textContent should be '' and\r\n        // `DraftModifier.replaceText` will make sure the content is\r\n        // updated properly.\r\n        return '';\r\n      } else if (target.textContent !== '') {\r\n        // Typing Chinese in an empty block in MS Edge results in a\r\n        // `childList` event with non-empty textContent.\r\n        // See https://github.com/facebook/draft-js/issues/2082\r\n        return target.textContent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  registerMutation(mutation: MutationRecordT): void {\r\n    const textContent = this.getMutationTextContent(mutation);\r\n    if (textContent != null) {\r\n      const offsetKey = nullthrows(findAncestorOffsetKey(mutation.target));\r\n      this.mutations = this.mutations.set(offsetKey, textContent);\r\n    }\r\n  }\r\n}\r\n\r\nexport default  DOMObserver;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {DraftOffsetKeyPath} from './DraftOffsetKeyPath';\r\n\r\nconst KEY_DELIMITER = '-';\r\n\r\nconst DraftOffsetKey = {\r\n  encode: function(\r\n    blockKey: string,\r\n    decoratorKey: number,\r\n    leafKey: number,\r\n  ): string {\r\n    return blockKey + KEY_DELIMITER + decoratorKey + KEY_DELIMITER + leafKey;\r\n  },\r\n\r\n  decode: function(offsetKey: string): DraftOffsetKeyPath {\r\n    // Extracts the last two parts of offsetKey and captures the rest in blockKeyParts\r\n    const [leafKey, decoratorKey, ...blockKeyParts] = offsetKey\r\n      .split(KEY_DELIMITER)\r\n      .reverse();\r\n\r\n    return {\r\n      // Recomposes the parts of blockKey after reversing them\r\n      blockKey: blockKeyParts.reverse().join(KEY_DELIMITER),\r\n      decoratorKey: parseInt(decoratorKey, 10),\r\n      leafKey: parseInt(leafKey, 10),\r\n    };\r\n  },\r\n};\r\n\r\nexport default  DraftOffsetKey;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n'use strict';\r\n\r\nexport default  {\r\n  logBlockedSelectionEvent: (o:any) => null,\r\n  logSelectionStateFailure: (o:any) => null,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\nfunction isHTMLElement(node: Node): boolean {\r\n  if (!node || !node.ownerDocument) {\r\n    return false;\r\n  }\r\n  if (!node.ownerDocument.defaultView) {\r\n    return node instanceof HTMLElement;\r\n  }\r\n  if (node instanceof (node.ownerDocument.defaultView as any).HTMLElement) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default  isHTMLElement;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../base/DraftEditor.react';\r\n\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport isHTMLElement from './isHTMLElement';\r\n\r\nfunction getContentEditableContainer(editor: DraftEditor): HTMLElement {\r\n  const editorNode = ReactDOM.findDOMNode(editor.editorContainer);\r\n  invariant(editorNode, 'Missing editorNode');\r\n  invariant(\r\n    isHTMLElement(editorNode.firstChild),\r\n    'editorNode.firstChild is not an HTMLElement',\r\n  );\r\n  const htmlElement = (editorNode.firstChild as any);\r\n  return htmlElement;\r\n}\r\n\r\nexport default  getContentEditableContainer;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport EditorState from '../../model/immutable/EditorState';\r\nimport  SelectionState from '../../model/immutable/SelectionState';\r\n\r\nimport DraftOffsetKey from './DraftOffsetKey';\r\n\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\nfunction getUpdatedSelectionState(\r\n  editorState: EditorState,\r\n  anchorKey: string,\r\n  anchorOffset: number,\r\n  focusKey: string,\r\n  focusOffset: number,\r\n): SelectionState {\r\n  const selection: SelectionState = nullthrows(editorState.getSelection());\r\n  if (window['__DEV__']) {\r\n    if (!anchorKey || !focusKey) {\r\n      /* eslint-disable-next-line */\r\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\r\n      return selection;\r\n    }\r\n  }\r\n\r\n  const anchorPath = DraftOffsetKey.decode(anchorKey);\r\n  const anchorBlockKey = anchorPath.blockKey;\r\n  const anchorLeaf = editorState\r\n    .getBlockTree(anchorBlockKey)\r\n    .getIn([anchorPath.decoratorKey, 'leaves', anchorPath.leafKey]);\r\n\r\n  const focusPath = DraftOffsetKey.decode(focusKey);\r\n  const focusBlockKey = focusPath.blockKey;\r\n  const focusLeaf = editorState\r\n    .getBlockTree(focusBlockKey)\r\n    .getIn([focusPath.decoratorKey, 'leaves', focusPath.leafKey]);\r\n\r\n  if (!anchorLeaf || !focusLeaf) {\r\n    // If we cannot make sense of the updated selection state, stick to the current one.\r\n    if (window['__DEV__']) {\r\n      /* eslint-disable-next-line */\r\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\r\n    }\r\n    return selection;\r\n  }\r\n\r\n  const anchorLeafStart: number = anchorLeaf.get('start');\r\n  const focusLeafStart: number = focusLeaf.get('start');\r\n\r\n  const anchorBlockOffset = anchorLeaf ? anchorLeafStart + anchorOffset : null;\r\n  const focusBlockOffset = focusLeaf ? focusLeafStart + focusOffset : null;\r\n\r\n  const areEqual =\r\n    selection.getAnchorKey() === anchorBlockKey &&\r\n    selection.getAnchorOffset() === anchorBlockOffset &&\r\n    selection.getFocusKey() === focusBlockKey &&\r\n    selection.getFocusOffset() === focusBlockOffset;\r\n\r\n  if (areEqual) {\r\n    return selection;\r\n  }\r\n\r\n  let isBackward = false;\r\n  if (anchorBlockKey === focusBlockKey) {\r\n    const anchorLeafEnd: number = anchorLeaf.get('end');\r\n    const focusLeafEnd: number = focusLeaf.get('end');\r\n    if (focusLeafStart === anchorLeafStart && focusLeafEnd === anchorLeafEnd) {\r\n      isBackward = focusOffset < anchorOffset;\r\n    } else {\r\n      isBackward = focusLeafStart < anchorLeafStart;\r\n    }\r\n  } else {\r\n    const startKey = editorState\r\n      .getCurrentContent()\r\n      .getBlockMap()\r\n      .keySeq()\r\n      .skipUntil(v => v === anchorBlockKey || v === focusBlockKey)\r\n      .first();\r\n    isBackward = startKey === focusBlockKey;\r\n  }\r\n\r\n  return selection.merge({\r\n    anchorKey: anchorBlockKey,\r\n    anchorOffset: anchorBlockOffset,\r\n    focusKey: focusBlockKey,\r\n    focusOffset: focusBlockOffset,\r\n    isBackward,\r\n  }) as any;\r\n}\r\n\r\nexport default  getUpdatedSelectionState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport { DOMDerivedSelection } from \"./DOMDerivedSelection\";\r\nimport EditorState from \"../../model/immutable/EditorState\";\r\n\r\nimport findAncestorOffsetKey from \"./findAncestorOffsetKey\";\r\nimport getSelectionOffsetKeyForNode from \"./getSelectionOffsetKeyForNode\";\r\nimport getUpdatedSelectionState from \"./getUpdatedSelectionState\";\r\nimport invariant from \"fbjs/lib/invariant\";\r\nimport isElement from \"../utils/isElement\";\r\nimport nullthrows from \"fbjs/lib/nullthrows\";\r\n\r\ntype SelectionPoint = {\r\n    key: string;\r\n    offset: number;\r\n};\r\n\r\n/**\r\n * Convert the current selection range to an anchor/focus pair of offset keys\r\n * and values that can be interpreted by components.\r\n */\r\nfunction getDraftEditorSelectionWithNodes(editorState: EditorState, root: HTMLElement, anchorNode: Node, anchorOffset: number, focusNode: Node, focusOffset: number): DOMDerivedSelection {\r\n    const anchorIsTextNode = anchorNode.nodeType === Node.TEXT_NODE;\r\n    const focusIsTextNode = focusNode.nodeType === Node.TEXT_NODE;\r\n\r\n    // If the selection range lies only on text nodes, the task is simple.\r\n    // Find the nearest offset-aware elements and use the\r\n    // offset values supplied by the selection range.\r\n    if (anchorIsTextNode && focusIsTextNode) {\r\n        // if(anchorNode.parentElement.isContentEditable === false) {\r\n        //   anchorOffset = 1;\r\n        // }\r\n        // if(focusNode.parentElement.isContentEditable === false) {\r\n        //   focusOffset = 1;\r\n        // }\r\n        return {\r\n            selectionState: getUpdatedSelectionState(editorState, nullthrows(findAncestorOffsetKey(anchorNode)), anchorOffset, nullthrows(findAncestorOffsetKey(focusNode)), focusOffset),\r\n            needsRecovery: false\r\n        };\r\n    }\r\n\r\n    let anchorPoint = null;\r\n    let focusPoint = null;\r\n    let needsRecovery = true;\r\n\r\n    // An element is selected. Convert this selection range into leaf offset\r\n    // keys and offset values for consumption at the component level. This\r\n    // is common in Firefox, where select-all and triple click behavior leads\r\n    // to entire elements being selected.\r\n    //\r\n    // Note that we use the `needsRecovery` parameter in the callback here. This\r\n    // is because when certain elements are selected, the behavior for subsequent\r\n    // cursor movement (e.g. via arrow keys) is uncertain and may not match\r\n    // expectations at the component level. For example, if an entire <div> is\r\n    // selected and the user presses the right arrow, Firefox keeps the selection\r\n    // on the <div>. If we allow subsequent keypresses to insert characters\r\n    // natively, they will be inserted into a browser-created text node to the\r\n    // right of that <div>. This is obviously undesirable.\r\n    //\r\n    // With the `needsRecovery` flag, we inform the caller that it is responsible\r\n    // for manually setting the selection state on the rendered document to\r\n    // ensure proper selection state maintenance.\r\n\r\n    if (anchorIsTextNode) {\r\n        // if(anchorNode.parentElement.isContentEditable === false) {\r\n        //   anchorOffset = 1;\r\n        // }\r\n        anchorPoint = {\r\n            key: nullthrows(findAncestorOffsetKey(anchorNode)),\r\n            offset: anchorOffset\r\n        };\r\n        focusPoint = getPointForNonTextNode(root, focusNode, focusOffset);\r\n    } else if (focusIsTextNode) {\r\n        // if(focusNode.parentElement.isContentEditable === false) {\r\n        //   focusOffset = 1;\r\n        // }\r\n        focusPoint = {\r\n            key: nullthrows(findAncestorOffsetKey(focusNode)),\r\n            offset: focusOffset\r\n        };\r\n        anchorPoint = getPointForNonTextNode(root, anchorNode, anchorOffset);\r\n    } else {\r\n        anchorPoint = getPointForNonTextNode(root, anchorNode, anchorOffset);\r\n        focusPoint = getPointForNonTextNode(root, focusNode, focusOffset);\r\n        // If the selection is collapsed on an empty block, don't force recovery.\r\n        // This way, on arrow key selection changes, the browser can move the\r\n        // cursor from a non-zero offset on one block, through empty blocks,\r\n        // to a matching non-zero offset on other text blocks.\r\n        if (anchorNode === focusNode && anchorOffset === focusOffset) {\r\n            needsRecovery = !!anchorNode.firstChild && anchorNode.firstChild.nodeName !== \"BR\";\r\n        }\r\n    }\r\n\r\n    return {\r\n        selectionState: getUpdatedSelectionState(editorState, anchorPoint.key, anchorPoint.offset, focusPoint.key, focusPoint.offset),\r\n        needsRecovery\r\n    };\r\n}\r\n\r\n/**\r\n * Identify the first leaf descendant for the given node.\r\n */\r\nfunction getFirstLeaf(node: any): Node {\r\n    while (\r\n        node.firstChild &&\r\n        // data-blocks has no offset\r\n        ((isElement(node.firstChild) && (node.firstChild as Element).getAttribute(\"data-blocks\") === \"true\") || getSelectionOffsetKeyForNode(node.firstChild))\r\n    ) {\r\n        node = node.firstChild;\r\n    }\r\n    return node;\r\n}\r\n\r\n/**\r\n * Identify the last leaf descendant for the given node.\r\n */\r\nfunction getLastLeaf(node: any): Node {\r\n    while (\r\n        node.lastChild &&\r\n        // data-blocks has no offset\r\n        ((isElement(node.lastChild) && node.lastChild.getAttribute(\"data-blocks\") === \"true\") || getSelectionOffsetKeyForNode(node.lastChild))\r\n    ) {\r\n        node = node.lastChild;\r\n    }\r\n    return node;\r\n}\r\n\r\nfunction getPointForNonTextNode(editorRoot: HTMLElement, startNode: Node, childOffset: number): SelectionPoint {\r\n    let node: any = startNode;\r\n    const offsetKey: string = findAncestorOffsetKey(node);\r\n\r\n    invariant(offsetKey != null || (editorRoot && (editorRoot === node || editorRoot.firstChild === node)), \"Unknown node in selection range.\");\r\n\r\n    // If the editorRoot is the selection, step downward into the content\r\n    // wrapper.\r\n    if (editorRoot === node) {\r\n        node = node.firstChild;\r\n        invariant(isElement(node), \"Invalid DraftEditorContents node.\");\r\n        const castedNode: Element = node as any;\r\n\r\n        // assignment only added for flow :/\r\n        // otherwise it throws in line 200 saying that node can be null or undefined\r\n        node = castedNode;\r\n        invariant(node.getAttribute(\"data-contents\") === \"true\", \"Invalid DraftEditorContents structure.\");\r\n        if (childOffset > 0) {\r\n            childOffset = node.childNodes.length;\r\n        }\r\n    }\r\n\r\n    // If the child offset is zero and we have an offset key, we're done.\r\n    // If there's no offset key because the entire editor is selected,\r\n    // find the leftmost (\"first\") leaf in the tree and use that as the offset\r\n    // key.\r\n    if (childOffset === 0) {\r\n        let key: string = null;\r\n        if (offsetKey != null) {\r\n            key = offsetKey;\r\n        } else {\r\n            const firstLeaf = getFirstLeaf(node);\r\n            key = nullthrows(getSelectionOffsetKeyForNode(firstLeaf));\r\n        }\r\n        return { key, offset: 0 };\r\n    }\r\n\r\n    const nodeBeforeCursor = node.childNodes[childOffset - 1];\r\n    let leafKey: string = null;\r\n    let textLength: number = null;\r\n\r\n    if (!getSelectionOffsetKeyForNode(nodeBeforeCursor)) {\r\n        // Our target node may be a leaf or a text node, in which case we're\r\n        // already where we want to be and can just use the child's length as\r\n        // our offset.\r\n        leafKey = nullthrows(offsetKey);\r\n        textLength = getTextContentLength(nodeBeforeCursor);\r\n    } else {\r\n        // Otherwise, we'll look at the child to the left of the cursor and find\r\n        // the last leaf node in its subtree.\r\n        const lastLeaf: any = getLastLeaf(nodeBeforeCursor);\r\n        leafKey = nullthrows(getSelectionOffsetKeyForNode(lastLeaf));\r\n        textLength = getTextContentLength(lastLeaf);\r\n    }\r\n    // gland\r\n    if (startNode && (startNode as any).dataset.text === \"object\") {\r\n        textLength = 1;\r\n    }\r\n    return {\r\n        key: leafKey,\r\n        offset: textLength\r\n    };\r\n}\r\n\r\n/**\r\n * Return the length of a node's textContent, regarding single newline\r\n * characters as zero-length. This allows us to avoid problems with identifying\r\n * the correct selection offset for empty blocks in IE, in which we\r\n * render newlines instead of break tags.\r\n */\r\nfunction getTextContentLength(node: any): number {\r\n    // gland\r\n    if (!node.isContentEditable) return 1;\r\n    const textContent = node.textContent;\r\n    return textContent === \"\\n\" ? 0 : textContent.length;\r\n}\r\n\r\nexport default getDraftEditorSelectionWithNodes;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {DOMDerivedSelection} from './DOMDerivedSelection';\r\nimport  EditorState from '../../model/immutable/EditorState';\r\n\r\nimport getDraftEditorSelectionWithNodes from './getDraftEditorSelectionWithNodes';\r\n\r\n/**\r\n * Convert the current selection range to an anchor/focus pair of offset keys\r\n * and values that can be interpreted by components.\r\n */\r\nfunction getDraftEditorSelection(\r\n  editorState: EditorState,\r\n  root: HTMLElement,\r\n): DOMDerivedSelection {\r\n  const selection = root.ownerDocument.defaultView.getSelection();\r\n  //console.log('sele get', selection)\r\n  // No active selection.\r\n  if (selection.rangeCount === 0) {\r\n    return {\r\n      selectionState: editorState.getSelection().set('hasFocus', false) as any,\r\n      needsRecovery: false,\r\n    };\r\n  }\r\n  return getDraftEditorSelectionWithNodes(\r\n    editorState,\r\n    root,\r\n    selection.anchorNode,\r\n    selection.anchorOffset,\r\n    selection.focusNode,\r\n    selection.focusOffset,\r\n  );\r\n}\r\n\r\nexport default  getDraftEditorSelection;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\n\r\nimport DraftJsDebugLogging from '../../../stubs/DraftJsDebugLogging';\r\nimport EditorState from '../../../model/immutable/EditorState';\r\n\r\n\r\nimport getContentEditableContainer from '../../utils/getContentEditableContainer';\r\nimport getDraftEditorSelection from '../../selection/getDraftEditorSelection';\r\n// @ts-ignore\r\nfunction editOnSelect(editor: DraftEditor, event): void {\r\n  if (\r\n    editor._blockSelectEvents ||\r\n    editor._latestEditorState !== editor.props.editorState\r\n  ) {\r\n    if (editor._blockSelectEvents) {\r\n      const editorState = editor.props.editorState;\r\n      const selectionState = editorState.getSelection();\r\n      DraftJsDebugLogging.logBlockedSelectionEvent({\r\n        // For now I don't think we need any other info\r\n        anonymizedDom: 'N/A',\r\n        extraParams: JSON.stringify({stacktrace: new Error().stack}),\r\n        selectionState: JSON.stringify(selectionState.toJS()),\r\n      });\r\n    }\r\n    return;\r\n  }\r\n\r\n  let editorState = editor.props.editorState;\r\n  const documentSelection = getDraftEditorSelection(\r\n    editorState,\r\n    getContentEditableContainer(editor),\r\n  );\r\n  const updatedSelectionState = documentSelection.selectionState;\r\n\r\n    //event.persist()\r\n    //console.log('selectionState', editorState.getSelection().toJS(), event)\r\n\r\n  if (updatedSelectionState !== editorState.getSelection()) {\r\n    if (documentSelection.needsRecovery) {\r\n      editorState = EditorState.forceSelection(\r\n        editorState,\r\n        updatedSelectionState,\r\n      );\r\n    } else {\r\n      editorState = EditorState.acceptSelection(\r\n        editorState,\r\n        updatedSelectionState,\r\n      );\r\n    }\r\n    editor.update(editorState);\r\n  }\r\n}\r\n\r\nexport default  editOnSelect;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * Provides utilities for handling draftjs keys.\r\n *\r\n * @emails oncall+draft_js\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nfunction notEmptyKey(key: string): boolean {\r\n  return key != null && key != '';\r\n}\r\n\r\nexport  {\r\n  notEmptyKey,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport ContentState from '../immutable/ContentState';\r\nimport  {EntityMap} from '../immutable/EntityMap';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nimport {notEmptyKey} from '../../component/utils/draftKeyUtils';\r\n\r\n/**\r\n * Return the entity key that should be used when inserting text for the\r\n * specified target selection, only if the entity is `MUTABLE`. `IMMUTABLE`\r\n * and `SEGMENTED` entities should not be used for insertion behavior.\r\n */\r\nfunction getEntityKeyForSelection(\r\n  contentState: ContentState,\r\n  targetSelection: SelectionState,\r\n): string {\r\n  let entityKey;\r\n\r\n  if (targetSelection.isCollapsed()) {\r\n    const key = targetSelection.getAnchorKey();\r\n    const offset = targetSelection.getAnchorOffset();\r\n    if (offset > 0) {\r\n      entityKey = contentState.getBlockForKey(key).getEntityAt(offset - 1);\r\n      if (entityKey !== contentState.getBlockForKey(key).getEntityAt(offset)) {\r\n        return null;\r\n      }\r\n      return filterKey(contentState.getEntityMap(), entityKey);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const startKey = targetSelection.getStartKey();\r\n  const startOffset = targetSelection.getStartOffset();\r\n  const startBlock = contentState.getBlockForKey(startKey);\r\n\r\n  entityKey =\r\n    startOffset === startBlock.getLength()\r\n      ? null\r\n      : startBlock.getEntityAt(startOffset);\r\n\r\n  return filterKey(contentState.getEntityMap(), entityKey);\r\n}\r\n\r\n/**\r\n * Determine whether an entity key corresponds to a `MUTABLE` entity. If so,\r\n * return it. If not, return null.\r\n */\r\nfunction filterKey(entityMap: EntityMap, entityKey: string): string {\r\n  if (notEmptyKey(entityKey)) {\r\n    const entity = entityMap.__get(entityKey);\r\n    return entity.getMutability() === 'MUTABLE' ? entityKey : null;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default  getEntityKeyForSelection;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\nimport DOMObserver from './DOMObserver';\r\nimport DraftModifier from '../../../model/modifier/DraftModifier';\r\nimport DraftOffsetKey from '../../selection/DraftOffsetKey';\r\nimport EditorState from '../../../model/immutable/EditorState';\r\nimport Keys from 'fbjs/lib/Keys'\r\n\r\nimport editOnSelect from '../edit/editOnSelect';\r\nimport getContentEditableContainer from '../../utils/getContentEditableContainer';\r\nimport getDraftEditorSelection from '../../selection/getDraftEditorSelection';\r\nimport getEntityKeyForSelection from '../../../model/entity/getEntityKeyForSelection';\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\n/**\r\n * Millisecond delay to allow `compositionstart` to fire again upon\r\n * `compositionend`.\r\n *\r\n * This is used for Korean input to ensure that typing can continue without\r\n * the editor trying to render too quickly. More specifically, Safari 7.1+\r\n * triggers `compositionstart` a little slower than Chrome/FF, which\r\n * leads to composed characters being resolved and re-render occurring\r\n * sooner than we want.\r\n */\r\nconst RESOLVE_DELAY = 20;\r\n\r\n/**\r\n * A handful of variables used to track the current composition and its\r\n * resolution status. These exist at the module level because it is not\r\n * possible to have compositions occurring in multiple editors simultaneously,\r\n * and it simplifies state management with respect to the DraftEditor component.\r\n */\r\nlet resolved = false;\r\nlet stillComposing = false;\r\nlet domObserver = null;\r\n\r\nfunction startDOMObserver(editor: DraftEditor) {\r\n  if (!domObserver) {\r\n    domObserver = new DOMObserver(getContentEditableContainer(editor));\r\n    domObserver.start();\r\n  }\r\n}\r\n\r\nconst DraftEditorCompositionHandler = {\r\n  /**\r\n   * A `compositionstart` event has fired while we're still in composition\r\n   * mode. Continue the current composition session to prevent a re-render.\r\n   */\r\n  onCompositionStart: function(editor: DraftEditor): void {\r\n    stillComposing = true;\r\n    startDOMObserver(editor);\r\n  },\r\n\r\n  /**\r\n   * Attempt to end the current composition session.\r\n   *\r\n   * Defer handling because browser will still insert the chars into active\r\n   * element after `compositionend`. If a `compositionstart` event fires\r\n   * before `resolveComposition` executes, our composition session will\r\n   * continue.\r\n   *\r\n   * The `resolved` flag is useful because certain IME interfaces fire the\r\n   * `compositionend` event multiple times, thus queueing up multiple attempts\r\n   * at handling the composition. Since handling the same composition event\r\n   * twice could break the DOM, we only use the first event. Example: Arabic\r\n   * Google Input Tools on Windows 8.1 fires `compositionend` three times.\r\n   */\r\n  onCompositionEnd: function(editor: DraftEditor): void {\r\n    resolved = false;\r\n    stillComposing = false;\r\n    setTimeout(() => {\r\n      if (!resolved) {\r\n        DraftEditorCompositionHandler.resolveComposition(editor);\r\n      }\r\n    }, RESOLVE_DELAY);\r\n  },\r\n\r\n  onSelect: editOnSelect,\r\n\r\n  /**\r\n   * In Safari, keydown events may fire when committing compositions. If\r\n   * the arrow keys are used to commit, prevent default so that the cursor\r\n   * doesn't move, otherwise it will jump back noticeably on re-render.\r\n   */\r\n  onKeyDown: function(editor: DraftEditor, e: KeyboardEvent): void {\r\n    if (!stillComposing) {\r\n      // If a keydown event is received after compositionend but before the\r\n      // 20ms timer expires (ex: type option-E then backspace, or type A then\r\n      // backspace in 2-Set Korean), we should immediately resolve the\r\n      // composition and reinterpret the key press in edit mode.\r\n      DraftEditorCompositionHandler.resolveComposition(editor);\r\n      editor._onKeyDown(e);\r\n      return;\r\n    }\r\n    if (e.which === Keys.RIGHT || e.which === Keys.LEFT) {\r\n      e.preventDefault();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Keypress events may fire when committing compositions. In Firefox,\r\n   * pressing RETURN commits the composition and inserts extra newline\r\n   * characters that we do not want. `preventDefault` allows the composition\r\n   * to be committed while preventing the extra characters.\r\n   */\r\n  onKeyPress: function(editor: DraftEditor, e: KeyboardEvent): void {\r\n    if (e.which === Keys.RETURN) {\r\n      e.preventDefault();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Attempt to insert composed characters into the document.\r\n   *\r\n   * If we are still in a composition session, do nothing. Otherwise, insert\r\n   * the characters into the document and terminate the composition session.\r\n   *\r\n   * If no characters were composed -- for instance, the user\r\n   * deleted all composed characters and committed nothing new --\r\n   * force a re-render. We also re-render when the composition occurs\r\n   * at the beginning of a leaf, to ensure that if the browser has\r\n   * created a new text node for the composition, we will discard it.\r\n   *\r\n   * Resetting innerHTML will move focus to the beginning of the editor,\r\n   * so we update to force it back to the correct place.\r\n   */\r\n  resolveComposition: function(editor: DraftEditor): void {\r\n    if (stillComposing) {\r\n      return;\r\n    }\r\n\r\n    const mutations = nullthrows(domObserver).stopAndFlushMutations();\r\n    domObserver = null;\r\n    resolved = true;\r\n\r\n    let editorState = EditorState.set(editor._latestEditorState, {\r\n      inCompositionMode: false,\r\n    });\r\n\r\n    editor.exitCurrentMode();\r\n\r\n    if (!mutations.size) {\r\n      editor.update(editorState);\r\n      return;\r\n    }\r\n\r\n    // TODO, check if Facebook still needs this flag or if it could be removed.\r\n    // Since there can be multiple mutations providing a `composedChars` doesn't\r\n    // apply well on this new model.\r\n    // if (\r\n    //   gkx('draft_handlebeforeinput_composed_text') &&\r\n    //   editor.props.handleBeforeInput &&\r\n    //   isEventHandled(\r\n    //     editor.props.handleBeforeInput(\r\n    //       composedChars,\r\n    //       editorState,\r\n    //       event.timeStamp,\r\n    //     ),\r\n    //   )\r\n    // ) {\r\n    //   return;\r\n    // }\r\n\r\n    let contentState = editorState.getCurrentContent();\r\n    mutations.forEach((composedChars, offsetKey) => {\r\n      const {blockKey, decoratorKey, leafKey} = DraftOffsetKey.decode(\r\n        offsetKey,\r\n      );\r\n\r\n      const {start, end} = editorState\r\n        .getBlockTree(blockKey)\r\n        .getIn([decoratorKey, 'leaves', leafKey]);\r\n\r\n      const replacementRange:any = editorState.getSelection().merge({\r\n        anchorKey: blockKey,\r\n        focusKey: blockKey,\r\n        anchorOffset: start,\r\n        focusOffset: end,\r\n        isBackward: false,\r\n      });\r\n\r\n      const entityKey = getEntityKeyForSelection(\r\n        contentState,\r\n        replacementRange,\r\n      );\r\n      const currentStyle = contentState\r\n        .getBlockForKey(blockKey)\r\n        .getInlineStyleAt(start);\r\n\r\n      contentState = DraftModifier.replaceText(\r\n        contentState,\r\n        replacementRange as any,\r\n        composedChars,\r\n        currentStyle,\r\n        entityKey,\r\n      );\r\n      // We need to update the editorState so the leaf node ranges are properly\r\n      // updated and multiple mutations are correctly applied.\r\n      editorState = EditorState.set(editorState, {\r\n        currentContent: contentState,\r\n      });\r\n    });\r\n\r\n    // When we apply the text changes to the ContentState, the selection always\r\n    // goes to the end of the field, but it should just stay where it is\r\n    // after compositionEnd.\r\n    const documentSelection = getDraftEditorSelection(\r\n      editorState,\r\n      getContentEditableContainer(editor),\r\n    );\r\n    const compositionEndSelectionState = documentSelection.selectionState;\r\n\r\n    editor.restoreEditorDOM();\r\n\r\n    const editorStateWithUpdatedSelection = EditorState.acceptSelection(\r\n      editorState,\r\n      compositionEndSelectionState,\r\n    );\r\n\r\n    editor.update(\r\n      EditorState.push(\r\n        editorStateWithUpdatedSelection,\r\n        contentState,\r\n        'insert-characters',\r\n      ),\r\n    );\r\n  },\r\n};\r\n\r\nexport default  DraftEditorCompositionHandler;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n *\r\n * This is unstable and not part of the public API and should not be used by\r\n * production systems. This file may be update/removed without notice.\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../../../model/immutable/BlockNodeRecord';\r\nimport  ContentState from '../../../model/immutable/ContentState';\r\nimport {DraftDecoratorType} from '../../../model/decorators/DraftDecoratorType';\r\nimport  {BidiDirection} from 'fbjs/lib/UnicodeBidiDirection';\r\nimport  {Set} from 'immutable';\r\n\r\nimport DraftOffsetKey from '../../selection/DraftOffsetKey';\r\nimport React, {ReactNode} from 'react'\r\nimport UnicodeBidi from 'fbjs/lib/UnicodeBidi';\r\nimport UnicodeBidiDirection from 'fbjs/lib/UnicodeBidiDirection';\r\n\r\ntype Props = {\r\n  block: BlockNodeRecord,\r\n  children: Array<ReactNode>,\r\n  contentState: ContentState,\r\n  decorator: DraftDecoratorType,\r\n  decoratorKey: string,\r\n  direction: BidiDirection,\r\n  text: string,\r\n  leafSet: Set<any>,\r\n};\r\n\r\nclass DraftEditorDecoratedLeaves extends React.Component<Props> {\r\n  render(): ReactNode {\r\n    const {\r\n      block,\r\n      children,\r\n      contentState,\r\n      decorator,\r\n      decoratorKey,\r\n      direction,\r\n      leafSet,\r\n      text,\r\n    } = this.props;\r\n\r\n    const blockKey = block.getKey();\r\n    const leavesForLeafSet = leafSet.get('leaves');\r\n    const DecoratorComponent = decorator.getComponentForKey(decoratorKey);\r\n    const decoratorProps = decorator.getPropsForKey(decoratorKey);\r\n    const decoratorOffsetKey = DraftOffsetKey.encode(\r\n      blockKey,\r\n      parseInt(decoratorKey, 10),\r\n      0,\r\n    );\r\n\r\n    const decoratedText = text.slice(\r\n      leavesForLeafSet.first().get('start'),\r\n      leavesForLeafSet.last().get('end'),\r\n    );\r\n\r\n    // Resetting dir to the same value on a child node makes Chrome/Firefox\r\n    // confused on cursor movement. See http://jsfiddle.net/d157kLck/3/\r\n    const dir = UnicodeBidiDirection.getHTMLDirIfDifferent(\r\n      UnicodeBidi.getDirection(decoratedText),\r\n      direction,\r\n    );\r\n\r\n    return (\r\n      <DecoratorComponent\r\n        {...decoratorProps}\r\n        contentState={contentState}\r\n        decoratedText={decoratedText}\r\n        dir={dir}\r\n        key={decoratorOffsetKey}\r\n        entityKey={block.getEntityAt(leafSet.get('start'))}\r\n        offsetKey={decoratorOffsetKey}>\r\n        {children}\r\n      </DecoratorComponent>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  DraftEditorDecoratedLeaves;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport React, {ReactNode} from 'react'\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport isElement from '../utils/isElement';\r\n\r\n// In IE, spans with <br> tags render as two newlines. By rendering a span\r\n// with only a newline character, we can be sure to render a single line.\r\nconst useNewlineChar = UserAgent.isBrowser('IE <= 11');\r\n\r\n/**\r\n * Check whether the node should be considered a newline.\r\n */\r\nfunction isNewline(node: Element): boolean {\r\n  return useNewlineChar ? node.textContent === '\\n' : node.tagName === 'BR';\r\n}\r\n\r\n/**\r\n * Placeholder elements for empty text content.\r\n *\r\n * What is this `data-text` attribute, anyway? It turns out that we need to\r\n * put an attribute on the lowest-level text node in order to preserve correct\r\n * spellcheck handling. If the <span> is naked, Chrome and Safari may do\r\n * bizarre things to do the DOM -- split text nodes, create extra spans, etc.\r\n * If the <span> has an attribute, this appears not to happen.\r\n * See http://jsfiddle.net/9khdavod/ for the failure case, and\r\n * http://jsfiddle.net/7pg143f7/ for the fixed case.\r\n */\r\nconst NEWLINE_A = ref =>\r\n  useNewlineChar ? (\r\n    <span key=\"A\" data-text=\"true\" ref={ref}>\r\n      {'\\n'}\r\n    </span>\r\n  ) : (\r\n    <br key=\"A\" data-text=\"true\" ref={ref} />\r\n  );\r\n\r\nconst NEWLINE_B = ref =>\r\n  useNewlineChar ? (\r\n    <span key=\"B\" data-text=\"true\" ref={ref}>\r\n      {'\\n'}\r\n    </span>\r\n  ) : (\r\n    <br key=\"B\" data-text=\"true\" ref={ref} />\r\n  );\r\n\r\ntype Props = {\r\n  children: string,\r\n};\r\n\r\n/**\r\n * The lowest-level component in a `DraftEditor`, the text node component\r\n * replaces the default React text node implementation. This allows us to\r\n * perform custom handling of newline behavior and avoid re-rendering text\r\n * nodes with DOM state that already matches the expectations of our immutable\r\n * editor state.\r\n */\r\nclass DraftEditorTextNode extends React.Component<Props> {\r\n  _forceFlag: boolean;\r\n  _node: (HTMLSpanElement | HTMLBRElement);\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    // By flipping this flag, we also keep flipping keys which forces\r\n    // React to remount this node every time it rerenders.\r\n    this._forceFlag = false;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: Props): boolean {\r\n    const node = this._node;\r\n    const shouldBeNewline = nextProps.children === '';\r\n\r\n    invariant(isElement(node), 'node is not an Element');\r\n    const elementNode: Element = (node as any);\r\n    if (shouldBeNewline) {\r\n      return !isNewline(elementNode);\r\n    }\r\n    return elementNode.textContent !== nextProps.children;\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    this._forceFlag = !this._forceFlag;\r\n  }\r\n\r\n  componentDidUpdate(): void {\r\n    this._forceFlag = !this._forceFlag;\r\n  }\r\n\r\n  render(): ReactNode {\r\n    if (this.props.children === '') {\r\n      return this._forceFlag\r\n        ? NEWLINE_A(ref => (this._node = ref))\r\n        : NEWLINE_B(ref => (this._node = ref));\r\n    }\r\n\r\n    return (\r\n      <span\r\n        key={this._forceFlag ? 'A' : 'B'}\r\n        data-text=\"true\"\r\n        ref={ref => (this._node = ref)}>\r\n        {this.props.children}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  DraftEditorTextNode;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\nimport isElement from './isElement';\r\n\r\nfunction isHTMLBRElement(node: Node): boolean {\r\n  if (!node || !node.ownerDocument) {\r\n    return false;\r\n  }\r\n  return isElement(node) && node.nodeName === 'BR';\r\n}\r\n\r\nexport default  isHTMLBRElement;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n'use strict';\r\n\r\nexport default  {\r\n  initODS: function() {},\r\n  handleExtensionCausedError: function() {},\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  SelectionState from '../../model/immutable/SelectionState';\r\n\r\nimport DraftEffects from '../../stubs/DraftEffects';\r\nimport DraftJsDebugLogging from '../../stubs/DraftJsDebugLogging';\r\n\r\nimport containsNode from 'fbjs/lib/containsNode';\r\nimport getActiveElement from 'fbjs/lib/getActiveElement';\r\nimport getCorrectDocumentFromNode from '../utils/getCorrectDocumentFromNode';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport isElement from '../utils/isElement';\r\n\r\nfunction getAnonymizedDOM(\r\n  node: Node,\r\n  getNodeLabels?: (n: Node) => Array<string>,\r\n): string {\r\n  if (!node) {\r\n    return '[empty]';\r\n  }\r\n\r\n  const anonymized = anonymizeTextWithin(node, getNodeLabels);\r\n  if (anonymized.nodeType === Node.TEXT_NODE) {\r\n    return anonymized.textContent;\r\n  }\r\n\r\n  invariant(\r\n    isElement(anonymized),\r\n    'Node must be an Element if it is not a text node.',\r\n  );\r\n  const castedElement: Element = (anonymized as any);\r\n  return castedElement.outerHTML;\r\n}\r\n\r\nfunction anonymizeTextWithin(\r\n  node: Node,\r\n  getNodeLabels?: (n: Node) => Array<string>,\r\n): Node {\r\n  const labels = getNodeLabels !== undefined ? getNodeLabels(node) : [];\r\n\r\n  if (node.nodeType === Node.TEXT_NODE) {\r\n    const length = node.textContent.length;\r\n    return getCorrectDocumentFromNode(node).createTextNode(\r\n      '[text ' +\r\n        length +\r\n        (labels.length ? ' | ' + labels.join(', ') : '') +\r\n        ']',\r\n    );\r\n  }\r\n\r\n  const clone = node.cloneNode();\r\n  if (clone.nodeType === 1 && labels.length) {\r\n    ((clone as any)).setAttribute('data-labels', labels.join(', '));\r\n  }\r\n  const childNodes = node.childNodes;\r\n  for (let ii = 0; ii < childNodes.length; ii++) {\r\n    clone.appendChild(anonymizeTextWithin(childNodes[ii], getNodeLabels));\r\n  }\r\n\r\n  return clone;\r\n}\r\n\r\nfunction getAnonymizedEditorDOM(\r\n  node: Node,\r\n  getNodeLabels?: (n: Node) => Array<string>,\r\n): string {\r\n  // grabbing the DOM content of the Draft editor\r\n  let currentNode = node;\r\n  // this should only be used after checking with isElement\r\n  let castedNode: Element = (currentNode as any);\r\n  while (currentNode) {\r\n    if (isElement(currentNode) && castedNode.hasAttribute('contenteditable')) {\r\n      // found the Draft editor container\r\n      return getAnonymizedDOM(currentNode, getNodeLabels);\r\n    } else {\r\n      currentNode = currentNode.parentNode;\r\n      castedNode = (currentNode as any);\r\n    }\r\n  }\r\n  return 'Could not find contentEditable parent of node';\r\n}\r\n\r\nfunction getNodeLength(node: Node): number {\r\n  return node.nodeValue === null\r\n    ? node.childNodes.length\r\n    : node.nodeValue.length;\r\n}\r\n\r\n/**\r\n * In modern non-IE browsers, we can support both forward and backward\r\n * selections.\r\n *\r\n * Note: IE10+ supports the Selection object, but it does not support\r\n * the `extend` method, which means that even in modern IE, it's not possible\r\n * to programatically create a backward selection. Thus, for all IE\r\n * versions, we use the old IE API to create our selections.\r\n */\r\nfunction setDraftEditorSelection(\r\n  selectionState: SelectionState,\r\n  node: Node,\r\n  blockKey: string,\r\n  nodeStart: number,\r\n  nodeEnd: number,\r\n): void {\r\n  // It's possible that the editor has been removed from the DOM but\r\n  // our selection code doesn't know it yet. Forcing selection in\r\n  // this case may lead to errors, so just bail now.\r\n  const documentObject = getCorrectDocumentFromNode(node);\r\n  if (!containsNode(documentObject.documentElement, node)) {\r\n    return;\r\n  }\r\n\r\n  const selection = documentObject.defaultView.getSelection();\r\n  let anchorKey = selectionState.getAnchorKey();\r\n  let anchorOffset = selectionState.getAnchorOffset();\r\n  let focusKey = selectionState.getFocusKey();\r\n  let focusOffset = selectionState.getFocusOffset();\r\n  let isBackward = selectionState.getIsBackward();\r\n\r\n  // IE doesn't support backward selection. Swap key/offset pairs.\r\n  if (!selection.extend && isBackward) {\r\n    const tempKey = anchorKey;\r\n    const tempOffset = anchorOffset;\r\n    anchorKey = focusKey;\r\n    anchorOffset = focusOffset;\r\n    focusKey = tempKey;\r\n    focusOffset = tempOffset;\r\n    isBackward = false;\r\n  }\r\n\r\n  const hasAnchor =\r\n    anchorKey === blockKey &&\r\n    nodeStart <= anchorOffset &&\r\n    nodeEnd >= anchorOffset;\r\n\r\n  const hasFocus =\r\n    focusKey === blockKey && nodeStart <= focusOffset && nodeEnd >= focusOffset;\r\n  // If the selection is entirely bound within this node, set the selection\r\n  // and be done.\r\n  if (hasAnchor && hasFocus) {\r\n    selection.removeAllRanges();\r\n    addPointToSelection(\r\n      selection,\r\n      node,\r\n      anchorOffset - nodeStart,\r\n      selectionState,\r\n    );\r\n    addFocusToSelection(\r\n      selection,\r\n      node,\r\n      focusOffset - nodeStart,\r\n      selectionState,\r\n    );\r\n    return;\r\n  }\r\n\r\n  if (!isBackward) {\r\n    // If the anchor is within this node, set the range start.\r\n    if (hasAnchor) {\r\n      selection.removeAllRanges();\r\n      addPointToSelection(\r\n        selection,\r\n        node,\r\n        anchorOffset - nodeStart,\r\n        selectionState,\r\n      );\r\n    }\r\n\r\n    // If the focus is within this node, we can assume that we have\r\n    // already set the appropriate start range on the selection, and\r\n    // can simply extend the selection.\r\n    if (hasFocus) {\r\n      addFocusToSelection(\r\n        selection,\r\n        node,\r\n        focusOffset - nodeStart,\r\n        selectionState,\r\n      );\r\n    }\r\n  } else {\r\n    // If this node has the focus, set the selection range to be a\r\n    // collapsed range beginning here. Later, when we encounter the anchor,\r\n    // we'll use this information to extend the selection.\r\n    if (hasFocus) {\r\n      selection.removeAllRanges();\r\n      addPointToSelection(\r\n        selection,\r\n        node,\r\n        focusOffset - nodeStart,\r\n        selectionState,\r\n      );\r\n    }\r\n\r\n    // If this node has the anchor, we may assume that the correct\r\n    // focus information is already stored on the selection object.\r\n    // We keep track of it, reset the selection range, and extend it\r\n    // back to the focus point.\r\n    if (hasAnchor) {\r\n      const storedFocusNode = selection.focusNode;\r\n      const storedFocusOffset = selection.focusOffset;\r\n\r\n      selection.removeAllRanges();\r\n      addPointToSelection(\r\n        selection,\r\n        node,\r\n        anchorOffset - nodeStart,\r\n        selectionState,\r\n      );\r\n      addFocusToSelection(\r\n        selection,\r\n        storedFocusNode,\r\n        storedFocusOffset,\r\n        selectionState,\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Extend selection towards focus point.\r\n */\r\nfunction addFocusToSelection(\r\n  selection: any,\r\n  node: Node,\r\n  offset: number,\r\n  selectionState: SelectionState,\r\n): void {\r\n  const activeElement = getActiveElement();\r\n  if (selection.extend && containsNode(activeElement, node)) {\r\n    // If `extend` is called while another element has focus, an error is\r\n    // thrown. We therefore disable `extend` if the active element is somewhere\r\n    // other than the node we are selecting. This should only occur in Firefox,\r\n    // since it is the only browser to support multiple selections.\r\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=921444.\r\n\r\n    // logging to catch bug that is being reported in t16250795\r\n    if (offset > getNodeLength(node)) {\r\n      // the call to 'selection.extend' is about to throw\r\n      DraftJsDebugLogging.logSelectionStateFailure({\r\n        anonymizedDom: getAnonymizedEditorDOM(node),\r\n        extraParams: JSON.stringify({offset: offset}),\r\n        selectionState: JSON.stringify(selectionState.toJS()),\r\n      });\r\n    }\r\n\r\n    // logging to catch bug that is being reported in t18110632\r\n    const nodeWasFocus = node === selection.focusNode;\r\n    try {\r\n      selection.extend(node, offset);\r\n    } catch (e) {\r\n      DraftJsDebugLogging.logSelectionStateFailure({\r\n        anonymizedDom: getAnonymizedEditorDOM(node, function(n) {\r\n          const labels = [];\r\n          if (n === activeElement) {\r\n            labels.push('active element');\r\n          }\r\n          if (n === selection.anchorNode) {\r\n            labels.push('selection anchor node');\r\n          }\r\n          if (n === selection.focusNode) {\r\n            labels.push('selection focus node');\r\n          }\r\n          return labels;\r\n        }),\r\n        extraParams: JSON.stringify(\r\n          {\r\n            activeElementName: activeElement ? activeElement.nodeName : null,\r\n            nodeIsFocus: node === selection.focusNode,\r\n            nodeWasFocus: nodeWasFocus,\r\n            selectionRangeCount: selection.rangeCount,\r\n            selectionAnchorNodeName: selection.anchorNode\r\n              ? selection.anchorNode.nodeName\r\n              : null,\r\n            selectionAnchorOffset: selection.anchorOffset,\r\n            selectionFocusNodeName: selection.focusNode\r\n              ? selection.focusNode.nodeName\r\n              : null,\r\n            selectionFocusOffset: selection.focusOffset,\r\n            message: e ? '' + e : null,\r\n            offset: offset,\r\n          },\r\n          null,\r\n          2,\r\n        ),\r\n        selectionState: JSON.stringify(selectionState.toJS(), null, 2),\r\n      });\r\n      // allow the error to be thrown -\r\n      // better than continuing in a broken state\r\n      throw e;\r\n    }\r\n  } else {\r\n    // IE doesn't support extend. This will mean no backward selection.\r\n    // Extract the existing selection range and add focus to it.\r\n    // Additionally, clone the selection range. IE11 throws an\r\n    // InvalidStateError when attempting to access selection properties\r\n    // after the range is detached.\r\n    if (selection.rangeCount > 0) {\r\n      const range = selection.getRangeAt(0);\r\n      range.setEnd(node, offset);\r\n      selection.addRange(range.cloneRange());\r\n    }\r\n  }\r\n}\r\n\r\nfunction addPointToSelection(\r\n  selection: any,\r\n  node: Node,\r\n  offset: number,\r\n  selectionState: SelectionState,\r\n): void {\r\n  const range = getCorrectDocumentFromNode(node).createRange();\r\n  // logging to catch bug that is being reported in t16250795\r\n  if (offset > getNodeLength(node)) {\r\n    // in this case we know that the call to 'range.setStart' is about to throw\r\n    DraftJsDebugLogging.logSelectionStateFailure({\r\n      anonymizedDom: getAnonymizedEditorDOM(node),\r\n      extraParams: JSON.stringify({offset: offset}),\r\n      selectionState: JSON.stringify(selectionState.toJS()),\r\n    });\r\n    DraftEffects.handleExtensionCausedError();\r\n  }\r\n  range.setStart(node, offset);\r\n  selection.addRange(range);\r\n}\r\n\r\nexport {\r\n  setDraftEditorSelection,\r\n  addFocusToSelection,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport { BlockNodeRecord } from '../../model/immutable/BlockNodeRecord';\r\nimport { DraftInlineStyle } from '../../model/immutable/DraftInlineStyle';\r\nimport SelectionState from '../../model/immutable/SelectionState';\r\n\r\nimport DraftEditorTextNode from './DraftEditorTextNode.react';\r\nimport React, { ReactNode } from 'react';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport isHTMLBRElement from '../utils/isHTMLBRElement';\r\nimport { setDraftEditorSelection } from '../selection/setDraftEditorSelection';\r\n\r\ntype Props = {\r\n    // The block that contains this leaf.\r\n    block: BlockNodeRecord;\r\n\r\n    // Mapping of style names to CSS declarations.\r\n    customStyleMap: Object;\r\n\r\n    // Function that maps style names to CSS style objects.\r\n    customStyleFn: Function;\r\n\r\n    // Whether to force the DOM selection after render.\r\n    forceSelection: boolean;\r\n\r\n    // Whether this leaf is the last in its block. Used for a DOM hack.\r\n    isLast: boolean;\r\n\r\n    offsetKey: string;\r\n\r\n    // The current `SelectionState`, used to represent a selection range in the\r\n    // editor\r\n    selection: SelectionState;\r\n\r\n    // The offset of this string within its block.\r\n    start: number;\r\n\r\n    // The set of style(s) names to apply to the node.\r\n    styleSet: DraftInlineStyle;\r\n\r\n    // The full text to be rendered within this node.\r\n    text: string;\r\n\r\n    custom?: any;\r\n};\r\n\r\n/**\r\n * All leaf nodes in the editor are spans with single text nodes. Leaf\r\n * elements are styled based on the merging of an optional custom style map\r\n * and a default style map.\r\n *\r\n * `DraftEditorLeaf` also provides a wrapper for calling into the imperative\r\n * DOM Selection API. In this way, top-level components can declaratively\r\n * maintain the selection state.\r\n */\r\nclass DraftEditorLeaf extends React.Component<Props> {\r\n    /**\r\n     * By making individual leaf instances aware of their context within\r\n     * the text of the editor, we can set our selection range more\r\n     * easily than we could in the non-React world.\r\n     *\r\n     * Note that this depends on our maintaining tight control over the\r\n     * DOM structure of the DraftEditor component. If leaves had multiple\r\n     * text nodes, this would be harder.\r\n     */\r\n\r\n    leaf: HTMLElement;\r\n\r\n    _setSelection(): void {\r\n        const { selection, isLast } = this.props;\r\n        const isCustom = this.leaf.dataset['type'] === 'custom';\r\n        // gland 重要更改，防止非contenteditable元素获取焦点\r\n        if (!isLast && isCustom) {\r\n            return;\r\n        }\r\n        // If selection state is irrelevant to the parent block, no-op.\r\n        if (selection == null || !selection.getHasFocus()) {\r\n            return;\r\n        }\r\n\r\n        const { block, start, text } = this.props;\r\n        const blockKey = block.getKey();\r\n        let end = start + text.length;\r\n        // gland\r\n        if (isCustom|| typeof text === 'object') {\r\n            end = start + 1;\r\n        }\r\n        if (!selection.hasEdgeWithin(blockKey, start, end)) {\r\n            return;\r\n        }\r\n        // gland\r\n        if (isCustom) {\r\n            setIndepentSelection(selection, this.leaf, blockKey);\r\n            return;\r\n        }\r\n        if(typeof text === 'object') {\r\n            setDraftEditorSelection(selection, this.leaf.firstChild, blockKey, start, end);\r\n            return;\r\n        }\r\n        // Determine the appropriate target node for selection. If the child\r\n        // is not a text node, it is a <br /> spacer. In this case, use the\r\n        // <span> itself as the selection target.\r\n        const node = this.leaf;\r\n        invariant(node, 'Missing node');\r\n        const child = node.firstChild;\r\n        invariant(child, 'Missing child');\r\n        let targetNode;\r\n\r\n        if (child.nodeType === Node.TEXT_NODE) {\r\n            targetNode = child;\r\n        } else if (isHTMLBRElement(child)) {\r\n            targetNode = node;\r\n        } else {\r\n            targetNode = child.firstChild;\r\n            invariant(targetNode, 'Missing targetNode');\r\n        }\r\n        //console.log(\"selection set\", this.leaf.dataset[\"type\"], selection.toJS(), targetNode, blockKey, start, end);\r\n        setDraftEditorSelection(selection, targetNode, blockKey, start, end);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Props): boolean {\r\n        // gland notice styleSet lead update\r\n        const leafNode = this.leaf;\r\n        invariant(leafNode, 'Missing leafNode');\r\n        const shouldUpdate = this.props.text !== nextProps.text || nextProps.styleSet !== this.props.styleSet || nextProps.forceSelection;\r\n        return shouldUpdate;\r\n    }\r\n\r\n    componentDidUpdate(): void {\r\n        this._setSelection();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this._setSelection();\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { block, isLast, custom } = this.props;\r\n        let { text } = this.props;\r\n\r\n        // If the leaf is at the end of its block and ends in a soft newline, append\r\n        // an extra line feed character. Browsers collapse trailing newline\r\n        // characters, which leaves the cursor in the wrong place after a\r\n        // shift+enter. The extra character repairs this.\r\n        if (isLast) {\r\n            if (typeof text === 'string') {\r\n                if (text.endsWith('\\n')) {\r\n                    text += '\\n';\r\n                }\r\n            }\r\n        }\r\n\r\n        const { customStyleMap, customStyleFn, offsetKey, styleSet } = this.props;\r\n        let styleObj = styleSet.reduce((map: any, styleName) => {\r\n            const mergedStyles: any = {};\r\n            const style = customStyleMap[styleName];\r\n\r\n            if (style !== undefined && map.textDecoration !== style.textDecoration) {\r\n                // .trim() is necessary for IE9/10/11 and Edge\r\n                mergedStyles.textDecoration = [map.textDecoration, style.textDecoration].join(' ').trim();\r\n            }\r\n\r\n            return Object.assign(map, style, mergedStyles);\r\n        }, {});\r\n\r\n        if (customStyleFn) {\r\n            const newStyles = customStyleFn(styleSet, block);\r\n            styleObj = Object.assign(styleObj, newStyles);\r\n        }\r\n        //                     {isLast ? <span data-text=\"r\" ref={ref=>(this.lastleafR = ref)}  data-offset-key={offsetKey} >{\"\\r\"}</span> : null}\r\n\r\n        // gland  \\r &#13; 可使光标垂直对齐正常和处在行尾时聚焦\r\n        if (custom) {\r\n            return (\r\n                <span data-offset-key={offsetKey} ref={ref => (this.leaf = ref)} style={styleObj} data-type='custom' contentEditable={false}>\r\n                    <span data-text='object'>{custom}</span>\r\n                    <span data-text='r'>{'\\r'}</span>\r\n                </span>\r\n            );\r\n        }\r\n        if (typeof text === 'object') {\r\n            return (\r\n                <span data-offset-key={offsetKey} ref={ref => (this.leaf = ref)} style={styleObj}>\r\n                    <span data-text='object'>{text}</span>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <span data-offset-key={offsetKey} ref={ref => (this.leaf = ref)} style={styleObj}>\r\n                <DraftEditorTextNode>{text}</DraftEditorTextNode>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DraftEditorLeaf;\r\n\r\n//gland\r\n\r\n/**\r\n * 设置光标标位置\r\n * @param ele\r\n * @param offset\r\n */\r\nfunction setCursorPosition(ele, offset) {\r\n    let selection = window.getSelection();\r\n    let range = document.createRange();\r\n    range.setStart(ele, offset);\r\n    range.setEnd(ele, offset);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n}\r\n\r\nfunction setIndepentSelection(selectionState, leaf, blockKey) {\r\n    let selection = window.getSelection();\r\n    let range = selection.getRangeAt(0);\r\n\r\n    let ele = leaf.parentElement;\r\n    let offset = ele.childNodes.length;\r\n    if (selectionState.isCollapsed()) {\r\n        range.setStart(ele, offset);\r\n        range.setEnd(ele, offset);\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        return;\r\n    }\r\n    // let anchorKey = selectionState.getAnchorKey();\r\n    // let anchorOffset = selectionState.getAnchorOffset();\r\n    // let focusKey = selectionState.getFocusKey();\r\n    // let focusOffset = selectionState.getFocusOffset();\r\n    // let isBackward = selectionState.getIsBackward();\r\n    // if (anchorKey === focusKey) {\r\n    //     console.log('eeeeee', selection)\r\n    //     if (selection.rangeCount > 0) {\r\n    //         range.setEnd(ele, offset);\r\n    //         selection.addRange(range.cloneRange());\r\n    //         return;\r\n    //     }\r\n\r\n    // }\r\n    // if (isBackward) {\r\n    //     [anchorKey, anchorOffset, focusKey, focusOffset] = [focusKey, focusOffset, anchorKey, anchorOffset];\r\n    // }\r\n    // if (blockKey === anchorKey) {\r\n    //     range.setStart(ele, offset);\r\n    //     selection.removeAllRanges();\r\n    //     selection.addRange(range);\r\n    //     return;\r\n    // }\r\n    // if (blockKey === focusKey) {\r\n    //     range.setEnd(ele, offset);\r\n    //     selection.addRange(range);\r\n    //     return;\r\n    // }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n *\r\n * This is unstable and not part of the public API and should not be used by\r\n * production systems. This file may be update/removed without notice.\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../../../model/immutable/BlockNodeRecord';\r\nimport  ContentState from '../../../model/immutable/ContentState';\r\nimport {DraftDecoratorType} from '../../../model/decorators/DraftDecoratorType';\r\nimport  SelectionState from '../../../model/immutable/SelectionState';\r\nimport {BidiDirection} from 'fbjs/lib/UnicodeBidiDirection';\r\n\r\nimport DraftEditorDecoratedLeaves from './DraftEditorDecoratedLeaves.react';\r\nimport DraftEditorLeaf from '../DraftEditorLeaf.react';\r\nimport DraftOffsetKey from '../../selection/DraftOffsetKey';\r\nimport { List } from 'immutable';\r\nimport React, {ReactNode} from 'react'\r\nimport cx from 'fbjs/lib/cx'\r\n\r\n\r\ntype Props = {\r\n  block: BlockNodeRecord,\r\n  children: Array<ReactNode>,\r\n  contentState: ContentState,\r\n  customStyleFn: Function,\r\n  customStyleMap: Object,\r\n  decorator: DraftDecoratorType,\r\n  direction: BidiDirection,\r\n  forceSelection: boolean,\r\n  hasSelection: boolean,\r\n  selection: SelectionState,\r\n  tree: List<any>,\r\n};\r\n\r\nclass DraftEditorNode extends React.Component<Props> {\r\n  render(): ReactNode {\r\n    const {\r\n      block,\r\n      contentState,\r\n      customStyleFn,\r\n      customStyleMap,\r\n      decorator,\r\n      direction,\r\n      forceSelection,\r\n      hasSelection,\r\n      selection,\r\n      tree,\r\n    } = this.props;\r\n\r\n    const blockKey = block.getKey();\r\n    const text = block.getText();\r\n    const lastLeafSet = tree.size - 1;\r\n\r\n    const children =\r\n      this.props.children ||\r\n      tree\r\n        .map((leafSet, ii) => {\r\n          const decoratorKey = leafSet.get('decoratorKey');\r\n          const leavesForLeafSet = leafSet.get('leaves');\r\n          const lastLeaf = leavesForLeafSet.size - 1;\r\n          const Leaves = leavesForLeafSet\r\n            .map((leaf, jj) => {\r\n              const offsetKey = DraftOffsetKey.encode(blockKey, ii, jj);\r\n              const start = leaf.get('start');\r\n              const end = leaf.get('end');\r\n              return (\r\n                <DraftEditorLeaf\r\n                  key={offsetKey}\r\n                  offsetKey={offsetKey}\r\n                  block={block}\r\n                  start={start}\r\n                  selection={hasSelection ? selection : null}\r\n                  forceSelection={forceSelection}\r\n                  text={text.slice(start, end)}\r\n                  styleSet={block.getInlineStyleAt(start)}\r\n                  customStyleMap={customStyleMap}\r\n                  customStyleFn={customStyleFn}\r\n                  isLast={decoratorKey === lastLeafSet && jj === lastLeaf}\r\n                />\r\n              );\r\n            })\r\n            .toArray();\r\n\r\n          if (!decoratorKey || !decorator) {\r\n            return Leaves;\r\n          }\r\n\r\n          return (\r\n            <DraftEditorDecoratedLeaves\r\n              block={block}\r\n              children={Leaves}\r\n              contentState={contentState}\r\n              decorator={decorator}\r\n              decoratorKey={decoratorKey}\r\n              direction={direction}\r\n              leafSet={leafSet}\r\n              text={text}\r\n              key={ii}\r\n            />\r\n          );\r\n        })\r\n        .toArray();\r\n\r\n    return (\r\n      <div\r\n        data-offset-key={DraftOffsetKey.encode(blockKey, 0, 0)}\r\n        className={cx({\r\n          'public/DraftStyleDefault/block': true,\r\n          'public/DraftStyleDefault/ltr': direction === 'LTR',\r\n          'public/DraftStyleDefault/rtl': direction === 'RTL',\r\n        })}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  DraftEditorNode;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n *\r\n * This file is a fork of DraftEditorBlock.react.js and DraftEditorContents.react.js\r\n *\r\n * This is unstable and not part of the public API and should not be used by\r\n * production systems. This file may be update/removed without notice.\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../../../model/immutable/BlockNodeRecord';\r\nimport  ContentState from '../../../model/immutable/ContentState';\r\nimport  {DraftBlockRenderMap} from '../../../model/immutable/DraftBlockRenderMap';\r\nimport {DraftDecoratorType} from '../../../model/decorators/DraftDecoratorType';\r\nimport  {DraftInlineStyle} from '../../../model/immutable/DraftInlineStyle';\r\nimport EditorState from '../../../model/immutable/EditorState';\r\nimport  SelectionState from '../../../model/immutable/SelectionState';\r\nimport {BidiDirection} from 'fbjs/lib/UnicodeBidiDirection';\r\n\r\nimport DraftEditorNode from './DraftEditorNode.react';\r\nimport DraftOffsetKey from '../../selection/DraftOffsetKey';\r\nimport React, {ReactNode} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Scroll from 'fbjs/lib/Scroll';\r\nimport Style from 'fbjs/lib/Style';\r\n\r\nimport getElementPosition from 'fbjs/lib/getElementPosition';\r\nimport getScrollPosition from 'fbjs/lib/getScrollPosition';\r\nimport getViewportDimensions from 'fbjs/lib/getViewportDimensions';\r\nimport { List } from 'immutable';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport isHTMLElement from '../../utils/isHTMLElement';\r\n\r\nconst SCROLL_BUFFER = 10;\r\n\r\n// we should harden up the bellow flow types to make them more strict\r\ntype CustomRenderConfig = Object;\r\ntype DraftRenderConfig = Object;\r\ntype BlockRenderFn = (block: BlockNodeRecord) => Object;\r\ntype BlockStyleFn = (block: BlockNodeRecord) => string;\r\n\r\ntype Props = {\r\n  block: BlockNodeRecord,\r\n  blockProps?: Object,\r\n  blockRenderMap: DraftBlockRenderMap,\r\n  blockRendererFn: BlockRenderFn,\r\n  blockStyleFn: BlockStyleFn,\r\n  contentState: ContentState,\r\n  customStyleFn: (style: DraftInlineStyle, block: BlockNodeRecord) => Object,\r\n  customStyleMap: Object,\r\n  decorator: DraftDecoratorType,\r\n  direction: BidiDirection,\r\n  editorKey: string,\r\n  editorState: EditorState,\r\n  forceSelection: boolean,\r\n  selection: SelectionState,\r\n  startIndent?: boolean,\r\n  tree: List<any>,\r\n};\r\n\r\n/**\r\n * Return whether a block overlaps with either edge of the `SelectionState`.\r\n */\r\nconst isBlockOnSelectionEdge = (\r\n  selection: SelectionState,\r\n  key: string,\r\n): boolean => {\r\n  return selection.getAnchorKey() === key || selection.getFocusKey() === key;\r\n};\r\n\r\n/**\r\n * We will use this helper to identify blocks that need to be wrapped but have siblings that\r\n * also share the same wrapper element, this way we can do the wrapping once the last sibling\r\n * is added.\r\n */\r\nconst shouldNotAddWrapperElement = (\r\n  block: BlockNodeRecord,\r\n  contentState: ContentState,\r\n): boolean => {\r\n  const nextSiblingKey = block.getNextSiblingKey();\r\n\r\n  return nextSiblingKey\r\n    ? contentState.getBlockForKey(nextSiblingKey).getType() === block.getType()\r\n    : false;\r\n};\r\n\r\nconst applyWrapperElementToSiblings = (\r\n  wrapperTemplate: any,\r\n  Element: string,\r\n  nodes: Array<ReactNode>,\r\n): Array<ReactNode> => {\r\n  const wrappedSiblings = [];\r\n\r\n  // we check back until we find a sibbling that does not have same wrapper\r\n  for (const sibling of nodes.reverse()) {\r\n    if ((sibling as any).type !== Element) {\r\n      break;\r\n    }\r\n    wrappedSiblings.push(sibling);\r\n  }\r\n\r\n  // we now should remove from acc the wrappedSiblings and add them back under same wrap\r\n  nodes.splice(nodes.indexOf(wrappedSiblings[0]), wrappedSiblings.length + 1);\r\n\r\n  const childrenIs = wrappedSiblings.reverse();\r\n\r\n  const key = childrenIs[0].key;\r\n\r\n  nodes.push(\r\n    React.cloneElement(\r\n      wrapperTemplate,\r\n      {\r\n        key: `${key}-wrap`,\r\n        'data-offset-key': DraftOffsetKey.encode(key, 0, 0),\r\n      },\r\n      childrenIs,\r\n    ),\r\n  );\r\n\r\n  return nodes;\r\n};\r\n\r\nconst getDraftRenderConfig = (\r\n  block: BlockNodeRecord,\r\n  blockRenderMap: DraftBlockRenderMap,\r\n): DraftRenderConfig => {\r\n  const configForType =\r\n    blockRenderMap.get(block.getType()) || blockRenderMap.get('unstyled');\r\n\r\n  const wrapperTemplate = configForType.wrapper;\r\n  const Element =\r\n    configForType.element || blockRenderMap.get('unstyled').element;\r\n\r\n  return {\r\n    Element,\r\n    wrapperTemplate,\r\n  };\r\n};\r\n\r\nconst getCustomRenderConfig = (\r\n  block: BlockNodeRecord,\r\n  blockRendererFn: BlockRenderFn,\r\n): CustomRenderConfig => {\r\n  const customRenderer:any = blockRendererFn(block);\r\n\r\n  if (!customRenderer) {\r\n    return {};\r\n  }\r\n\r\n  const {\r\n    component: CustomComponent,\r\n    props: customProps,\r\n    editable: customEditable,\r\n  } = customRenderer;\r\n\r\n  return {\r\n    CustomComponent,\r\n    customProps,\r\n    customEditable,\r\n  };\r\n};\r\n\r\nconst getElementPropsConfig = (\r\n  block: BlockNodeRecord,\r\n  editorKey: string,\r\n  offsetKey: string,\r\n  blockStyleFn: BlockStyleFn,\r\n  customConfig: any,\r\n): Object => {\r\n  let elementProps: any = {\r\n    'data-block': true,\r\n    'data-editor': editorKey,\r\n    'data-offset-key': offsetKey,\r\n    key: block.getKey(),\r\n  };\r\n  const customClass = blockStyleFn(block);\r\n\r\n  if (customClass) {\r\n    elementProps.className = customClass;\r\n  }\r\n\r\n  if (customConfig.customEditable !== undefined) {\r\n    elementProps = {\r\n      ...elementProps,\r\n      contentEditable: customConfig.customEditable,\r\n      suppressContentEditableWarning: true,\r\n    };\r\n  }\r\n\r\n  return elementProps;\r\n};\r\n\r\nclass DraftEditorBlockNode extends React.Component<Props> {\r\n  shouldComponentUpdate(nextProps: Props): boolean {\r\n    const {block, direction, tree} = this.props as any;\r\n    const isContainerNode = !block.getChildKeys().isEmpty();\r\n    const blockHasChanged =\r\n      block !== nextProps.block ||\r\n      tree !== nextProps.tree ||\r\n      direction !== nextProps.direction ||\r\n      (isBlockOnSelectionEdge(nextProps.selection, nextProps.block.getKey()) &&\r\n        nextProps.forceSelection);\r\n\r\n    // if we have children at this stage we always re-render container nodes\r\n    // else if its a root node we avoid re-rendering by checking for block updates\r\n    return isContainerNode || blockHasChanged;\r\n  }\r\n\r\n  /**\r\n   * When a block is mounted and overlaps the selection state, we need to make\r\n   * sure that the cursor is visible to match native behavior. This may not\r\n   * be the case if the user has pressed `RETURN` or pasted some content, since\r\n   * programatically creating these new blocks and setting the DOM selection\r\n   * will miss out on the browser natively scrolling to that position.\r\n   *\r\n   * To replicate native behavior, if the block overlaps the selection state\r\n   * on mount, force the scroll position. Check the scroll state of the scroll\r\n   * parent, and adjust it to align the entire block to the bottom of the\r\n   * scroll parent.\r\n   */\r\n  componentDidMount(): void {\r\n    const selection = this.props.selection;\r\n    const endKey = selection.getEndKey();\r\n    if (!selection.getHasFocus() || endKey !== this.props.block.getKey()) {\r\n      return;\r\n    }\r\n\r\n    const blockNode = ReactDOM.findDOMNode(this as any);\r\n    const scrollParent = Style.getScrollParent(blockNode);\r\n    const scrollPosition = getScrollPosition(scrollParent);\r\n    let scrollDelta;\r\n\r\n    if (scrollParent === window) {\r\n      const nodePosition = getElementPosition(blockNode);\r\n      const nodeBottom = nodePosition.y + nodePosition.height;\r\n      const viewportHeight = getViewportDimensions().height;\r\n      scrollDelta = nodeBottom - viewportHeight;\r\n      if (scrollDelta > 0) {\r\n        window.scrollTo(\r\n          scrollPosition.x,\r\n          scrollPosition.y + scrollDelta + SCROLL_BUFFER,\r\n        );\r\n      }\r\n    } else {\r\n      invariant(isHTMLElement(blockNode), 'blockNode is not an HTMLElement');\r\n      const htmlBlockNode: HTMLElement = (blockNode as any);\r\n      const blockBottom = htmlBlockNode.offsetHeight + htmlBlockNode.offsetTop;\r\n      const scrollBottom = scrollParent.offsetHeight + scrollPosition.y;\r\n      scrollDelta = blockBottom - scrollBottom;\r\n      if (scrollDelta > 0) {\r\n        Scroll.setTop(\r\n          scrollParent,\r\n          Scroll.getTop(scrollParent) + scrollDelta + SCROLL_BUFFER,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render(): ReactNode {\r\n    const {\r\n      block,\r\n      blockRenderMap,\r\n      blockRendererFn,\r\n      blockStyleFn,\r\n      contentState,\r\n      decorator,\r\n      editorKey,\r\n      editorState,\r\n      customStyleFn,\r\n      customStyleMap,\r\n      direction,\r\n      forceSelection,\r\n      selection,\r\n      tree,\r\n    } = this.props as any;\r\n\r\n    let children = null;\r\n\r\n    if (block.children.size) {\r\n      children = block.children.reduce((acc, key) => {\r\n        const offsetKey = DraftOffsetKey.encode(key, 0, 0);\r\n        const child = contentState.getBlockForKey(key);\r\n        const customConfig:any = getCustomRenderConfig(child, blockRendererFn);\r\n        const Component = customConfig.CustomComponent || DraftEditorBlockNode;\r\n        const {Element, wrapperTemplate} = getDraftRenderConfig(\r\n          child,\r\n          blockRenderMap,\r\n        ) as any;\r\n        const elementProps = getElementPropsConfig(\r\n          child,\r\n          editorKey,\r\n          offsetKey,\r\n          blockStyleFn,\r\n          customConfig,\r\n        );\r\n        const childProps = {\r\n          ...this.props,\r\n          tree: editorState.getBlockTree(key),\r\n          blockProps: customConfig.customProps,\r\n          offsetKey,\r\n          block: child,\r\n        };\r\n\r\n        acc.push(\r\n          React.createElement(\r\n            Element,\r\n            elementProps,\r\n            <Component {...childProps} />,\r\n          ),\r\n        );\r\n\r\n        if (\r\n          !wrapperTemplate ||\r\n          shouldNotAddWrapperElement(child, contentState)\r\n        ) {\r\n          return acc;\r\n        }\r\n\r\n        // if we are here it means we are the last block\r\n        // that has a wrapperTemplate so we should wrap itself\r\n        // and all other previous siblings that share the same wrapper\r\n        applyWrapperElementToSiblings(wrapperTemplate, Element, acc);\r\n\r\n        return acc;\r\n      }, []);\r\n    }\r\n\r\n    const blockKey = block.getKey();\r\n    const offsetKey = DraftOffsetKey.encode(blockKey, 0, 0);\r\n\r\n    const customConfig:any = getCustomRenderConfig(block, blockRendererFn);\r\n    const Component = customConfig.CustomComponent;\r\n    const blockNode =\r\n      Component != null ? (\r\n        <Component\r\n          {...this.props}\r\n          tree={editorState.getBlockTree(blockKey)}\r\n          blockProps={customConfig.customProps}\r\n          offsetKey={offsetKey}\r\n          block={block}\r\n        />\r\n      ) : (\r\n        // @ts-ignore\r\n        <DraftEditorNode\r\n          block={block}\r\n          children={children}\r\n          contentState={contentState}\r\n          customStyleFn={customStyleFn}\r\n          customStyleMap={customStyleMap}\r\n          decorator={decorator}\r\n          direction={direction}\r\n          forceSelection={forceSelection}\r\n          hasSelection={isBlockOnSelectionEdge(selection, blockKey)}\r\n          selection={selection}\r\n          tree={tree}\r\n        />\r\n      );\r\n\r\n    if (block.getParentKey()) {\r\n      return blockNode;\r\n    }\r\n\r\n    const {Element} = getDraftRenderConfig(block, blockRenderMap) as any;\r\n    const elementProps = getElementPropsConfig(\r\n      block,\r\n      editorKey,\r\n      offsetKey,\r\n      blockStyleFn,\r\n      customConfig,\r\n    );\r\n\r\n    // root block nodes needs to be wrapped\r\n    return React.createElement(Element, elementProps, blockNode);\r\n  }\r\n}\r\n\r\nexport default  DraftEditorBlockNode;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n *\r\n * This file is a fork of DraftEditorContents.react.js for tree nodes\r\n *\r\n * This is unstable and not part of the public API and should not be used by\r\n * production systems. This file may be update/removed without notice.\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../../../model/immutable/BlockNodeRecord';\r\nimport  {DraftBlockRenderMap} from '../../../model/immutable/DraftBlockRenderMap';\r\nimport  {DraftInlineStyle} from '../../../model/immutable/DraftInlineStyle';\r\nimport  EditorState from '../../../model/immutable/EditorState';\r\nimport  {BidiDirection} from 'fbjs/lib/UnicodeBidiDirection';\r\n\r\nimport DraftEditorBlockNode from './DraftEditorBlockNode.react';\r\nimport DraftOffsetKey from '../../selection/DraftOffsetKey';\r\nimport React, { ReactNode } from 'react'\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\ntype Props = {\r\n  blockRenderMap: DraftBlockRenderMap,\r\n  blockRendererFn: (block: BlockNodeRecord) => Object,\r\n  blockStyleFn?: (block: BlockNodeRecord) => string,\r\n  customStyleFn?: (style: DraftInlineStyle, block: BlockNodeRecord) => Object,\r\n  customStyleMap?: Object,\r\n  editorKey?: string,\r\n  editorState: EditorState,\r\n  textDirectionality?: BidiDirection,\r\n};\r\n\r\n/**\r\n * `DraftEditorContents` is the container component for all block components\r\n * rendered for a `DraftEditor`. It is optimized to aggressively avoid\r\n * re-rendering blocks whenever possible.\r\n *\r\n * This component is separate from `DraftEditor` because certain props\r\n * (for instance, ARIA props) must be allowed to update without affecting\r\n * the contents of the editor.\r\n */\r\nclass DraftEditorContentsExperimental extends React.Component<Props> {\r\n  shouldComponentUpdate(nextProps: Props): boolean {\r\n    const prevEditorState = this.props.editorState;\r\n    const nextEditorState = nextProps.editorState;\r\n\r\n    const prevDirectionMap = prevEditorState.getDirectionMap();\r\n    const nextDirectionMap = nextEditorState.getDirectionMap();\r\n\r\n    // Text direction has changed for one or more blocks. We must re-render.\r\n    if (prevDirectionMap !== nextDirectionMap) {\r\n      return true;\r\n    }\r\n\r\n    const didHaveFocus = prevEditorState.getSelection().getHasFocus();\r\n    const nowHasFocus = nextEditorState.getSelection().getHasFocus();\r\n\r\n    if (didHaveFocus !== nowHasFocus) {\r\n      return true;\r\n    }\r\n\r\n    const nextNativeContent = nextEditorState.getNativelyRenderedContent();\r\n\r\n    const wasComposing = prevEditorState.isInCompositionMode();\r\n    const nowComposing = nextEditorState.isInCompositionMode();\r\n\r\n    // If the state is unchanged or we're currently rendering a natively\r\n    // rendered state, there's nothing new to be done.\r\n    if (\r\n      prevEditorState === nextEditorState ||\r\n      (nextNativeContent !== null &&\r\n        nextEditorState.getCurrentContent() === nextNativeContent) ||\r\n      (wasComposing && nowComposing)\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    const prevContent = prevEditorState.getCurrentContent();\r\n    const nextContent = nextEditorState.getCurrentContent();\r\n    const prevDecorator = prevEditorState.getDecorator();\r\n    const nextDecorator = nextEditorState.getDecorator();\r\n    return (\r\n      wasComposing !== nowComposing ||\r\n      prevContent !== nextContent ||\r\n      prevDecorator !== nextDecorator ||\r\n      nextEditorState.mustForceSelection()\r\n    );\r\n  }\r\n\r\n  render(): ReactNode {\r\n    const {\r\n      blockRenderMap,\r\n      blockRendererFn,\r\n      blockStyleFn,\r\n      customStyleMap,\r\n      customStyleFn,\r\n      editorState,\r\n      editorKey,\r\n      textDirectionality,\r\n    } = this.props;\r\n\r\n    const content = editorState.getCurrentContent();\r\n    const selection = editorState.getSelection();\r\n    const forceSelection = editorState.mustForceSelection();\r\n    const decorator = editorState.getDecorator();\r\n    const directionMap = nullthrows(editorState.getDirectionMap());\r\n\r\n    const blocksAsArray = content.getBlocksAsArray();\r\n    const rootBlock = blocksAsArray[0];\r\n    const processedBlocks = [];\r\n\r\n    let nodeBlock = rootBlock;\r\n\r\n    while (nodeBlock) {\r\n      const blockKey = nodeBlock.getKey();\r\n      const blockProps = {\r\n        blockRenderMap,\r\n        blockRendererFn,\r\n        blockStyleFn,\r\n        contentState: content,\r\n        customStyleFn,\r\n        customStyleMap,\r\n        decorator,\r\n        editorKey,\r\n        editorState,\r\n        forceSelection,\r\n        selection,\r\n        block: nodeBlock,\r\n        direction: textDirectionality\r\n          ? textDirectionality\r\n          : directionMap.get(blockKey),\r\n        tree: editorState.getBlockTree(blockKey),\r\n      };\r\n\r\n      const configForType =\r\n        blockRenderMap.get(nodeBlock.getType()) ||\r\n        blockRenderMap.get('unstyled');\r\n      const wrapperTemplate = configForType.wrapper;\r\n      processedBlocks.push({\r\n        /* $FlowFixMe(>=0.112.0 site=mobile) This comment suppresses an error\r\n         * found when Flow v0.112 was deployed. To see the error delete this\r\n         * comment and run Flow. */\r\n        /* $FlowFixMe(>=0.112.0 site=www) This comment suppresses an error\r\n         * found when Flow v0.112 was deployed. To see the error delete this\r\n         * comment and run Flow. */\r\n        /* $FlowFixMe(>=0.112.0 site=www,mobile) This comment suppresses an\r\n         * error found when Flow v0.112 was deployed. To see the error delete\r\n         * this comment and run Flow. */\r\n        // @ts-ignore\r\n        block: <DraftEditorBlockNode key={blockKey} {...blockProps} />,\r\n        wrapperTemplate,\r\n        key: blockKey,\r\n        offsetKey: DraftOffsetKey.encode(blockKey, 0, 0),\r\n      });\r\n\r\n      const nextBlockKey = nodeBlock.getNextSiblingKey();\r\n      nodeBlock = nextBlockKey ? content.getBlockForKey(nextBlockKey) : null;\r\n    }\r\n\r\n    // Group contiguous runs of blocks that have the same wrapperTemplate\r\n    const outputBlocks = [];\r\n    for (let ii = 0; ii < processedBlocks.length; ) {\r\n      const info: any = processedBlocks[ii];\r\n      if (info.wrapperTemplate) {\r\n        const blocks = [];\r\n        do {\r\n          blocks.push(processedBlocks[ii].block);\r\n          ii++;\r\n        } while (\r\n          ii < processedBlocks.length &&\r\n          processedBlocks[ii].wrapperTemplate === info.wrapperTemplate\r\n        );\r\n        const wrapperElement = React.cloneElement(\r\n          info.wrapperTemplate,\r\n          {\r\n            key: info.key + '-wrap',\r\n            'data-offset-key': info.offsetKey,\r\n          },\r\n          blocks,\r\n        );\r\n        outputBlocks.push(wrapperElement);\r\n      } else {\r\n        outputBlocks.push(info.block);\r\n        ii++;\r\n      }\r\n    }\r\n\r\n    return <div data-contents=\"true\">{outputBlocks}</div>;\r\n  }\r\n}\r\n\r\nexport default  DraftEditorContentsExperimental;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\nimport  {BlockNodeRecord} from '../../model/immutable/BlockNodeRecord';\r\nimport  ContentState from '../../model/immutable/ContentState';\r\nimport  {DraftDecoratorComponentProps} from '../../model/decorators/DraftDecorator';\r\nimport {DraftDecoratorType} from '../../model/decorators/DraftDecoratorType';\r\nimport  {DraftInlineStyle} from '../../model/immutable/DraftInlineStyle';\r\nimport  SelectionState from '../../model/immutable/SelectionState';\r\nimport  {BidiDirection} from 'fbjs/lib/UnicodeBidiDirection';\r\nimport {List} from 'immutable';\r\n\r\nimport DraftEditorLeaf from './DraftEditorLeaf.react';\r\nimport DraftOffsetKey from '../selection/DraftOffsetKey';\r\nimport React, { ReactNode  } from 'react';\r\nimport Scroll from 'fbjs/lib/Scroll';\r\nimport Style from 'fbjs/lib/Style';\r\nimport UnicodeBidi from 'fbjs/lib/UnicodeBidi';\r\nimport UnicodeBidiDirection from 'fbjs/lib/UnicodeBidiDirection';\r\n\r\nimport cx from 'fbjs/lib/cx'\r\nimport getElementPosition from 'fbjs/lib/getElementPosition';\r\nimport getScrollPosition from 'fbjs/lib/getScrollPosition';\r\nimport getViewportDimensions from 'fbjs/lib/getViewportDimensions';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport isHTMLElement from '../utils/isHTMLElement';\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\nconst SCROLL_BUFFER = 10;\r\n\r\ntype Props = {\r\n  block: BlockNodeRecord,\r\n  blockProps?: Object,\r\n  blockStyleFn: (block: BlockNodeRecord) => string,\r\n  contentState: ContentState,\r\n  customStyleFn: (style: DraftInlineStyle, block: BlockNodeRecord) => Object,\r\n  customStyleMap: Object,\r\n  decorator: DraftDecoratorType,\r\n  direction: BidiDirection,\r\n  forceSelection: boolean,\r\n  offsetKey: string,\r\n  selection: SelectionState,\r\n  startIndent?: boolean,\r\n  tree: List<any>,\r\n};\r\n\r\n/**\r\n * Return whether a block overlaps with either edge of the `SelectionState`.\r\n */\r\nconst isBlockOnSelectionEdge = (\r\n  selection: SelectionState,\r\n  key: string,\r\n): boolean => {\r\n  return selection.getAnchorKey() === key || selection.getFocusKey() === key;\r\n};\r\n\r\n/**\r\n * The default block renderer for a `DraftEditor` component.\r\n *\r\n * A `DraftEditorBlock` is able to render a given `ContentBlock` to its\r\n * appropriate decorator and inline style components.\r\n */\r\nclass DraftEditorBlock extends React.Component<Props> {\r\n  _node: HTMLDivElement;\r\n\r\n  shouldComponentUpdate(nextProps: Props): boolean {\r\n    return (\r\n      this.props.block !== nextProps.block ||\r\n      this.props.tree !== nextProps.tree ||\r\n      this.props.direction !== nextProps.direction ||\r\n      (isBlockOnSelectionEdge(nextProps.selection, nextProps.block.getKey()) &&\r\n        nextProps.forceSelection)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * When a block is mounted and overlaps the selection state, we need to make\r\n   * sure that the cursor is visible to match native behavior. This may not\r\n   * be the case if the user has pressed `RETURN` or pasted some content, since\r\n   * programmatically creating these new blocks and setting the DOM selection\r\n   * will miss out on the browser natively scrolling to that position.\r\n   *\r\n   * To replicate native behavior, if the block overlaps the selection state\r\n   * on mount, force the scroll position. Check the scroll state of the scroll\r\n   * parent, and adjust it to align the entire block to the bottom of the\r\n   * scroll parent.\r\n   */\r\n  componentDidMount(): void {\r\n    const selection = this.props.selection;\r\n    const endKey = selection.getEndKey();\r\n    if (!selection.getHasFocus() || endKey !== this.props.block.getKey()) {\r\n      return;\r\n    }\r\n\r\n    const blockNode = this._node;\r\n    if (blockNode == null) {\r\n      return;\r\n    }\r\n    const scrollParent = Style.getScrollParent(blockNode);\r\n    const scrollPosition = getScrollPosition(scrollParent);\r\n    let scrollDelta;\r\n\r\n    if (scrollParent === window) {\r\n      const nodePosition = getElementPosition(blockNode);\r\n      const nodeBottom = nodePosition.y + nodePosition.height;\r\n      const viewportHeight = getViewportDimensions().height;\r\n      scrollDelta = nodeBottom - viewportHeight;\r\n      if (scrollDelta > 0) {\r\n        window.scrollTo(\r\n          scrollPosition.x,\r\n          scrollPosition.y + scrollDelta + SCROLL_BUFFER,\r\n        );\r\n      }\r\n    } else {\r\n      invariant(isHTMLElement(blockNode), 'blockNode is not an HTMLElement');\r\n      const blockBottom = blockNode.offsetHeight + blockNode.offsetTop;\r\n      const pOffset = scrollParent.offsetTop + scrollParent.offsetHeight;\r\n      const scrollBottom = pOffset + scrollPosition.y;\r\n\r\n      scrollDelta = blockBottom - scrollBottom;\r\n      if (scrollDelta > 0) {\r\n        Scroll.setTop(\r\n          scrollParent,\r\n          Scroll.getTop(scrollParent) + scrollDelta + SCROLL_BUFFER,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  _renderChildren(): Array<ReactNode> {\r\n    const block = this.props.block;\r\n    const blockKey = block.getKey();\r\n    const text = block.getText();\r\n    const lastLeafSet = this.props.tree.size - 1;\r\n    const hasSelection = isBlockOnSelectionEdge(this.props.selection, blockKey);\r\n\r\n    return this.props.tree\r\n      .map((leafSet, ii) => {\r\n        const leavesForLeafSet = leafSet.get('leaves');\r\n        // T44088704\r\n        if (leavesForLeafSet.size === 0) {\r\n          return null;\r\n        }\r\n        const lastLeaf = leavesForLeafSet.size - 1;\r\n        const leaves = leavesForLeafSet\r\n          .map((leaf, jj) => {\r\n            const offsetKey = DraftOffsetKey.encode(blockKey, ii, jj);\r\n            const start = leaf.get('start');\r\n            const end = leaf.get('end');\r\n\r\n            return (\r\n              // @ts-ignore\r\n              <DraftEditorLeaf\r\n                key={offsetKey}\r\n                offsetKey={offsetKey}\r\n                block={block}\r\n                start={start}\r\n                selection={hasSelection ? this.props.selection : null}\r\n                forceSelection={this.props.forceSelection}\r\n                text={text.slice(start, end)}\r\n                styleSet={block.getInlineStyleAt(start)}\r\n                customStyleMap={this.props.customStyleMap}\r\n                customStyleFn={this.props.customStyleFn}\r\n                isLast={ii === lastLeafSet && jj === lastLeaf}\r\n              />\r\n            );\r\n          })\r\n          .toArray();\r\n\r\n        const decoratorKey = leafSet.get('decoratorKey');\r\n        if (decoratorKey == null) {\r\n          return leaves;\r\n        }\r\n\r\n        if (!this.props.decorator) {\r\n          return leaves;\r\n        }\r\n\r\n        const decorator = nullthrows(this.props.decorator);\r\n\r\n        const DecoratorComponent = decorator.getComponentForKey(decoratorKey);\r\n        if (!DecoratorComponent) {\r\n          return leaves;\r\n        }\r\n\r\n        const decoratorProps = decorator.getPropsForKey(decoratorKey);\r\n        const decoratorOffsetKey = DraftOffsetKey.encode(blockKey, ii, 0);\r\n        const start = leavesForLeafSet.first().get('start');\r\n        const end = leavesForLeafSet.last().get('end');\r\n        const decoratedText = text.slice(start, end);\r\n        const entityKey = block.getEntityAt(leafSet.get('start'));\r\n\r\n        // Resetting dir to the same value on a child node makes Chrome/Firefox\r\n        // confused on cursor movement. See http://jsfiddle.net/d157kLck/3/\r\n        const dir = UnicodeBidiDirection.getHTMLDirIfDifferent(\r\n          UnicodeBidi.getDirection(decoratedText),\r\n          this.props.direction,\r\n        );\r\n\r\n        const commonProps: DraftDecoratorComponentProps = {\r\n          contentState: this.props.contentState,\r\n          decoratedText,\r\n          dir: dir,\r\n          key: decoratorOffsetKey,\r\n          start,\r\n          end,\r\n          blockKey,\r\n          entityKey,\r\n          offsetKey: decoratorOffsetKey,\r\n        };\r\n\r\n        return (\r\n          <DecoratorComponent {...decoratorProps} {...commonProps}>\r\n            {leaves}\r\n          </DecoratorComponent>\r\n        );\r\n      })\r\n      .toArray();\r\n  }\r\n\r\n  render(): ReactNode {\r\n    const {direction, offsetKey} = this.props;\r\n    const className = cx({\r\n      'public/DraftStyleDefault/block': true,\r\n      'public/DraftStyleDefault/ltr': direction === 'LTR',\r\n      'public/DraftStyleDefault/rtl': direction === 'RTL',\r\n    });\r\n\r\n    return (\r\n      <div\r\n        data-offset-key={offsetKey}\r\n        className={className}\r\n        ref={ref => (this._node = ref)}>\r\n        {this._renderChildren()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  DraftEditorBlock;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../../model/immutable/BlockNodeRecord';\r\nimport  {DraftBlockRenderMap} from '../../model/immutable/DraftBlockRenderMap';\r\nimport  {DraftInlineStyle} from '../../model/immutable/DraftInlineStyle';\r\nimport  EditorState from '../../model/immutable/EditorState';\r\nimport  {BidiDirection} from 'fbjs/lib/UnicodeBidiDirection';\r\n\r\nimport DraftEditorBlock from './DraftEditorBlock.react';\r\nimport DraftOffsetKey from '../selection/DraftOffsetKey';\r\nimport React, {ReactNode} from 'react'\r\nimport cx from 'fbjs/lib/cx'\r\nimport joinClasses from 'fbjs/lib/joinClasses';\r\n\r\n\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\ntype Props = {\r\n  blockRenderMap: DraftBlockRenderMap,\r\n  blockRendererFn: (block: BlockNodeRecord) => Object,\r\n  blockStyleFn?: (block: BlockNodeRecord) => string,\r\n  customStyleFn?: (style: DraftInlineStyle, block: BlockNodeRecord) => Object,\r\n  customStyleMap?: Object,\r\n  editorKey?: string,\r\n  editorState: EditorState,\r\n  textDirectionality?: BidiDirection,\r\n};\r\n\r\n/**\r\n * Provide default styling for list items. This way, lists will be styled with\r\n * proper counters and indentation even if the caller does not specify\r\n * their own styling at all. If more than five levels of nesting are needed,\r\n * the necessary CSS classes can be provided via `blockStyleFn` configuration.\r\n */\r\nconst getListItemClasses = (\r\n  type: string,\r\n  depth: number,\r\n  shouldResetCount: boolean,\r\n  direction: BidiDirection,\r\n): string => {\r\n  return cx({\r\n    'public/DraftStyleDefault/unorderedListItem':\r\n      type === 'unordered-list-item',\r\n    'public/DraftStyleDefault/orderedListItem': type === 'ordered-list-item',\r\n    'public/DraftStyleDefault/reset': shouldResetCount,\r\n    'public/DraftStyleDefault/depth0': depth === 0,\r\n    'public/DraftStyleDefault/depth1': depth === 1,\r\n    'public/DraftStyleDefault/depth2': depth === 2,\r\n    'public/DraftStyleDefault/depth3': depth === 3,\r\n    'public/DraftStyleDefault/depth4': depth >= 4,\r\n    'public/DraftStyleDefault/listLTR': direction === 'LTR',\r\n    'public/DraftStyleDefault/listRTL': direction === 'RTL',\r\n  });\r\n};\r\n\r\n/**\r\n * `DraftEditorContents` is the container component for all block components\r\n * rendered for a `DraftEditor`. It is optimized to aggressively avoid\r\n * re-rendering blocks whenever possible.\r\n *\r\n * This component is separate from `DraftEditor` because certain props\r\n * (for instance, ARIA props) must be allowed to update without affecting\r\n * the contents of the editor.\r\n */\r\nclass DraftEditorContents extends React.Component<Props> {\r\n  shouldComponentUpdate(nextProps: Props): boolean {\r\n    const prevEditorState = this.props.editorState;\r\n    const nextEditorState = nextProps.editorState;\r\n\r\n    const prevDirectionMap = prevEditorState.getDirectionMap();\r\n    const nextDirectionMap = nextEditorState.getDirectionMap();\r\n\r\n    // Text direction has changed for one or more blocks. We must re-render.\r\n    if (prevDirectionMap !== nextDirectionMap) {\r\n      return true;\r\n    }\r\n\r\n    const didHaveFocus = prevEditorState.getSelection().getHasFocus();\r\n    const nowHasFocus = nextEditorState.getSelection().getHasFocus();\r\n\r\n    if (didHaveFocus !== nowHasFocus) {\r\n      return true;\r\n    }\r\n\r\n    const nextNativeContent = nextEditorState.getNativelyRenderedContent();\r\n\r\n    const wasComposing = prevEditorState.isInCompositionMode();\r\n    const nowComposing = nextEditorState.isInCompositionMode();\r\n\r\n    // If the state is unchanged or we're currently rendering a natively\r\n    // rendered state, there's nothing new to be done.\r\n    if (\r\n      prevEditorState === nextEditorState ||\r\n      (nextNativeContent !== null &&\r\n        nextEditorState.getCurrentContent() === nextNativeContent) ||\r\n      (wasComposing && nowComposing)\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    const prevContent = prevEditorState.getCurrentContent();\r\n    const nextContent = nextEditorState.getCurrentContent();\r\n    const prevDecorator = prevEditorState.getDecorator();\r\n    const nextDecorator = nextEditorState.getDecorator();\r\n    return (\r\n      wasComposing !== nowComposing ||\r\n      prevContent !== nextContent ||\r\n      prevDecorator !== nextDecorator ||\r\n      nextEditorState.mustForceSelection()\r\n    );\r\n  }\r\n\r\n  render(): ReactNode {\r\n    const {\r\n      blockRenderMap,\r\n      blockRendererFn,\r\n      blockStyleFn,\r\n      customStyleMap,\r\n      customStyleFn,\r\n      editorState,\r\n      editorKey,\r\n      textDirectionality,\r\n    } = this.props;\r\n\r\n    const content = editorState.getCurrentContent();\r\n    const selection = editorState.getSelection();\r\n    const forceSelection = editorState.mustForceSelection();\r\n    const decorator = editorState.getDecorator();\r\n    const directionMap = nullthrows(editorState.getDirectionMap());\r\n\r\n    const blocksAsArray = content.getBlocksAsArray();\r\n    const processedBlocks = [];\r\n\r\n    let currentDepth = null;\r\n    let lastWrapperTemplate = null;\r\n\r\n    for (let ii = 0; ii < blocksAsArray.length; ii++) {\r\n      const block = blocksAsArray[ii];\r\n      const key = block.getKey();\r\n      const blockType = block.getType();\r\n\r\n      const customRenderer:any = blockRendererFn(block);\r\n      let CustomComponent, customProps, customEditable;\r\n      if (customRenderer) {\r\n        CustomComponent = customRenderer.component;\r\n        customProps = customRenderer.props;\r\n        customEditable = customRenderer.editable;\r\n      }\r\n\r\n      const direction = textDirectionality\r\n        ? textDirectionality\r\n        : directionMap.get(key);\r\n      const offsetKey = DraftOffsetKey.encode(key, 0, 0);\r\n      const componentProps = {\r\n        contentState: content,\r\n        block,\r\n        blockProps: customProps,\r\n        blockStyleFn,\r\n        customStyleMap,\r\n        customStyleFn,\r\n        decorator,\r\n        direction,\r\n        forceSelection,\r\n        offsetKey,\r\n        selection,\r\n        tree: editorState.getBlockTree(key),\r\n      };\r\n\r\n      const configForType =\r\n        blockRenderMap.get(blockType) || blockRenderMap.get('unstyled');\r\n      const wrapperTemplate = configForType.wrapper;\r\n\r\n      const Element =\r\n        configForType.element || blockRenderMap.get('unstyled').element;\r\n\r\n      const depth = block.getDepth();\r\n      let className = '';\r\n      if (blockStyleFn) {\r\n        className = blockStyleFn(block);\r\n      }\r\n\r\n      // List items are special snowflakes, since we handle nesting and\r\n      // counters manually.\r\n      if (Element === 'li') {\r\n        const shouldResetCount =\r\n          lastWrapperTemplate !== wrapperTemplate ||\r\n          currentDepth === null ||\r\n          depth > currentDepth;\r\n        className = joinClasses(\r\n          className,\r\n          getListItemClasses(blockType, depth, shouldResetCount, direction),\r\n        );\r\n      }\r\n\r\n      const Component = CustomComponent || DraftEditorBlock;\r\n      let childProps:any = {\r\n        className,\r\n        'data-block': true,\r\n        'data-editor': editorKey,\r\n        'data-offset-key': offsetKey,\r\n        key,\r\n      };\r\n      if (customEditable !== undefined) {\r\n        childProps = {\r\n          ...childProps,\r\n          contentEditable: customEditable,\r\n          suppressContentEditableWarning: true,\r\n        };\r\n      }\r\n\r\n      const child = React.createElement(\r\n        Element,\r\n        childProps,\r\n        /* $FlowFixMe(>=0.112.0 site=mobile) This comment suppresses an error\r\n         * found when Flow v0.112 was deployed. To see the error delete this\r\n         * comment and run Flow. */\r\n        /* $FlowFixMe(>=0.112.0 site=www) This comment suppresses an error\r\n         * found when Flow v0.112 was deployed. To see the error delete this\r\n         * comment and run Flow. */\r\n        /* $FlowFixMe(>=0.112.0 site=www,mobile) This comment suppresses an\r\n         * error found when Flow v0.112 was deployed. To see the error delete\r\n         * this comment and run Flow. */\r\n        <Component {...componentProps} key={key} />,\r\n      );\r\n\r\n      processedBlocks.push({\r\n        block: child,\r\n        wrapperTemplate,\r\n        key,\r\n        offsetKey,\r\n      });\r\n\r\n      if (wrapperTemplate) {\r\n        currentDepth = block.getDepth();\r\n      } else {\r\n        currentDepth = null;\r\n      }\r\n      lastWrapperTemplate = wrapperTemplate;\r\n    }\r\n\r\n    // Group contiguous runs of blocks that have the same wrapperTemplate\r\n    const outputBlocks = [];\r\n    for (let ii = 0; ii < processedBlocks.length; ) {\r\n      const info: any = processedBlocks[ii];\r\n      if (info.wrapperTemplate) {\r\n        const blocks = [];\r\n        do {\r\n          blocks.push(processedBlocks[ii].block);\r\n          ii++;\r\n        } while (\r\n          ii < processedBlocks.length &&\r\n          processedBlocks[ii].wrapperTemplate === info.wrapperTemplate\r\n        );\r\n        const wrapperElement = React.cloneElement(\r\n          info.wrapperTemplate,\r\n          {\r\n            key: info.key + '-wrap',\r\n            'data-offset-key': info.offsetKey,\r\n          },\r\n          blocks,\r\n        );\r\n        outputBlocks.push(wrapperElement);\r\n      } else {\r\n        outputBlocks.push(info.block);\r\n        ii++;\r\n      }\r\n    }\r\n\r\n    return <div data-contents=\"true\">{outputBlocks}</div>;\r\n  }\r\n}\r\n\r\nexport default  DraftEditorContents;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport gkx from \"./gkx\";\r\n\r\nconst experimentalTreeDataSupport = gkx(\"draft_tree_data_support\");\r\nimport DraftEditorContentsExperimental from \"../component/contents/exploration/DraftEditorContentsExperimental.react\";\r\nimport DraftEditorContents from \"../component/contents/DraftEditorContents-core.react\";\r\n\r\nlet theExport = experimentalTreeDataSupport ? DraftEditorContentsExperimental : DraftEditorContents;\r\nexport default theExport;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\nconst TEXT_CLIPPING_REGEX = /\\.textClipping$/;\r\n\r\nconst TEXT_TYPES = {\r\n  'text/plain': true,\r\n  'text/html': true,\r\n  'text/rtf': true,\r\n};\r\n\r\n// Somewhat arbitrary upper bound on text size. Let's not lock up the browser.\r\nconst TEXT_SIZE_UPPER_BOUND = 5000;\r\n\r\n/**\r\n * Extract the text content from a file list.\r\n */\r\nfunction getTextContentFromFiles(\r\n  files: Array<File>,\r\n  callback: (contents: string) => void,\r\n): void {\r\n  let readCount = 0;\r\n  const results = [];\r\n  files.forEach(function(/*blob*/ file) {\r\n    readFile(file, function(/*string*/ text) {\r\n      readCount++;\r\n      text && results.push(text.slice(0, TEXT_SIZE_UPPER_BOUND));\r\n      if (readCount == files.length) {\r\n        callback(results.join('\\r'));\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * todo isaac: Do work to turn html/rtf into a content fragment.\r\n */\r\nfunction readFile(file: File, callback: (contents: string) => void): void {\r\n  if (!(global as any).FileReader || (file.type && !(file.type in TEXT_TYPES))) {\r\n    callback('');\r\n    return;\r\n  }\r\n\r\n  if (file.type === '') {\r\n    let contents = '';\r\n    // Special-case text clippings, which have an empty type but include\r\n    // `.textClipping` in the file name. `readAsText` results in an empty\r\n    // string for text clippings, so we force the file name to serve\r\n    // as the text value for the file.\r\n    if (TEXT_CLIPPING_REGEX.test(file.name)) {\r\n      contents = file.name.replace(TEXT_CLIPPING_REGEX, '');\r\n    }\r\n    callback(contents);\r\n    return;\r\n  }\r\n\r\n  const reader = new FileReader();\r\n  reader.onload = function() {\r\n    const result:any = reader.result;\r\n    invariant(\r\n      typeof result === 'string',\r\n      'We should be calling \"FileReader.readAsText\" which returns a string',\r\n    );\r\n    callback(result);\r\n  };\r\n  reader.onerror = function() {\r\n    callback('');\r\n  };\r\n  reader.readAsText(file);\r\n}\r\n\r\nexport default  getTextContentFromFiles;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {DraftHandleValue} from '../../model/constants/DraftHandleValue';\r\n\r\n/**\r\n * Utility method for determining whether or not the value returned\r\n * from a handler indicates that it was handled.\r\n */\r\nfunction isEventHandled(value: DraftHandleValue): boolean {\r\n  return value === 'handled' || value === true;\r\n}\r\n\r\nexport default  isEventHandled;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\nimport  SelectionState from '../../../model/immutable/SelectionState';\r\n\r\nimport DataTransfer from 'fbjs/lib/DataTransfer';\r\nimport DraftModifier from '../../../model/modifier/DraftModifier';\r\nimport EditorState from '../../../model/immutable/EditorState';\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport findAncestorOffsetKey from '../../selection/findAncestorOffsetKey';\r\nimport getCorrectDocumentFromNode from '../../utils/getCorrectDocumentFromNode';\r\nimport getTextContentFromFiles from '../../utils/getTextContentFromFiles';\r\nimport getUpdatedSelectionState from '../../selection/getUpdatedSelectionState';\r\nimport getWindowForNode from '../../utils/getWindowForNode';\r\nimport isEventHandled from '../../utils/isEventHandled';\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\n/**\r\n * Get a SelectionState for the supplied mouse event.\r\n */\r\nfunction getSelectionForEvent(\r\n  event: any,\r\n  editorState: EditorState,\r\n): SelectionState {\r\n  let node: Node = null;\r\n  let offset: number = null;\r\n\r\n  const eventTargetDocument = getCorrectDocumentFromNode(event.currentTarget);\r\n  /* $FlowFixMe(>=0.68.0 site=www,mobile) This comment suppresses an error\r\n   * found when Flow v0.68 was deployed. To see the error delete this comment\r\n   * and run Flow. */\r\n  if (typeof eventTargetDocument.caretRangeFromPoint === 'function') {\r\n    const dropRange = eventTargetDocument.caretRangeFromPoint(event.x, event.y);\r\n    node = dropRange.startContainer;\r\n    offset = dropRange.startOffset;\r\n  } else if (event.rangeParent) {\r\n    node = event.rangeParent;\r\n    offset = event.rangeOffset;\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  node = nullthrows(node);\r\n  offset = nullthrows(offset);\r\n  const offsetKey = nullthrows(findAncestorOffsetKey(node));\r\n\r\n  return getUpdatedSelectionState(\r\n    editorState,\r\n    offsetKey,\r\n    offset,\r\n    offsetKey,\r\n    offset,\r\n  );\r\n}\r\n\r\nconst DraftEditorDragHandler = {\r\n  /**\r\n   * Drag originating from input terminated.\r\n   */\r\n  onDragEnd: function(editor: DraftEditor): void {\r\n    editor.exitCurrentMode();\r\n    endDrag(editor);\r\n  },\r\n\r\n  /**\r\n   * Handle data being dropped.\r\n   */\r\n  onDrop: function(editor: DraftEditor, e: any): void {\r\n    const data = new DataTransfer(e.nativeEvent.dataTransfer);\r\n\r\n    const editorState: EditorState = editor._latestEditorState;\r\n    const dropSelection: SelectionState = getSelectionForEvent(\r\n      e.nativeEvent,\r\n      editorState,\r\n    );\r\n\r\n    e.preventDefault();\r\n    editor._dragCount = 0;\r\n    editor.exitCurrentMode();\r\n\r\n    if (dropSelection == null) {\r\n      return;\r\n    }\r\n\r\n    /* $FlowFixMe This comment suppresses an error found DataTransfer was typed.\r\n     * getFiles() returns an array of <Files extends Blob>, not Blob */\r\n    const files: Array<Blob> = (data.getFiles() as any);\r\n    if (files.length > 0) {\r\n      if (\r\n        editor.props.handleDroppedFiles &&\r\n        isEventHandled(editor.props.handleDroppedFiles(dropSelection, files))\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      getTextContentFromFiles(files as any, fileText => {\r\n        fileText &&\r\n          editor.update(\r\n            insertTextAtSelection(editorState, dropSelection, fileText),\r\n          );\r\n      });\r\n      return;\r\n    }\r\n\r\n    const dragType = editor._internalDrag ? 'internal' : 'external';\r\n    if (\r\n      editor.props.handleDrop &&\r\n      isEventHandled(editor.props.handleDrop(dropSelection, data, dragType))\r\n    ) {\r\n      // handled\r\n    } else if (editor._internalDrag) {\r\n      editor.update(moveText(editorState, dropSelection));\r\n    } else {\r\n      editor.update(\r\n        insertTextAtSelection(\r\n          editorState,\r\n          dropSelection,\r\n          (data.getText() as any),\r\n        ),\r\n      );\r\n    }\r\n    endDrag(editor);\r\n  },\r\n};\r\n\r\nfunction endDrag(editor) {\r\n  editor._internalDrag = false;\r\n\r\n  // Fix issue #1383\r\n  // Prior to React v16.5.0 onDrop breaks onSelect event:\r\n  // https://github.com/facebook/react/issues/11379.\r\n  // Dispatching a mouseup event on DOM node will make it go back to normal.\r\n  const editorNode = ReactDOM.findDOMNode(editor);\r\n  if (editorNode) {\r\n    const mouseUpEvent = new MouseEvent('mouseup', {\r\n      view: getWindowForNode(editorNode),\r\n      bubbles: true,\r\n      cancelable: true,\r\n    });\r\n    editorNode.dispatchEvent(mouseUpEvent);\r\n  }\r\n}\r\n\r\nfunction moveText(\r\n  editorState: EditorState,\r\n  targetSelection: SelectionState,\r\n): EditorState {\r\n  const newContentState = DraftModifier.moveText(\r\n    editorState.getCurrentContent(),\r\n    editorState.getSelection(),\r\n    targetSelection,\r\n  );\r\n  return EditorState.push(editorState, newContentState, 'insert-fragment');\r\n}\r\n\r\n/**\r\n * Insert text at a specified selection.\r\n */\r\nfunction insertTextAtSelection(\r\n  editorState: EditorState,\r\n  selection: SelectionState,\r\n  text: string,\r\n): EditorState {\r\n  const newContentState = DraftModifier.insertText(\r\n    editorState.getCurrentContent(),\r\n    selection,\r\n    text,\r\n    editorState.getCurrentInlineStyle(),\r\n  );\r\n  return EditorState.push(editorState, newContentState, 'insert-fragment');\r\n}\r\n\r\nexport default  DraftEditorDragHandler;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  EditorState from '../../model/immutable/EditorState';\r\n\r\nfunction isSelectionAtLeafStart(editorState: EditorState): boolean {\r\n  const selection = editorState.getSelection();\r\n  const anchorKey = selection.getAnchorKey();\r\n  const blockTree = editorState.getBlockTree(anchorKey);\r\n  const offset = selection.getStartOffset();\r\n\r\n  let isAtStart = false;\r\n\r\n  blockTree.some(leafSet => {\r\n    if (offset === leafSet.get('start')) {\r\n      isAtStart = true;\r\n      return true;\r\n    }\r\n\r\n    if (offset < leafSet.get('end')) {\r\n      return leafSet.get('leaves').some(leaf => {\r\n        const leafStart = leaf.get('start');\r\n        if (offset === leafStart) {\r\n          isAtStart = true;\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      });\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  return isAtStart;\r\n}\r\n\r\nexport default  isSelectionAtLeafStart;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\nimport React, {   } from 'react'\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\nimport  {DraftInlineStyle} from '../../../model/immutable/DraftInlineStyle';\r\n\r\nimport DraftModifier from '../../../model/modifier/DraftModifier';\r\nimport EditorState from '../../../model/immutable/EditorState';\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nimport getEntityKeyForSelection from '../../../model/entity/getEntityKeyForSelection';\r\nimport isEventHandled from '../../utils/isEventHandled';\r\nimport isSelectionAtLeafStart from '../../selection/isSelectionAtLeafStart';\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\nimport setImmediate from 'fbjs/lib/setImmediate';\r\n\r\n// When nothing is focused, Firefox regards two characters, `'` and `/`, as\r\n// commands that should open and focus the \"quickfind\" search bar. This should\r\n// *never* happen while a contenteditable is focused, but as of v28, it\r\n// sometimes does, even when the keypress event target is the contenteditable.\r\n// This breaks the input. Special case these characters to ensure that when\r\n// they are typed, we prevent default on the event to make sure not to\r\n// trigger quickfind.\r\nconst FF_QUICKFIND_CHAR = \"'\";\r\nconst FF_QUICKFIND_LINK_CHAR = '/';\r\nconst isFirefox = UserAgent.isBrowser('Firefox');\r\n\r\nfunction mustPreventDefaultForCharacter(character: string): boolean {\r\n  return (\r\n    isFirefox &&\r\n    (character == FF_QUICKFIND_CHAR || character == FF_QUICKFIND_LINK_CHAR)\r\n  );\r\n}\r\n\r\n/**\r\n * Replace the current selection with the specified text string, with the\r\n * inline style and entity key applied to the newly inserted text.\r\n */\r\nfunction replaceText(\r\n  editorState: EditorState,\r\n  text: string,\r\n  inlineStyle: DraftInlineStyle,\r\n  entityKey: string,\r\n  forceSelection: boolean,\r\n): EditorState {\r\n  const contentState = DraftModifier.replaceText(\r\n    editorState.getCurrentContent(),\r\n    editorState.getSelection(),\r\n    text,\r\n    inlineStyle,\r\n    entityKey,\r\n  );\r\n  return EditorState.push(\r\n    editorState,\r\n    contentState,\r\n    'insert-characters',\r\n    forceSelection,\r\n  );\r\n}\r\n\r\n/**\r\n * When `onBeforeInput` executes, the browser is attempting to insert a\r\n * character into the editor. Apply this character data to the document,\r\n * allowing native insertion if possible.\r\n *\r\n * Native insertion is encouraged in order to limit re-rendering and to\r\n * preserve spellcheck highlighting, which disappears or flashes if re-render\r\n * occurs on the relevant text nodes.\r\n */\r\nfunction editOnBeforeInput(\r\n  editor: DraftEditor,\r\n  e: InputEvent,\r\n): void {\r\n  if (editor._pendingStateFromBeforeInput !== undefined) {\r\n    editor.update(editor._pendingStateFromBeforeInput as any);\r\n    editor._pendingStateFromBeforeInput = undefined;\r\n  }\r\n\r\n  const editorState = editor._latestEditorState;\r\n\r\n  const chars = e.data;\r\n\r\n  // In some cases (ex: IE ideographic space insertion) no character data\r\n  // is provided. There's nothing to do when this happens.\r\n  if (!chars) {\r\n    return;\r\n  }\r\n\r\n  // Allow the top-level component to handle the insertion manually. This is\r\n  // useful when triggering interesting behaviors for a character insertion,\r\n  // Simple examples: replacing a raw text ':)' with a smile emoji or image\r\n  // decorator, or setting a block to be a list item after typing '- ' at the\r\n  // start of the block.\r\n  if (\r\n    editor.props.handleBeforeInput &&\r\n    isEventHandled(\r\n      editor.props.handleBeforeInput(chars, editorState, e.timeStamp),\r\n    )\r\n  ) {\r\n    e.preventDefault();\r\n    return;\r\n  }\r\n\r\n  // If selection is collapsed, conditionally allow native behavior. This\r\n  // reduces re-renders and preserves spellcheck highlighting. If the selection\r\n  // is not collapsed, we will re-render.\r\n  const selection = editorState.getSelection();\r\n  const selectionStart = selection.getStartOffset();\r\n  const anchorKey = selection.getAnchorKey();\r\n\r\n  if (!selection.isCollapsed()) {\r\n    e.preventDefault();\r\n    editor.update(\r\n      replaceText(\r\n        editorState,\r\n        chars,\r\n        editorState.getCurrentInlineStyle(),\r\n        getEntityKeyForSelection(\r\n          editorState.getCurrentContent(),\r\n          editorState.getSelection(),\r\n        ),\r\n        true,\r\n      ),\r\n    );\r\n    return;\r\n  }\r\n\r\n  let newEditorState = replaceText(\r\n    editorState,\r\n    chars,\r\n    editorState.getCurrentInlineStyle(),\r\n    getEntityKeyForSelection(\r\n      editorState.getCurrentContent(),\r\n      editorState.getSelection(),\r\n    ),\r\n    false,\r\n  );\r\n\r\n  // Bunch of different cases follow where we need to prevent native insertion.\r\n  let mustPreventNative = false;\r\n  if (!mustPreventNative) {\r\n    // Browsers tend to insert text in weird places in the DOM when typing at\r\n    // the start of a leaf, so we'll handle it ourselves.\r\n    mustPreventNative = isSelectionAtLeafStart(\r\n      editor._latestCommittedEditorState,\r\n    );\r\n  }\r\n  if (!mustPreventNative) {\r\n    // Let's say we have a decorator that highlights hashtags. In many cases\r\n    // we need to prevent native behavior and rerender ourselves --\r\n    // particularly, any case *except* where the inserted characters end up\r\n    // anywhere except exactly where you put them.\r\n    //\r\n    // Using [] to denote a decorated leaf, some examples:\r\n    //\r\n    // 1. 'hi #' and append 'f'\r\n    // desired rendering: 'hi [#f]'\r\n    // native rendering would be: 'hi #f' (incorrect)\r\n    //\r\n    // 2. 'x [#foo]' and insert '#' before 'f'\r\n    // desired rendering: 'x #[#foo]'\r\n    // native rendering would be: 'x [##foo]' (incorrect)\r\n    //\r\n    // 3. '[#foobar]' and insert ' ' between 'foo' and 'bar'\r\n    // desired rendering: '[#foo] bar'\r\n    // native rendering would be: '[#foo bar]' (incorrect)\r\n    //\r\n    // 4. '[#foo]' and delete '#' [won't use this beforeinput codepath though]\r\n    // desired rendering: 'foo'\r\n    // native rendering would be: '[foo]' (incorrect)\r\n    //\r\n    // 5. '[#foo]' and append 'b'\r\n    // desired rendering: '[#foob]'\r\n    // native rendering would be: '[#foob]'\r\n    // (native insertion here would be ok for decorators like simple spans,\r\n    // but not more complex decorators. To be safe, we need to prevent it.)\r\n    //\r\n    // It is safe to allow native insertion if and only if the full list of\r\n    // decorator ranges matches what we expect native insertion to give, and\r\n    // the range lengths have not changed. We don't need to compare the content\r\n    // because the only possible mutation to consider here is inserting plain\r\n    // text and decorators can't affect text content.\r\n    const oldBlockTree = editorState.getBlockTree(anchorKey);\r\n    const newBlockTree = newEditorState.getBlockTree(anchorKey);\r\n    mustPreventNative =\r\n      oldBlockTree.size !== newBlockTree.size ||\r\n      oldBlockTree.zip(newBlockTree).some(([oldLeafSet, newLeafSet]) => {\r\n        // selectionStart is guaranteed to be selectionEnd here\r\n        const oldStart = oldLeafSet.get('start');\r\n        const adjustedStart =\r\n          oldStart + (oldStart >= selectionStart ? chars.length : 0);\r\n        const oldEnd = oldLeafSet.get('end');\r\n        const adjustedEnd =\r\n          oldEnd + (oldEnd >= selectionStart ? chars.length : 0);\r\n        const newStart = newLeafSet.get('start');\r\n        const newEnd = newLeafSet.get('end');\r\n        const newDecoratorKey = newLeafSet.get('decoratorKey');\r\n        return (\r\n          // Different decorators\r\n          oldLeafSet.get('decoratorKey') !== newDecoratorKey ||\r\n          // Different number of inline styles\r\n          oldLeafSet.get('leaves').size !== newLeafSet.get('leaves').size ||\r\n          // Different effective decorator position\r\n          adjustedStart !== newStart ||\r\n          adjustedEnd !== newEnd ||\r\n          // Decorator already existed and its length changed\r\n          (newDecoratorKey != null && newEnd - newStart !== oldEnd - oldStart)\r\n        );\r\n      });\r\n  }\r\n  if (!mustPreventNative) {\r\n    mustPreventNative = mustPreventDefaultForCharacter(chars);\r\n  }\r\n  if (!mustPreventNative) {\r\n    mustPreventNative =\r\n      nullthrows(newEditorState.getDirectionMap()).get(anchorKey) !==\r\n      nullthrows(editorState.getDirectionMap()).get(anchorKey);\r\n  }\r\n\r\n  if (mustPreventNative) {\r\n    e.preventDefault();\r\n    newEditorState = EditorState.set(newEditorState, {\r\n      forceSelection: true,\r\n    });\r\n    editor.update(newEditorState);\r\n    return;\r\n  }\r\n\r\n  // We made it all the way! Let the browser do its thing and insert the char.\r\n  newEditorState = EditorState.set(newEditorState, {\r\n    nativelyRenderedContent: newEditorState.getCurrentContent(),\r\n  });\r\n  // The native event is allowed to occur. To allow user onChange handlers to\r\n  // change the inserted text, we wait until the text is actually inserted\r\n  // before we actually update our state. That way when we rerender, the text\r\n  // we see in the DOM will already have been inserted properly.\r\n  editor._pendingStateFromBeforeInput = newEditorState;\r\n  setImmediate(() => {\r\n    if (editor._pendingStateFromBeforeInput !== undefined) {\r\n      editor.update(editor._pendingStateFromBeforeInput as any);\r\n      editor._pendingStateFromBeforeInput = undefined;\r\n    }\r\n  });\r\n}\r\n\r\nexport default  editOnBeforeInput;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\n\r\nimport EditorState from '../../../model/immutable/EditorState';\r\n\r\nimport containsNode from 'fbjs/lib/containsNode';\r\nimport getActiveElement from 'fbjs/lib/getActiveElement';\r\n\r\nfunction editOnBlur(editor: DraftEditor, e: any): void {\r\n  // In a contentEditable element, when you select a range and then click\r\n  // another active element, this does trigger a `blur` event but will not\r\n  // remove the DOM selection from the contenteditable.\r\n  // This is consistent across all browsers, but we prefer that the editor\r\n  // behave like a textarea, where a `blur` event clears the DOM selection.\r\n  // We therefore force the issue to be certain, checking whether the active\r\n  // element is `body` to force it when blurring occurs within the window (as\r\n  // opposed to clicking to another tab or window).\r\n  const {ownerDocument} = e.currentTarget;\r\n  if (\r\n    !Boolean(editor.props.preserveSelectionOnBlur) &&\r\n    getActiveElement(ownerDocument) === ownerDocument.body\r\n  ) {\r\n    const selection = ownerDocument.defaultView.getSelection();\r\n    const editorNode = editor.editor;\r\n    if (\r\n      selection.rangeCount === 1 &&\r\n      containsNode(editorNode, selection.anchorNode) &&\r\n      containsNode(editorNode, selection.focusNode)\r\n    ) {\r\n      selection.removeAllRanges();\r\n    }\r\n  }\r\n\r\n  const editorState = editor._latestEditorState;\r\n  const currentSelection = editorState.getSelection();\r\n  if (!currentSelection.getHasFocus()) {\r\n    return;\r\n  }\r\n\r\n  const selection:any = currentSelection.set('hasFocus', false);\r\n  editor.props.onBlur && editor.props.onBlur(e);\r\n  editor.update(EditorState.acceptSelection(editorState, selection));\r\n}\r\n\r\nexport default  editOnBlur;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\n\r\nimport EditorState from '../../../model/immutable/EditorState';\r\n\r\n\r\n/**\r\n * The user has begun using an IME input system. Switching to `composite` mode\r\n * allows handling composition input and disables other edit behavior.\r\n */\r\nfunction editOnCompositionStart(\r\n  editor: DraftEditor,\r\n  e: any,\r\n): void {\r\n  editor.setMode('composite');\r\n  editor.update(\r\n    EditorState.set(editor._latestEditorState, {inCompositionMode: true}),\r\n  );\r\n  // Allow composition handler to interpret the compositionstart event\r\n  editor._onCompositionStart(e);\r\n}\r\n\r\nexport default  editOnCompositionStart;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from '../../../model/immutable/BlockMap';\r\nimport EditorState from '../../../model/immutable/EditorState';\r\n\r\nimport getContentStateFragment from '../../../model/transaction/getContentStateFragment';\r\n\r\nfunction getFragmentFromSelection(editorState: EditorState): BlockMap {\r\n  const selectionState = editorState.getSelection();\r\n\r\n  if (selectionState.isCollapsed()) {\r\n    return null;\r\n  }\r\n\r\n  return getContentStateFragment(\r\n    editorState.getCurrentContent(),\r\n    selectionState,\r\n  );\r\n}\r\n\r\nexport default  getFragmentFromSelection;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\n\r\nimport getFragmentFromSelection from './getFragmentFromSelection';\r\n\r\n/**\r\n * If we have a selection, create a ContentState fragment and store\r\n * it in our internal clipboard. Subsequent paste events will use this\r\n * fragment if no external clipboard data is supplied.\r\n */\r\nfunction editOnCopy(editor: DraftEditor, e: any): void {\r\n  const editorState = editor._latestEditorState;\r\n  const selection = editorState.getSelection();\r\n\r\n  // No selection, so there's nothing to copy.\r\n  if (selection.isCollapsed()) {\r\n    e.preventDefault();\r\n    return;\r\n  }\r\n\r\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\r\n}\r\n\r\nexport default  editOnCopy;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\nfunction isInstanceOfNode(target: EventTarget): boolean {\r\n  // we changed the name because of having duplicate module provider (fbjs)\r\n  if (!target || !('ownerDocument' in target)) {\r\n    return false;\r\n  }\r\n  if ('ownerDocument' in target) {\r\n    const node: Node = (target as any);\r\n    if (!node.ownerDocument.defaultView) {\r\n      return node instanceof Node;\r\n    }\r\n    // $FlowFixMe https://github.com/DefinitelyTyped/DefinitelyTyped/issues/11508#issuecomment-256045682\r\n    if (node instanceof (node.ownerDocument.defaultView as any).Node) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default  isInstanceOfNode;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\n\r\nimport DraftModifier from '../../../model/modifier/DraftModifier';\r\nimport EditorState from '../../../model/immutable/EditorState';\r\n\r\nimport Style from 'fbjs/lib/Style';\r\n\r\nimport getFragmentFromSelection from './getFragmentFromSelection';\r\nimport getScrollPosition from 'fbjs/lib/getScrollPosition';\r\nimport isNode from '../../utils/isInstanceOfNode';\r\n\r\n/**\r\n * On `cut` events, native behavior is allowed to occur so that the system\r\n * clipboard is set properly. This means that we need to take steps to recover\r\n * the editor DOM state after the `cut` has occurred in order to maintain\r\n * control of the component.\r\n *\r\n * In addition, we can keep a copy of the removed fragment, including all\r\n * styles and entities, for use as an internal paste.\r\n */\r\nfunction editOnCut(editor: DraftEditor, e: any): void {\r\n  const editorState = editor._latestEditorState;\r\n  const selection = editorState.getSelection();\r\n  const element = e.target;\r\n  let scrollPosition;\r\n\r\n  // No selection, so there's nothing to cut.\r\n  if (selection.isCollapsed()) {\r\n    e.preventDefault();\r\n    return;\r\n  }\r\n\r\n  // Track the current scroll position so that it can be forced back in place\r\n  // after the editor regains control of the DOM.\r\n  if (isNode(element)) {\r\n    const node: Node = (element as any);\r\n    scrollPosition = getScrollPosition(Style.getScrollParent(node));\r\n  }\r\n\r\n  const fragment = getFragmentFromSelection(editorState);\r\n  editor.setClipboard(fragment);\r\n\r\n  // Set `cut` mode to disable all event handling temporarily.\r\n  editor.setMode('cut');\r\n\r\n  // Let native `cut` behavior occur, then recover control.\r\n  setTimeout(() => {\r\n    editor.restoreEditorDOM(scrollPosition);\r\n    editor.exitCurrentMode();\r\n    editor.update(removeFragment(editorState));\r\n  }, 0);\r\n}\r\n\r\nfunction removeFragment(editorState: EditorState): EditorState {\r\n  const newContent = DraftModifier.removeRange(\r\n    editorState.getCurrentContent(),\r\n    editorState.getSelection(),\r\n    'forward',\r\n  );\r\n  return EditorState.push(editorState, newContent, 'remove-range');\r\n}\r\n\r\nexport default  editOnCut;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\n\r\n/**\r\n * Drag behavior has begun from outside the editor element.\r\n */\r\nfunction editOnDragOver(editor: DraftEditor, e: any): void {\r\n  editor.setMode('drag');\r\n  e.preventDefault();\r\n}\r\n\r\nexport default  editOnDragOver;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\n\r\n/**\r\n * A `dragstart` event has begun within the text editor component.\r\n */\r\nfunction editOnDragStart(editor: DraftEditor): void {\r\n  editor._internalDrag = true;\r\n  editor.setMode('drag');\r\n}\r\n\r\nexport default  editOnDragStart;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\n\r\nimport EditorState from '../../../model/immutable/EditorState';\r\n\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nfunction editOnFocus(editor: DraftEditor, e: any): void {\r\n  const editorState = editor._latestEditorState;\r\n  const currentSelection = editorState.getSelection();\r\n  if (currentSelection.getHasFocus()) {\r\n    return;\r\n  }\r\n\r\n  const selection:any = currentSelection.set('hasFocus', true);\r\n  editor.props.onFocus && editor.props.onFocus(e);\r\n\r\n  // When the tab containing this text editor is hidden and the user does a\r\n  // find-in-page in a _different_ tab, Chrome on Mac likes to forget what the\r\n  // selection was right after sending this focus event and (if you let it)\r\n  // moves the cursor back to the beginning of the editor, so we force the\r\n  // selection here instead of simply accepting it in order to preserve the\r\n  // old cursor position. See https://crbug.com/540004.\r\n  // But it looks like this is fixed in Chrome 60.0.3081.0.\r\n  // Other browsers also don't have this bug, so we prefer to acceptSelection\r\n  // when possible, to ensure that unfocusing and refocusing a Draft editor\r\n  // doesn't preserve the selection, matching how textareas work.\r\n  if (UserAgent.isBrowser('Chrome < 60.0.3081.0')) {\r\n    editor.update(EditorState.forceSelection(editorState, selection));\r\n  } else {\r\n    editor.update(EditorState.acceptSelection(editorState, selection));\r\n  }\r\n}\r\n\r\nexport default  editOnFocus;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  EditorState from '../../../../model/immutable/EditorState';\r\nimport  SelectionState from '../../../../model/immutable/SelectionState';\r\n\r\nimport warning from 'fbjs/lib/warning';\r\n\r\n/**\r\n * Given a collapsed selection, move the focus `maxDistance` backward within\r\n * the selected block. If the selection will go beyond the start of the block,\r\n * move focus to the end of the previous block, but no further.\r\n *\r\n * This function is not Unicode-aware, so surrogate pairs will be treated\r\n * as having length 2.\r\n */\r\nfunction moveSelectionBackward(\r\n  editorState: EditorState,\r\n  maxDistance: number,\r\n): SelectionState {\r\n  const selection = editorState.getSelection();\r\n  // Should eventually make this an invariant\r\n  warning(\r\n    selection.isCollapsed(),\r\n    'moveSelectionBackward should only be called with a collapsed SelectionState',\r\n  );\r\n  const content = editorState.getCurrentContent();\r\n  const key = selection.getStartKey();\r\n  const offset = selection.getStartOffset();\r\n\r\n  let focusKey = key;\r\n  let focusOffset = 0;\r\n\r\n  if (maxDistance > offset) {\r\n    const keyBefore = content.getKeyBefore(key);\r\n    if (keyBefore == null) {\r\n      focusKey = key;\r\n    } else {\r\n      focusKey = keyBefore;\r\n      const blockBefore = content.getBlockForKey(keyBefore);\r\n      focusOffset = blockBefore.getText().length;\r\n    }\r\n  } else {\r\n    focusOffset = offset - maxDistance;\r\n  }\r\n\r\n  return selection.merge({\r\n    focusKey,\r\n    focusOffset,\r\n    isBackward: true,\r\n  }) as any;\r\n}\r\n\r\nexport default  moveSelectionBackward;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  ContentState from '../../../../model/immutable/ContentState';\r\nimport  {DraftRemovalDirection} from '../../../../model/constants/DraftRemovalDirection';\r\nimport  EditorState from '../../../../model/immutable/EditorState';\r\nimport  SelectionState from '../../../../model/immutable/SelectionState';\r\n\r\nimport DraftModifier from '../../../../model/modifier/DraftModifier';\r\n\r\nimport gkx from '../../../../stubs/gkx';\r\n\r\nconst experimentalTreeDataSupport = gkx('draft_tree_data_support');\r\n\r\n/**\r\n * For a collapsed selection state, remove text based on the specified strategy.\r\n * If the selection state is not collapsed, remove the entire selected range.\r\n */\r\nfunction removeTextWithStrategy(\r\n  editorState: EditorState,\r\n  strategy: (editorState: EditorState) => SelectionState,\r\n  direction: DraftRemovalDirection,\r\n): ContentState {\r\n  const selection = editorState.getSelection();\r\n  const content = editorState.getCurrentContent();\r\n  let target = selection;\r\n  const anchorKey = selection.getAnchorKey();\r\n  const focusKey = selection.getFocusKey();\r\n  const anchorBlock:any = content.getBlockForKey(anchorKey);\r\n  if (experimentalTreeDataSupport) {\r\n    if (direction === 'forward') {\r\n      if (anchorKey !== focusKey) {\r\n        // For now we ignore forward delete across blocks,\r\n        // if there is demand for this we will implement it.\r\n        return content;\r\n      }\r\n    }\r\n  }\r\n  if (selection.isCollapsed()) {\r\n    if (direction === 'forward') {\r\n      if (editorState.isSelectionAtEndOfContent()) {\r\n        return content;\r\n      }\r\n      if (experimentalTreeDataSupport) {\r\n        const isAtEndOfBlock =\r\n          selection.getAnchorOffset() ===\r\n          content.getBlockForKey(anchorKey).getLength();\r\n        if (isAtEndOfBlock) {\r\n          const anchorBlockSibling = content.getBlockForKey(\r\n            anchorBlock.nextSibling,\r\n          );\r\n          if (!anchorBlockSibling || anchorBlockSibling.getLength() === 0) {\r\n            // For now we ignore forward delete at the end of a block,\r\n            // if there is demand for this we will implement it.\r\n            return content;\r\n          }\r\n        }\r\n      }\r\n    } else if (editorState.isSelectionAtStartOfContent()) {\r\n      return content;\r\n    }\r\n\r\n    target = strategy(editorState);\r\n    if (target === selection) {\r\n      return content;\r\n    }\r\n  }\r\n  return DraftModifier.removeRange(content, target, direction);\r\n}\r\n\r\nexport default  removeTextWithStrategy;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\nimport UnicodeUtils from 'fbjs/lib/UnicodeUtils';\r\n\r\nimport moveSelectionBackward from './moveSelectionBackward';\r\nimport removeTextWithStrategy from './removeTextWithStrategy';\r\n\r\n/**\r\n * Remove the selected range. If the cursor is collapsed, remove the preceding\r\n * character. This operation is Unicode-aware, so removing a single character\r\n * will remove a surrogate pair properly as well.\r\n */\r\nfunction keyCommandPlainBackspace(editorState: EditorState): EditorState {\r\n  const afterRemoval = removeTextWithStrategy(\r\n    editorState,\r\n    strategyState => {\r\n      const selection = strategyState.getSelection();\r\n      const content = strategyState.getCurrentContent();\r\n      const key = selection.getAnchorKey();\r\n      const offset = selection.getAnchorOffset();\r\n      const charBehind = content.getBlockForKey(key).getText()[offset - 1];\r\n      return moveSelectionBackward(\r\n        strategyState,\r\n        charBehind ? UnicodeUtils.getUTF16Length(charBehind, 0) : 1,\r\n      );\r\n    },\r\n    'backward',\r\n  );\r\n\r\n  if (afterRemoval === editorState.getCurrentContent()) {\r\n    return editorState;\r\n  }\r\n\r\n  const selection = editorState.getSelection();\r\n  return EditorState.push(\r\n    editorState,\r\n    afterRemoval.set('selectionBefore', selection) as any,\r\n    selection.isCollapsed() ? 'backspace-character' : 'remove-range',\r\n  );\r\n}\r\n\r\nexport default  keyCommandPlainBackspace;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\n\r\nimport DraftModifier from '../../../model/modifier/DraftModifier';\r\nimport DraftOffsetKey from '../../selection/DraftOffsetKey';\r\nimport EditorState from '../../../model/immutable/EditorState';\r\n\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nimport {notEmptyKey} from '../../utils/draftKeyUtils';\r\nimport findAncestorOffsetKey from '../../selection/findAncestorOffsetKey';\r\nimport keyCommandPlainBackspace from './commands/keyCommandPlainBackspace';\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\nconst isGecko = UserAgent.isEngine('Gecko');\r\n\r\nconst DOUBLE_NEWLINE = '\\n\\n';\r\n\r\nfunction onInputType(inputType: string, editorState: EditorState): EditorState {\r\n  switch (inputType) {\r\n    case 'deleteContentBackward':\r\n      return keyCommandPlainBackspace(editorState);\r\n  }\r\n  return editorState;\r\n}\r\n\r\n/**\r\n * This function serves two purposes\r\n *\r\n * 1. To update the editorState and call onChange method with the new\r\n * editorState. This editorState is calculated in editOnBeforeInput but the\r\n * onChange method is not called with the new state until this method does it.\r\n * It is done to handle a specific case where certain character inputs might\r\n * be replaced with something else. E.g. snippets ('rc' might be replaced\r\n * with boilerplate code for react component). More information on the\r\n * exact problem can be found here -\r\n * https://github.com/facebook/draft-js/commit/07892ba479bd4dfc6afd1e0ed179aaf51cd138b1\r\n *\r\n * 2. intended to handle spellcheck and autocorrect changes,\r\n * which occur in the DOM natively without any opportunity to observe or\r\n * interpret the changes before they occur.\r\n *\r\n * The `input` event fires in contentEditable elements reliably for non-IE\r\n * browsers, immediately after changes occur to the editor DOM. Since our other\r\n * handlers override or otherwise handle cover other varieties of text input,\r\n * the DOM state should match the model in all controlled input cases. Thus,\r\n * when an `input` change leads to a DOM/model mismatch, the change should be\r\n * due to a spellcheck change, and we can incorporate it into our model.\r\n */\r\nfunction editOnInput(editor: DraftEditor, e:any): void {\r\n  if (editor._pendingStateFromBeforeInput !== undefined) {\r\n    editor.update(editor._pendingStateFromBeforeInput as any);\r\n    editor._pendingStateFromBeforeInput = undefined;\r\n  }\r\n  // at this point editor is not null for sure (after input)\r\n  const castedEditorElement: HTMLElement = (editor.editor as any);\r\n  const domSelection = castedEditorElement.ownerDocument.defaultView.getSelection();\r\n\r\n  const {anchorNode, isCollapsed} = domSelection;\r\n  const isNotTextOrElementNode =\r\n    anchorNode.nodeType !== Node.TEXT_NODE &&\r\n    anchorNode.nodeType !== Node.ELEMENT_NODE;\r\n\r\n  if (isNotTextOrElementNode) {\r\n    // TODO: (t16149272) figure out context for this change\r\n    return;\r\n  }\r\n\r\n  if (\r\n    anchorNode.nodeType === Node.TEXT_NODE &&\r\n    (anchorNode.previousSibling !== null || anchorNode.nextSibling !== null)\r\n  ) {\r\n    // When typing at the beginning of a visual line, Chrome splits the text\r\n    // nodes into two. Why? No one knows. This commit is suspicious:\r\n    // https://chromium.googlesource.com/chromium/src/+/a3b600981286b135632371477f902214c55a1724\r\n    // To work around, we'll merge the sibling text nodes back into this one.\r\n    const span = anchorNode.parentNode;\r\n    anchorNode.nodeValue = span.textContent;\r\n    for (\r\n      let child = span.firstChild;\r\n      child !== null;\r\n      child = child.nextSibling\r\n    ) {\r\n      if (child !== anchorNode) {\r\n        span.removeChild(child);\r\n      }\r\n    }\r\n  }\r\n\r\n  let domText = anchorNode.textContent;\r\n  const editorState = editor._latestEditorState;\r\n  const offsetKey = nullthrows(findAncestorOffsetKey(anchorNode));\r\n  const {blockKey, decoratorKey, leafKey} = DraftOffsetKey.decode(offsetKey);\r\n\r\n  const {start, end} = editorState\r\n    .getBlockTree(blockKey)\r\n    .getIn([decoratorKey, 'leaves', leafKey]);\r\n\r\n  const content = editorState.getCurrentContent();\r\n  const block = content.getBlockForKey(blockKey);\r\n  const modelText = block.getText().slice(start, end);\r\n\r\n  // Special-case soft newlines here. If the DOM text ends in a soft newline,\r\n  // we will have manually inserted an extra soft newline in DraftEditorLeaf.\r\n  // We want to remove this extra newline for the purpose of our comparison\r\n  // of DOM and model text.\r\n  if (domText.endsWith(DOUBLE_NEWLINE)) {\r\n    domText = domText.slice(0, -1);\r\n  }\r\n\r\n  // No change -- the DOM is up to date. Nothing to do here.\r\n  if (domText === modelText) {\r\n    // This can be buggy for some Android keyboards because they don't fire\r\n    // standard onkeydown/pressed events and only fired editOnInput\r\n    // so domText is already changed by the browser and ends up being equal\r\n    // to modelText unexpectedly.\r\n    // Newest versions of Android support the dom-inputevent-inputtype\r\n    // and we can use the `inputType` to properly apply the state changes.\r\n\r\n    /* $FlowFixMe inputType is only defined on a draft of a standard.\r\n     * https://w3c.github.io/input-events/#dom-inputevent-inputtype */\r\n    const {inputType} = e.nativeEvent;\r\n    if (inputType) {\r\n      const newEditorState = onInputType(inputType, editorState);\r\n      if (newEditorState !== editorState) {\r\n        editor.restoreEditorDOM();\r\n        editor.update(newEditorState);\r\n        return;\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  const selection = editorState.getSelection();\r\n\r\n  // We'll replace the entire leaf with the text content of the target.\r\n  const targetRange = selection.merge({\r\n    anchorOffset: start,\r\n    focusOffset: end,\r\n    isBackward: false,\r\n  });\r\n\r\n  const entityKey = block.getEntityAt(start);\r\n  const entity = notEmptyKey(entityKey) ? content.getEntity(entityKey) : null;\r\n  const entityType = entity != null ? entity.getMutability() : null;\r\n  const preserveEntity = entityType === 'MUTABLE';\r\n\r\n  // Immutable or segmented entities cannot properly be handled by the\r\n  // default browser undo, so we have to use a different change type to\r\n  // force using our internal undo method instead of falling through to the\r\n  // native browser undo.\r\n  const changeType = preserveEntity ? 'spellcheck-change' : 'apply-entity';\r\n\r\n  const newContent = DraftModifier.replaceText(\r\n    content,\r\n    targetRange as any,\r\n    domText,\r\n    block.getInlineStyleAt(start),\r\n    preserveEntity ? block.getEntityAt(start) : null,\r\n  );\r\n\r\n  let anchorOffset, focusOffset, startOffset, endOffset;\r\n\r\n  if (isGecko) {\r\n    // Firefox selection does not change while the context menu is open, so\r\n    // we preserve the anchor and focus values of the DOM selection.\r\n    anchorOffset = domSelection.anchorOffset;\r\n    focusOffset = domSelection.focusOffset;\r\n    startOffset = start + Math.min(anchorOffset, focusOffset);\r\n    endOffset = startOffset + Math.abs(anchorOffset - focusOffset);\r\n    anchorOffset = startOffset;\r\n    focusOffset = endOffset;\r\n  } else {\r\n    // Browsers other than Firefox may adjust DOM selection while the context\r\n    // menu is open, and Safari autocorrect is prone to providing an inaccurate\r\n    // DOM selection. Don't trust it. Instead, use our existing SelectionState\r\n    // and adjust it based on the number of characters changed during the\r\n    // mutation.\r\n    const charDelta = domText.length - modelText.length;\r\n    startOffset = selection.getStartOffset();\r\n    endOffset = selection.getEndOffset();\r\n\r\n    anchorOffset = isCollapsed ? endOffset + charDelta : startOffset;\r\n    focusOffset = endOffset + charDelta;\r\n  }\r\n\r\n  // Segmented entities are completely or partially removed when their\r\n  // text content changes. For this case we do not want any text to be selected\r\n  // after the change, so we are not merging the selection.\r\n  const contentWithAdjustedDOMSelection:any = newContent.merge({\r\n    selectionBefore: content.getSelectionAfter(),\r\n    selectionAfter: selection.merge({anchorOffset, focusOffset}),\r\n  });\r\n\r\n  editor.update(\r\n    EditorState.push(editorState, contentWithAdjustedDOMSelection, changeType),\r\n  );\r\n}\r\n\r\nexport default  editOnInput;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport Keys from 'fbjs/lib/Keys'\r\n\r\nfunction isSoftNewlineEvent(e: any): boolean {\r\n  return (\r\n    e.which === Keys.RETURN &&\r\n    (e.getModifierState('Shift') ||\r\n      e.getModifierState('Alt') ||\r\n      e.getModifierState('Control'))\r\n  );\r\n}\r\n\r\nexport default  isSoftNewlineEvent;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\nimport React, { KeyboardEvent } from 'react'\r\n\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nimport isSoftNewlineEvent from './isSoftNewlineEvent';\r\n\r\nconst isOSX = UserAgent.isPlatform('Mac OS X');\r\n\r\nconst KeyBindingUtil = {\r\n  /**\r\n   * Check whether the ctrlKey modifier is *not* being used in conjunction with\r\n   * the altKey modifier. If they are combined, the result is an `altGraph`\r\n   * key modifier, which should not be handled by this set of key bindings.\r\n   */\r\n  isCtrlKeyCommand: function(e: KeyboardEvent): boolean {\r\n    return !!e.ctrlKey && !e.altKey;\r\n  },\r\n\r\n  isOptionKeyCommand: function(e: KeyboardEvent): boolean {\r\n    return isOSX && e.altKey;\r\n  },\r\n\r\n  usesMacOSHeuristics: function(): boolean {\r\n    return isOSX;\r\n  },\r\n\r\n  hasCommandModifier: function(e: KeyboardEvent): boolean {\r\n    return isOSX\r\n      ? !!e.metaKey && !e.altKey\r\n      : KeyBindingUtil.isCtrlKeyCommand(e);\r\n  },\r\n\r\n  isSoftNewlineEvent,\r\n};\r\n\r\nexport default  KeyBindingUtil;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from '../../../../model/immutable/BlockMap';\r\nimport  SelectionState from '../../../../model/immutable/SelectionState';\r\n\r\nimport DraftModifier from '../../../../model/modifier/DraftModifier';\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\n\r\nimport getContentStateFragment from '../../../../model/transaction/getContentStateFragment';\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\nlet clipboard: BlockMap = null;\r\n\r\n/**\r\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\r\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\r\n */\r\nconst SecondaryClipboard = {\r\n  cut: function(editorState: EditorState): EditorState {\r\n    const content = editorState.getCurrentContent();\r\n    const selection = editorState.getSelection();\r\n    let targetRange: SelectionState = null;\r\n\r\n    if (selection.isCollapsed()) {\r\n      const anchorKey = selection.getAnchorKey();\r\n      const blockEnd = content.getBlockForKey(anchorKey).getLength();\r\n\r\n      if (blockEnd === selection.getAnchorOffset()) {\r\n        const keyAfter = content.getKeyAfter(anchorKey);\r\n        if (keyAfter == null) {\r\n          return editorState;\r\n        }\r\n        targetRange = selection.set('focusKey', keyAfter).set('focusOffset', 0) as any;\r\n      } else {\r\n        targetRange = selection.set('focusOffset', blockEnd) as any;\r\n      }\r\n    } else {\r\n      targetRange = selection;\r\n    }\r\n\r\n    targetRange = nullthrows(targetRange);\r\n    // TODO: This should actually append to the current state when doing\r\n    // successive ^K commands without any other cursor movement\r\n    clipboard = getContentStateFragment(content, targetRange);\r\n\r\n    const afterRemoval = DraftModifier.removeRange(\r\n      content,\r\n      targetRange,\r\n      'forward',\r\n    );\r\n\r\n    if (afterRemoval === content) {\r\n      return editorState;\r\n    }\r\n\r\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\r\n  },\r\n\r\n  paste: function(editorState: EditorState): EditorState {\r\n    if (!clipboard) {\r\n      return editorState;\r\n    }\r\n\r\n    const newContent = DraftModifier.replaceWithFragment(\r\n      editorState.getCurrentContent(),\r\n      editorState.getSelection(),\r\n      clipboard,\r\n    );\r\n\r\n    return EditorState.push(editorState, newContent, 'insert-fragment');\r\n  },\r\n};\r\n\r\nexport default  SecondaryClipboard;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\nconst isChrome = UserAgent.isBrowser('Chrome');\r\n\r\n// In Chrome, the client rects will include the entire bounds of all nodes that\r\n// begin (have a start tag) within the selection, even if the selection does\r\n// not overlap the entire node. To resolve this, we split the range at each\r\n// start tag and join the client rects together.\r\n// https://code.google.com/p/chromium/issues/detail?id=324437\r\n/* eslint-disable consistent-return */\r\nfunction getRangeClientRectsChrome(range: Range): Array<ClientRect> {\r\n  const tempRange = range.cloneRange();\r\n  const clientRects = [];\r\n\r\n  for (\r\n    let ancestor = range.endContainer;\r\n    ancestor != null;\r\n    ancestor = ancestor.parentNode\r\n  ) {\r\n    // If we've climbed up to the common ancestor, we can now use the\r\n    // original start point and stop climbing the tree.\r\n    const atCommonAncestor = ancestor === range.commonAncestorContainer;\r\n    if (atCommonAncestor) {\r\n      tempRange.setStart(range.startContainer, range.startOffset);\r\n    } else {\r\n      tempRange.setStart(tempRange.endContainer, 0);\r\n    }\r\n    const rects = Array.from(tempRange.getClientRects());\r\n    clientRects.push(rects);\r\n    if (atCommonAncestor) {\r\n      clientRects.reverse();\r\n      return [].concat(...clientRects);\r\n    }\r\n    tempRange.setEndBefore(ancestor);\r\n  }\r\n\r\n  invariant(\r\n    false,\r\n    'Found an unexpected detached subtree when getting range client rects.',\r\n  );\r\n}\r\n/* eslint-enable consistent-return */\r\n\r\n/**\r\n * Like range.getClientRects() but normalizes for browser bugs.\r\n */\r\nconst getRangeClientRects = (isChrome\r\n  ? getRangeClientRectsChrome\r\n  : function(range: Range): Array<ClientRect> {\r\n      return Array.from(range.getClientRects());\r\n    })\r\n\r\nexport default  getRangeClientRects;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\nimport UnicodeUtils from 'fbjs/lib/UnicodeUtils';\r\n\r\nimport getCorrectDocumentFromNode from '../utils/getCorrectDocumentFromNode';\r\nimport getRangeClientRects from './getRangeClientRects';\r\nimport invariant from 'fbjs/lib/invariant';\r\n/**\r\n * Return the computed line height, in pixels, for the provided element.\r\n */\r\nfunction getLineHeightPx(element: Element): number {\r\n  const computed = getComputedStyle(element);\r\n  const correctDocument = getCorrectDocumentFromNode(element);\r\n  const div = correctDocument.createElement('div');\r\n  div.style.fontFamily = computed.fontFamily;\r\n  div.style.fontSize = computed.fontSize;\r\n  div.style.fontStyle = computed.fontStyle;\r\n  div.style.fontWeight = computed.fontWeight;\r\n  div.style.lineHeight = computed.lineHeight;\r\n  div.style.position = 'absolute';\r\n  div.textContent = 'M';\r\n\r\n  const documentBody = correctDocument.body;\r\n  invariant(documentBody, 'Missing document.body');\r\n\r\n  // forced layout here\r\n  documentBody.appendChild(div);\r\n  const rect = div.getBoundingClientRect();\r\n  documentBody.removeChild(div);\r\n\r\n  return rect.height;\r\n}\r\n\r\n/**\r\n * Return whether every ClientRect in the provided list lies on the same line.\r\n *\r\n * We assume that the rects on the same line all contain the baseline, so the\r\n * lowest top line needs to be above the highest bottom line (i.e., if you were\r\n * to project the rects onto the y-axis, their intersection would be nonempty).\r\n *\r\n * In addition, we requi re that no two boxes are lineHeight (or more) apart at\r\n * either top or bottom, which helps protect against false positives for fonts\r\n * with extremely large glyph heights (e.g., with a font size of 17px, Zapfino\r\n * produces rects of height 58px!).\r\n */\r\nfunction areRectsOnOneLine(\r\n  rects: Array<ClientRect>,\r\n  lineHeight: number,\r\n): boolean {\r\n  let minTop = Infinity;\r\n  let minBottom = Infinity;\r\n  let maxTop = -Infinity;\r\n  let maxBottom = -Infinity;\r\n\r\n  for (let ii = 0; ii < rects.length; ii++) {\r\n    const rect = rects[ii];\r\n    if (rect.width === 0 || rect.width === 1) {\r\n      // When a range starts or ends a soft wrap, many browsers (Chrome, IE,\r\n      // Safari) include an empty rect on the previous or next line. When the\r\n      // text lies in a container whose position is not integral (e.g., from\r\n      // margin: auto), Safari makes these empty rects have width 1 (instead of\r\n      // 0). Having one-pixel-wide characters seems unlikely (and most browsers\r\n      // report widths in subpixel precision anyway) so it's relatively safe to\r\n      // skip over them.\r\n      continue;\r\n    }\r\n    minTop = Math.min(minTop, rect.top);\r\n    minBottom = Math.min(minBottom, rect.bottom);\r\n    maxTop = Math.max(maxTop, rect.top);\r\n    maxBottom = Math.max(maxBottom, rect.bottom);\r\n  }\r\n\r\n  return (\r\n    maxTop <= minBottom &&\r\n    maxTop - minTop < lineHeight &&\r\n    maxBottom - minBottom < lineHeight\r\n  );\r\n}\r\n\r\n/**\r\n * Return the length of a node, as used by Range offsets.\r\n */\r\nfunction getNodeLength(node: Node): number {\r\n  // http://www.w3.org/TR/dom/#concept-node-length\r\n  switch (node.nodeType) {\r\n    case Node.DOCUMENT_TYPE_NODE:\r\n      return 0;\r\n    case Node.TEXT_NODE:\r\n    case Node.PROCESSING_INSTRUCTION_NODE:\r\n    case Node.COMMENT_NODE:\r\n      return (node as any).length;\r\n    default:\r\n      return node.childNodes.length;\r\n  }\r\n}\r\n\r\n/**\r\n * Given a collapsed range, move the start position backwards as far as\r\n * possible while the range still spans only a single line.\r\n */\r\nfunction expandRangeToStartOfLine(range: Range): Range {\r\n  invariant(\r\n    range.collapsed,\r\n    'expandRangeToStartOfLine: Provided range is not collapsed.',\r\n  );\r\n  range = range.cloneRange();\r\n\r\n  let containingElement = range.startContainer;\r\n  if (containingElement.nodeType !== 1) {\r\n    containingElement = containingElement.parentNode;\r\n  }\r\n  const lineHeight = getLineHeightPx((containingElement as any));\r\n\r\n  // Imagine our text looks like:\r\n  //   <div><span>once upon a time, there was a <em>boy\r\n  //   who lived</em> </span><q><strong>under^ the\r\n  //   stairs</strong> in a small closet.</q></div>\r\n  // where the caret represents the cursor. First, we crawl up the tree until\r\n  // the range spans multiple lines (setting the start point to before\r\n  // \"<strong>\", then before \"<div>\"), then at each level we do a search to\r\n  // find the latest point which is still on a previous line. We'll find that\r\n  // the break point is inside the span, then inside the <em>, then in its text\r\n  // node child, the actual break point before \"who\".\r\n\r\n  let bestContainer = range.endContainer;\r\n  let bestOffset = range.endOffset;\r\n  range.setStart(range.startContainer, 0);\r\n\r\n  while (areRectsOnOneLine(getRangeClientRects(range), lineHeight)) {\r\n    bestContainer = range.startContainer;\r\n    bestOffset = range.startOffset;\r\n    invariant(\r\n      bestContainer.parentNode,\r\n      'Found unexpected detached subtree when traversing.',\r\n    );\r\n    range.setStartBefore(bestContainer);\r\n    if (\r\n      bestContainer.nodeType === 1 &&\r\n      getComputedStyle((bestContainer as any)).display !== 'inline'\r\n    ) {\r\n      // The start of the line is never in a different block-level container.\r\n      break;\r\n    }\r\n  }\r\n\r\n  // In the above example, range now spans from \"<div>\" to \"under\",\r\n  // bestContainer is <div>, and bestOffset is 1 (index of <q> inside <div>)].\r\n  // Picking out which child to recurse into here is a special case since we\r\n  // don't want to check past <q> -- once we find that the final range starts\r\n  // in <span>, we can look at all of its children (and all of their children)\r\n  // to find the break point.\r\n\r\n  // At all times, (bestContainer, bestOffset) is the latest single-line start\r\n  // point that we know of.\r\n  let currentContainer = bestContainer;\r\n  let maxIndexToConsider = bestOffset - 1;\r\n\r\n  do {\r\n    const nodeValue = currentContainer.nodeValue;\r\n    let ii = maxIndexToConsider;\r\n\r\n    for (; ii >= 0; ii--) {\r\n      if (\r\n        nodeValue != null &&\r\n        ii > 0 &&\r\n        UnicodeUtils.isSurrogatePair(nodeValue, ii - 1)\r\n      ) {\r\n        // We're in the middle of a surrogate pair -- skip over so we never\r\n        // return a range with an endpoint in the middle of a code point.\r\n        continue;\r\n      }\r\n\r\n      range.setStart(currentContainer, ii);\r\n      if (areRectsOnOneLine(getRangeClientRects(range), lineHeight)) {\r\n        bestContainer = currentContainer;\r\n        bestOffset = ii;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (ii === -1 || currentContainer.childNodes.length === 0) {\r\n      // If ii === -1, then (bestContainer, bestOffset), which is equal to\r\n      // (currentContainer, 0), was a single-line start point but a start\r\n      // point before currentContainer wasn't, so the line break seems to\r\n      // have occurred immediately after currentContainer's start tag\r\n      //\r\n      // If currentContainer.childNodes.length === 0, we're already at a\r\n      // terminal node (e.g., text node) and should return our current best.\r\n      break;\r\n    }\r\n\r\n    currentContainer = currentContainer.childNodes[ii];\r\n    maxIndexToConsider = getNodeLength(currentContainer);\r\n  } while (true);\r\n\r\n  range.setStart(bestContainer, bestOffset);\r\n  return range;\r\n}\r\n\r\nexport default  expandRangeToStartOfLine;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\nimport React, { KeyboardEvent} from 'react'\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\n\r\nimport expandRangeToStartOfLine from '../../../selection/expandRangeToStartOfLine';\r\nimport getDraftEditorSelectionWithNodes from '../../../selection/getDraftEditorSelectionWithNodes';\r\nimport moveSelectionBackward from './moveSelectionBackward';\r\nimport removeTextWithStrategy from './removeTextWithStrategy';\r\n\r\nfunction keyCommandBackspaceToStartOfLine(\r\n  editorState: EditorState,\r\n  e: KeyboardEvent<HTMLElement>,\r\n): EditorState {\r\n  const afterRemoval = removeTextWithStrategy(\r\n    editorState,\r\n    strategyState => {\r\n      const selection = strategyState.getSelection();\r\n      if (selection.isCollapsed() && selection.getAnchorOffset() === 0) {\r\n        return moveSelectionBackward(strategyState, 1);\r\n      }\r\n      const {ownerDocument} = e.currentTarget;\r\n      const domSelection = ownerDocument.defaultView.getSelection();\r\n      let range = domSelection.getRangeAt(0);\r\n      range = expandRangeToStartOfLine(range);\r\n\r\n      return getDraftEditorSelectionWithNodes(\r\n        strategyState,\r\n        null,\r\n        range.endContainer,\r\n        range.endOffset,\r\n        range.startContainer,\r\n        range.startOffset,\r\n      ).selectionState;\r\n    },\r\n    'backward',\r\n  );\r\n\r\n  if (afterRemoval === editorState.getCurrentContent()) {\r\n    return editorState;\r\n  }\r\n\r\n  return EditorState.push(editorState, afterRemoval, 'remove-range');\r\n}\r\n\r\nexport default  keyCommandBackspaceToStartOfLine;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport TokenizeUtil from 'fbjs/lib/TokenizeUtil';\r\n\r\nconst punctuation = TokenizeUtil.getPunctuation();\r\n\r\n// The apostrophe and curly single quotes behave in a curious way: when\r\n// surrounded on both sides by word characters, they behave as word chars; when\r\n// either neighbor is punctuation or an end of the string, they behave as\r\n// punctuation.\r\nconst CHAMELEON_CHARS = \"['\\u2018\\u2019]\";\r\n\r\n// Remove the underscore, which should count as part of the removable word. The\r\n// \"chameleon chars\" also count as punctuation in this regex.\r\nconst WHITESPACE_AND_PUNCTUATION = '\\\\s|(?![_])' + punctuation;\r\n\r\nconst DELETE_STRING =\r\n  '^' +\r\n  '(?:' +\r\n  WHITESPACE_AND_PUNCTUATION +\r\n  ')*' +\r\n  '(?:' +\r\n  CHAMELEON_CHARS +\r\n  '|(?!' +\r\n  WHITESPACE_AND_PUNCTUATION +\r\n  ').)*' +\r\n  '(?:(?!' +\r\n  WHITESPACE_AND_PUNCTUATION +\r\n  ').)';\r\nconst DELETE_REGEX = new RegExp(DELETE_STRING);\r\n\r\nconst BACKSPACE_STRING =\r\n  '(?:(?!' +\r\n  WHITESPACE_AND_PUNCTUATION +\r\n  ').)' +\r\n  '(?:' +\r\n  CHAMELEON_CHARS +\r\n  '|(?!' +\r\n  WHITESPACE_AND_PUNCTUATION +\r\n  ').)*' +\r\n  '(?:' +\r\n  WHITESPACE_AND_PUNCTUATION +\r\n  ')*' +\r\n  '$';\r\nconst BACKSPACE_REGEX = new RegExp(BACKSPACE_STRING);\r\n\r\nfunction getRemovableWord(text: string, isBackward: boolean): string {\r\n  const matches = isBackward\r\n    ? BACKSPACE_REGEX.exec(text)\r\n    : DELETE_REGEX.exec(text);\r\n  return matches ? matches[0] : text;\r\n}\r\n\r\nconst DraftRemovableWord = {\r\n  getBackward: function(text: string): string {\r\n    return getRemovableWord(text, true);\r\n  },\r\n\r\n  getForward: function(text: string): string {\r\n    return getRemovableWord(text, false);\r\n  },\r\n};\r\n\r\nexport default  DraftRemovableWord;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport DraftRemovableWord from '../../../../model/modifier/DraftRemovableWord';\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\n\r\nimport moveSelectionBackward from './moveSelectionBackward';\r\nimport removeTextWithStrategy from './removeTextWithStrategy';\r\n\r\n/**\r\n * Delete the word that is left of the cursor, as well as any spaces or\r\n * punctuation after the word.\r\n */\r\nfunction keyCommandBackspaceWord(editorState: EditorState): EditorState {\r\n  const afterRemoval = removeTextWithStrategy(\r\n    editorState,\r\n    strategyState => {\r\n      const selection = strategyState.getSelection();\r\n      const offset = selection.getStartOffset();\r\n      // If there are no words before the cursor, remove the preceding newline.\r\n      if (offset === 0) {\r\n        return moveSelectionBackward(strategyState, 1);\r\n      }\r\n      const key = selection.getStartKey();\r\n      const content = strategyState.getCurrentContent();\r\n      const text = content\r\n        .getBlockForKey(key)\r\n        .getText()\r\n        .slice(0, offset);\r\n      const toRemove = DraftRemovableWord.getBackward(text);\r\n      return moveSelectionBackward(strategyState, toRemove.length || 1);\r\n    },\r\n    'backward',\r\n  );\r\n\r\n  if (afterRemoval === editorState.getCurrentContent()) {\r\n    return editorState;\r\n  }\r\n\r\n  return EditorState.push(editorState, afterRemoval, 'remove-range');\r\n}\r\n\r\nexport default  keyCommandBackspaceWord;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  EditorState from '../../../../model/immutable/EditorState';\r\nimport  SelectionState from '../../../../model/immutable/SelectionState';\r\n\r\nimport warning from 'fbjs/lib/warning';\r\n\r\n/**\r\n * Given a collapsed selection, move the focus `maxDistance` forward within\r\n * the selected block. If the selection will go beyond the end of the block,\r\n * move focus to the start of the next block, but no further.\r\n *\r\n * This function is not Unicode-aware, so surrogate pairs will be treated\r\n * as having length 2.\r\n */\r\nfunction moveSelectionForward(\r\n  editorState: EditorState,\r\n  maxDistance: number,\r\n): SelectionState {\r\n  const selection = editorState.getSelection();\r\n  // Should eventually make this an invariant\r\n  warning(\r\n    selection.isCollapsed(),\r\n    'moveSelectionForward should only be called with a collapsed SelectionState',\r\n  );\r\n  const key = selection.getStartKey();\r\n  const offset = selection.getStartOffset();\r\n  const content = editorState.getCurrentContent();\r\n\r\n  let focusKey = key;\r\n  let focusOffset;\r\n\r\n  const block = content.getBlockForKey(key);\r\n\r\n  if (maxDistance > block.getText().length - offset) {\r\n    focusKey = content.getKeyAfter(key);\r\n    focusOffset = 0;\r\n  } else {\r\n    focusOffset = offset + maxDistance;\r\n  }\r\n\r\n  return selection.merge({focusKey, focusOffset}) as any;\r\n}\r\n\r\nexport default  moveSelectionForward;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport DraftRemovableWord from '../../../../model/modifier/DraftRemovableWord';\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\n\r\nimport moveSelectionForward from './moveSelectionForward';\r\nimport removeTextWithStrategy from './removeTextWithStrategy';\r\n\r\n/**\r\n * Delete the word that is right of the cursor, as well as any spaces or\r\n * punctuation before the word.\r\n */\r\nfunction keyCommandDeleteWord(editorState: EditorState): EditorState {\r\n  const afterRemoval = removeTextWithStrategy(\r\n    editorState,\r\n    strategyState => {\r\n      const selection = strategyState.getSelection();\r\n      const offset = selection.getStartOffset();\r\n      const key = selection.getStartKey();\r\n      const content = strategyState.getCurrentContent();\r\n      const text = content\r\n        .getBlockForKey(key)\r\n        .getText()\r\n        .slice(offset);\r\n      const toRemove = DraftRemovableWord.getForward(text);\r\n\r\n      // If there are no words in front of the cursor, remove the newline.\r\n      return moveSelectionForward(strategyState, toRemove.length || 1);\r\n    },\r\n    'forward',\r\n  );\r\n\r\n  if (afterRemoval === editorState.getCurrentContent()) {\r\n    return editorState;\r\n  }\r\n\r\n  return EditorState.push(editorState, afterRemoval, 'remove-range');\r\n}\r\n\r\nexport default  keyCommandDeleteWord;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport DraftModifier from '../../../../model/modifier/DraftModifier';\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\n\r\nfunction keyCommandInsertNewline(editorState: EditorState): EditorState {\r\n  const contentState = DraftModifier.splitBlock(\r\n    editorState.getCurrentContent(),\r\n    editorState.getSelection(),\r\n  );\r\n  return EditorState.push(editorState, contentState, 'split-block');\r\n}\r\n\r\nexport default  keyCommandInsertNewline;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\n\r\n/**\r\n * See comment for `moveSelectionToStartOfBlock`.\r\n */\r\nfunction keyCommandMoveSelectionToEndOfBlock(\r\n  editorState: EditorState,\r\n): EditorState {\r\n  const selection = editorState.getSelection();\r\n  const endKey = selection.getEndKey();\r\n  const content = editorState.getCurrentContent();\r\n  const textLength = content.getBlockForKey(endKey).getLength();\r\n  return EditorState.set(editorState, {\r\n    selection: selection.merge({\r\n      anchorKey: endKey,\r\n      anchorOffset: textLength,\r\n      focusKey: endKey,\r\n      focusOffset: textLength,\r\n      isBackward: false,\r\n    }),\r\n    forceSelection: true,\r\n  });\r\n}\r\n\r\nexport default  keyCommandMoveSelectionToEndOfBlock;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\n\r\n/**\r\n * Collapse selection at the start of the first selected block. This is used\r\n * for Firefox versions that attempt to navigate forward/backward instead of\r\n * moving the cursor. Other browsers are able to move the cursor natively.\r\n */\r\nfunction keyCommandMoveSelectionToStartOfBlock(\r\n  editorState: EditorState,\r\n): EditorState {\r\n  const selection = editorState.getSelection();\r\n  const startKey = selection.getStartKey();\r\n  return EditorState.set(editorState, {\r\n    selection: selection.merge({\r\n      anchorKey: startKey,\r\n      anchorOffset: 0,\r\n      focusKey: startKey,\r\n      focusOffset: 0,\r\n      isBackward: false,\r\n    }),\r\n    forceSelection: true,\r\n  });\r\n}\r\n\r\nexport default  keyCommandMoveSelectionToStartOfBlock;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\nimport UnicodeUtils from 'fbjs/lib/UnicodeUtils';\r\n\r\nimport moveSelectionForward from './moveSelectionForward';\r\nimport removeTextWithStrategy from './removeTextWithStrategy';\r\n\r\n/**\r\n * Remove the selected range. If the cursor is collapsed, remove the following\r\n * character. This operation is Unicode-aware, so removing a single character\r\n * will remove a surrogate pair properly as well.\r\n */\r\nfunction keyCommandPlainDelete(editorState: EditorState): EditorState {\r\n  const afterRemoval = removeTextWithStrategy(\r\n    editorState,\r\n    strategyState => {\r\n      const selection = strategyState.getSelection();\r\n      const content = strategyState.getCurrentContent();\r\n      const key = selection.getAnchorKey();\r\n      const offset = selection.getAnchorOffset();\r\n      const charAhead = content.getBlockForKey(key).getText()[offset];\r\n      return moveSelectionForward(\r\n        strategyState,\r\n        charAhead ? UnicodeUtils.getUTF16Length(charAhead, 0) : 1,\r\n      );\r\n    },\r\n    'forward',\r\n  );\r\n\r\n  if (afterRemoval === editorState.getCurrentContent()) {\r\n    return editorState;\r\n  }\r\n\r\n  const selection = editorState.getSelection();\r\n\r\n  return EditorState.push(\r\n    editorState,\r\n    afterRemoval.set('selectionBefore', selection) as any,\r\n    selection.isCollapsed() ? 'delete-character' : 'remove-range',\r\n  );\r\n}\r\n\r\nexport default  keyCommandPlainDelete;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport DraftModifier from '../../../../model/modifier/DraftModifier';\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\n\r\nimport getContentStateFragment from '../../../../model/transaction/getContentStateFragment';\r\n\r\n/**\r\n * Transpose the characters on either side of a collapsed cursor, or\r\n * if the cursor is at the end of the block, transpose the last two\r\n * characters.\r\n */\r\nfunction keyCommandTransposeCharacters(editorState: EditorState): EditorState {\r\n  const selection = editorState.getSelection();\r\n  if (!selection.isCollapsed()) {\r\n    return editorState;\r\n  }\r\n\r\n  const offset = selection.getAnchorOffset();\r\n  if (offset === 0) {\r\n    return editorState;\r\n  }\r\n\r\n  const blockKey = selection.getAnchorKey();\r\n  const content = editorState.getCurrentContent();\r\n  const block = content.getBlockForKey(blockKey);\r\n  const length = block.getLength();\r\n\r\n  // Nothing to transpose if there aren't two characters.\r\n  if (length <= 1) {\r\n    return editorState;\r\n  }\r\n\r\n  let removalRange;\r\n  let finalSelection;\r\n\r\n  if (offset === length) {\r\n    // The cursor is at the end of the block. Swap the last two characters.\r\n    removalRange = selection.set('anchorOffset', offset - 1);\r\n    finalSelection = selection;\r\n  } else {\r\n    removalRange = selection.set('focusOffset', offset + 1);\r\n    finalSelection = removalRange.set('anchorOffset', offset + 1);\r\n  }\r\n\r\n  // Extract the character to move as a fragment. This preserves its\r\n  // styling and entity, if any.\r\n  const movedFragment = getContentStateFragment(content, removalRange);\r\n  const afterRemoval = DraftModifier.removeRange(\r\n    content,\r\n    removalRange,\r\n    'backward',\r\n  );\r\n\r\n  // After the removal, the insertion target is one character back.\r\n  const selectionAfter = afterRemoval.getSelectionAfter();\r\n  const targetOffset = selectionAfter.getAnchorOffset() - 1;\r\n  const targetRange:any = selectionAfter.merge({\r\n    anchorOffset: targetOffset,\r\n    focusOffset: targetOffset,\r\n  });\r\n\r\n  const afterInsert = DraftModifier.replaceWithFragment(\r\n    afterRemoval,\r\n    targetRange,\r\n    movedFragment,\r\n  );\r\n\r\n  const newEditorState = EditorState.push(\r\n    editorState,\r\n    afterInsert,\r\n    'insert-fragment',\r\n  );\r\n\r\n  return EditorState.acceptSelection(newEditorState, finalSelection);\r\n}\r\n\r\nexport default  keyCommandTransposeCharacters;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport EditorState from '../../../../model/immutable/EditorState';\r\n\r\nfunction keyCommandUndo(\r\n  e: KeyboardEvent,\r\n  editorState: EditorState,\r\n  updateFn: (editorState: EditorState) => void,\r\n): void {\r\n  const undoneState = EditorState.undo(editorState);\r\n\r\n  // If the last change to occur was a spellcheck change, allow the undo\r\n  // event to fall through to the browser. This allows the browser to record\r\n  // the unwanted change, which should soon lead it to learn not to suggest\r\n  // the correction again.\r\n  if (editorState.getLastChangeType() === 'spellcheck-change') {\r\n    const nativelyRenderedContent = undoneState.getCurrentContent();\r\n    updateFn(EditorState.set(undoneState, {nativelyRenderedContent}));\r\n    return;\r\n  }\r\n\r\n  // Otheriwse, manage the undo behavior manually.\r\n  e.preventDefault();\r\n  if (!editorState.getNativelyRenderedContent()) {\r\n    updateFn(undoneState);\r\n    return;\r\n  }\r\n\r\n  // Trigger a re-render with the current content state to ensure that the\r\n  // component tree has up-to-date props for comparison.\r\n  updateFn(EditorState.set(editorState, {nativelyRenderedContent: null}));\r\n\r\n  // Wait to ensure that the re-render has occurred before performing\r\n  // the undo action.\r\n  setTimeout(() => {\r\n    updateFn(undoneState);\r\n  }, 0);\r\n}\r\n\r\nexport default  keyCommandUndo;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\nimport {DraftEditorCommand} from '../../../model/constants/DraftEditorCommand';\r\n\r\nimport DraftModifier from '../../../model/modifier/DraftModifier';\r\nimport EditorState from '../../../model/immutable/EditorState';\r\n\r\nimport KeyBindingUtil from '../../utils/KeyBindingUtil';\r\nimport Keys from 'fbjs/lib/Keys'\r\nimport SecondaryClipboard from './commands/SecondaryClipboard';\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nimport isEventHandled from '../../utils/isEventHandled';\r\nimport keyCommandBackspaceToStartOfLine from './commands/keyCommandBackspaceToStartOfLine';\r\nimport keyCommandBackspaceWord from './commands/keyCommandBackspaceWord';\r\nimport keyCommandDeleteWord from './commands/keyCommandDeleteWord';\r\nimport keyCommandInsertNewline from './commands/keyCommandInsertNewline';\r\nimport keyCommandMoveSelectionToEndOfBlock from './commands/keyCommandMoveSelectionToEndOfBlock';\r\nimport keyCommandMoveSelectionToStartOfBlock from './commands/keyCommandMoveSelectionToStartOfBlock';\r\nimport keyCommandPlainBackspace from './commands/keyCommandPlainBackspace';\r\nimport keyCommandPlainDelete from './commands/keyCommandPlainDelete';\r\nimport keyCommandTransposeCharacters from './commands/keyCommandTransposeCharacters';\r\nimport keyCommandUndo from './commands/keyCommandUndo';\r\n\r\nconst {isOptionKeyCommand} = KeyBindingUtil;\r\nconst isChrome = UserAgent.isBrowser('Chrome');\r\n\r\n/**\r\n * Map a `DraftEditorCommand` command value to a corresponding function.\r\n */\r\nfunction onKeyCommand(\r\n  command: DraftEditorCommand | string,\r\n  editorState: EditorState,\r\n  e: any,\r\n): EditorState {\r\n  switch (command) {\r\n    case 'redo':\r\n      return EditorState.redo(editorState);\r\n    case 'delete':\r\n      return keyCommandPlainDelete(editorState);\r\n    case 'delete-word':\r\n      return keyCommandDeleteWord(editorState);\r\n    case 'backspace':\r\n      return keyCommandPlainBackspace(editorState);\r\n    case 'backspace-word':\r\n      return keyCommandBackspaceWord(editorState);\r\n    case 'backspace-to-start-of-line':\r\n      return keyCommandBackspaceToStartOfLine(editorState, e);\r\n    case 'split-block':\r\n      return keyCommandInsertNewline(editorState);\r\n    case 'transpose-characters':\r\n      return keyCommandTransposeCharacters(editorState);\r\n    case 'move-selection-to-start-of-block':\r\n      return keyCommandMoveSelectionToStartOfBlock(editorState);\r\n    case 'move-selection-to-end-of-block':\r\n      return keyCommandMoveSelectionToEndOfBlock(editorState);\r\n    case 'secondary-cut':\r\n      return SecondaryClipboard.cut(editorState);\r\n    case 'secondary-paste':\r\n      return SecondaryClipboard.paste(editorState);\r\n    default:\r\n      return editorState;\r\n  }\r\n}\r\n\r\n/**\r\n * Intercept keydown behavior to handle keys and commands manually, if desired.\r\n *\r\n * Keydown combinations may be mapped to `DraftCommand` values, which may\r\n * correspond to command functions that modify the editor or its contents.\r\n *\r\n * See `getDefaultKeyBinding` for defaults. Alternatively, the top-level\r\n * component may provide a custom mapping via the `keyBindingFn` prop.\r\n */\r\nfunction editOnKeyDown(\r\n  editor: DraftEditor,\r\n  e: any,\r\n): void {\r\n  const keyCode = e.which;\r\n  const editorState = editor._latestEditorState;\r\n  function callDeprecatedHandler(\r\n    handlerName:\r\n      | 'onDownArrow'\r\n      | 'onEscape'\r\n      | 'onLeftArrow'\r\n      | 'onRightArrow'\r\n      | 'onTab'\r\n      | 'onUpArrow',\r\n  ): boolean {\r\n    const deprecatedHandler = editor.props[handlerName];\r\n    if (deprecatedHandler) {\r\n      deprecatedHandler(e);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  switch (keyCode) {\r\n    case Keys.RETURN:\r\n      e.preventDefault();\r\n      // The top-level component may manually handle newline insertion. If\r\n      // no special handling is performed, fall through to command handling.\r\n      if (\r\n        editor.props.handleReturn &&\r\n        isEventHandled(editor.props.handleReturn(e, editorState))\r\n      ) {\r\n        return;\r\n      }\r\n      break;\r\n    case Keys.ESC:\r\n      e.preventDefault();\r\n      if (callDeprecatedHandler('onEscape')) {\r\n        return;\r\n      }\r\n      break;\r\n    case Keys.TAB:\r\n      if (callDeprecatedHandler('onTab')) {\r\n        return;\r\n      }\r\n      break;\r\n    case Keys.UP:\r\n      if (callDeprecatedHandler('onUpArrow')) {\r\n        return;\r\n      }\r\n      break;\r\n    case Keys.RIGHT:\r\n      if (callDeprecatedHandler('onRightArrow')) {\r\n        return;\r\n      }\r\n      break;\r\n    case Keys.DOWN:\r\n      if (callDeprecatedHandler('onDownArrow')) {\r\n        return;\r\n      }\r\n      break;\r\n    case Keys.LEFT:\r\n      if (callDeprecatedHandler('onLeftArrow')) {\r\n        return;\r\n      }\r\n      break;\r\n    case Keys.SPACE:\r\n      // Prevent Chrome on OSX behavior where option + space scrolls.\r\n      if (isChrome && isOptionKeyCommand(e)) {\r\n        e.preventDefault();\r\n      }\r\n  }\r\n\r\n  const command = editor.props.keyBindingFn(e);\r\n\r\n  // If no command is specified, allow keydown event to continue.\r\n  if (command == null || command === '') {\r\n    if (keyCode === Keys.SPACE && isChrome && isOptionKeyCommand(e)) {\r\n      // The default keydown event has already been prevented in order to stop\r\n      // Chrome from scrolling. Insert a nbsp into the editor as OSX would for\r\n      // other browsers.\r\n      const contentState = DraftModifier.replaceText(\r\n        editorState.getCurrentContent(),\r\n        editorState.getSelection(),\r\n        '\\u00a0',\r\n      );\r\n      editor.update(\r\n        EditorState.push(editorState, contentState, 'insert-characters'),\r\n      );\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (command === 'undo') {\r\n    // Since undo requir es some special updating behavior to keep the editor\r\n    // in sync, handle it separately.\r\n    keyCommandUndo(e, editorState, editor.update);\r\n    return;\r\n  }\r\n\r\n  // At this point, we know that we're handling a command of some kind, so\r\n  // we don't want to insert a character following the keydown.\r\n  e.preventDefault();\r\n\r\n  // Allow components higher up the tree to handle the command first.\r\n  if (\r\n    editor.props.handleKeyCommand &&\r\n    isEventHandled(\r\n      editor.props.handleKeyCommand(command, editorState, e.timeStamp),\r\n    )\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  const newState = onKeyCommand(command, editorState, e);\r\n  if (newState !== editorState) {\r\n    editor.update(newState);\r\n  }\r\n}\r\n\r\nexport default  editOnKeyDown;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\nconst isOldIE = UserAgent.isBrowser('IE <= 9');\r\n\r\n// Provides a dom node that will not execute scripts\r\n// https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation.createHTMLDocument\r\n// https://developer.mozilla.org/en-US/Add-ons/Code_snippets/HTML_to_DOM\r\n\r\nfunction getSafeBodyFromHTML(html: string):  Element {\r\n  let doc;\r\n  let root = null;\r\n  // Provides a safe context\r\n  if (\r\n    !isOldIE &&\r\n    document.implementation &&\r\n    document.implementation.createHTMLDocument\r\n  ) {\r\n    doc = document.implementation.createHTMLDocument('foo');\r\n    invariant(doc.documentElement, 'Missing doc.documentElement');\r\n    doc.documentElement.innerHTML = html;\r\n    root = doc.getElementsByTagName('body')[0];\r\n  }\r\n  return root;\r\n}\r\n\r\nexport default  getSafeBodyFromHTML;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\nimport isElement from './isElement';\r\n\r\nfunction isHTMLAnchorElement(node: Node): boolean {\r\n  if (!node || !node.ownerDocument) {\r\n    return false;\r\n  }\r\n  return isElement(node) && node.nodeName === 'A';\r\n}\r\n\r\nexport default  isHTMLAnchorElement;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\nimport isElement from './isElement';\r\n\r\nfunction isHTMLImageElement(node: Node): boolean {\r\n  if (!node || !node.ownerDocument) {\r\n    return false;\r\n  }\r\n  return isElement(node) && node.nodeName === 'IMG';\r\n}\r\n\r\nexport default  isHTMLImageElement;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport  {DraftBlockRenderMap} from '../immutable/DraftBlockRenderMap';\r\nimport  {DraftInlineStyle} from '../immutable/DraftInlineStyle';\r\nimport {EntityMap} from '../immutable/EntityMap';\r\n\r\nimport CharacterMetadata from '../immutable/CharacterMetadata';\r\nimport ContentBlock from '../immutable/ContentBlock';\r\nimport ContentBlockNode from '../immutable/ContentBlockNode';\r\n\r\nimport DefaultDraftBlockRenderMap  from '../immutable/DefaultDraftBlockRenderMap';\r\nimport DraftEntity from '../entity/DraftEntity';\r\nimport URI from 'fbjs/lib/URI'\r\nimport cx from 'fbjs/lib/cx'\r\n\r\nimport generateRandomKey from '../keys/generateRandomKey';\r\nimport getSafeBodyFromHTML from '../paste/getSafeBodyFromHTML';\r\nimport gkx from '../../stubs/gkx';\r\nimport {List, Map, OrderedSet} from 'immutable';\r\n\r\nimport isHTMLAnchorElement from '../../component/utils/isHTMLAnchorElement';\r\nimport isHTMLBRElement from '../../component/utils/isHTMLBRElement';\r\nimport isHTMLElement from '../../component/utils/isHTMLElement';\r\nimport isHTMLImageElement from '../../component/utils/isHTMLImageElement';\r\n\r\nconst experimentalTreeDataSupport = gkx('draft_tree_data_support');\r\n\r\nconst NBSP = '&nbsp;';\r\nconst SPACE = ' ';\r\n\r\n// used for replacing characters in HTML\r\nconst REGEX_CR = new RegExp('\\r', 'g');\r\nconst REGEX_LF = new RegExp('\\n', 'g');\r\nconst REGEX_LEADING_LF = new RegExp('^\\n', 'g');\r\nconst REGEX_NBSP = new RegExp(NBSP, 'g');\r\nconst REGEX_CARRIAGE = new RegExp('&#13;?', 'g');\r\nconst REGEX_ZWS = new RegExp('&#8203;?', 'g');\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\r\nconst boldValues = ['bold', 'bolder', '500', '600', '700', '800', '900'];\r\nconst notBoldValues = ['light', 'lighter', '100', '200', '300', '400'];\r\n\r\nconst anchorAttr = ['className', 'href', 'rel', 'target', 'title'];\r\nconst imgAttr = ['alt', 'className', 'height', 'src', 'width'];\r\n\r\nconst knownListItemDepthClasses = {\r\n  [cx('public/DraftStyleDefault/depth0')]: 0,\r\n  [cx('public/DraftStyleDefault/depth1')]: 1,\r\n  [cx('public/DraftStyleDefault/depth2')]: 2,\r\n  [cx('public/DraftStyleDefault/depth3')]: 3,\r\n  [cx('public/DraftStyleDefault/depth4')]: 4,\r\n};\r\n\r\nconst HTMLTagToRawInlineStyleMap: Map<string, string> = Map({\r\n  b: 'BOLD',\r\n  code: 'CODE',\r\n  del: 'STRIKETHROUGH',\r\n  em: 'ITALIC',\r\n  i: 'ITALIC',\r\n  s: 'STRIKETHROUGH',\r\n  strike: 'STRIKETHROUGH',\r\n  strong: 'BOLD',\r\n  u: 'UNDERLINE',\r\n  mark: 'HIGHLIGHT',\r\n});\r\n\r\ntype BlockTypeMap = Map<string, string | Array<string>>;\r\n\r\n/**\r\n * Build a mapping from HTML tags to draftjs block types\r\n * out of a BlockRenderMap.\r\n *\r\n * The BlockTypeMap for the default BlockRenderMap looks like this:\r\n *   Map({\r\n *     h1: 'header-one',\r\n *     h2: 'header-two',\r\n *     h3: 'header-three',\r\n *     h4: 'header-four',\r\n *     h5: 'header-five',\r\n *     h6: 'header-six',\r\n *     blockquote: 'blockquote',\r\n *     figure: 'atomic',\r\n *     pre: ['code-block'],\r\n *     div: 'unstyled',\r\n *     p: 'unstyled',\r\n *     li: ['ordered-list-item', 'unordered-list-item'],\r\n *   })\r\n */\r\nconst buildBlockTypeMap = (\r\n  blockRenderMap: DraftBlockRenderMap,\r\n): BlockTypeMap => {\r\n  const blockTypeMap = {};\r\n\r\n  blockRenderMap.mapKeys((blockType, desc) => {\r\n    const elements = [desc.element];\r\n    if (desc.aliasedElements !== undefined) {\r\n      elements.push(...desc.aliasedElements);\r\n    }\r\n    elements.forEach(element => {\r\n      if (blockTypeMap[element] === undefined) {\r\n        blockTypeMap[element] = blockType;\r\n      } else if (typeof blockTypeMap[element] === 'string') {\r\n        blockTypeMap[element] = [blockTypeMap[element], blockType];\r\n      } else {\r\n        blockTypeMap[element].push(blockType);\r\n      }\r\n    });\r\n  });\r\n\r\n  return Map(blockTypeMap);\r\n};\r\n\r\n/**\r\n * If we're pasting from one DraftEditor to another we can check to see if\r\n * existing list item depth classes are being used and preserve this style\r\n */\r\nconst getListItemDepth = (node: HTMLElement, depth: number = 0): number => {\r\n  Object.keys(knownListItemDepthClasses).some(depthClass => {\r\n    if (node.classList.contains(depthClass)) {\r\n      depth = knownListItemDepthClasses[depthClass];\r\n    }\r\n  });\r\n  return depth;\r\n};\r\n\r\n/**\r\n * Return true if the provided HTML Element can be used to build a\r\n * Draftjs-compatible link.\r\n */\r\nconst isValidAnchor = (node: Node) => {\r\n  if (!isHTMLAnchorElement(node)) {\r\n    return false;\r\n  }\r\n  const anchorNode: HTMLAnchorElement = (node as any);\r\n  return !!(\r\n    anchorNode.href &&\r\n    (anchorNode.protocol === 'http:' ||\r\n      anchorNode.protocol === 'https:' ||\r\n      anchorNode.protocol === 'mailto:')\r\n  );\r\n};\r\n\r\n/**\r\n * Return true if the provided HTML Element can be used to build a\r\n * Draftjs-compatible image.\r\n */\r\nconst isValidImage = (node: Node): boolean => {\r\n  if (!isHTMLImageElement(node)) {\r\n    return false;\r\n  }\r\n  const imageNode: HTMLImageElement = node as any;\r\n  return !!(\r\n    imageNode.attributes.getNamedItem('src') &&\r\n    imageNode.attributes.getNamedItem('src').value\r\n  );\r\n};\r\n\r\n/**\r\n * Try to guess the inline style of an HTML element based on its css\r\n * styles (font-weight, font-style and text-decoration).\r\n */\r\nconst styleFromNodeAttributes = (node: Node): DraftInlineStyle => {\r\n  const style:any = OrderedSet();\r\n\r\n  if (!isHTMLElement(node)) {\r\n    return style as any;\r\n  }\r\n\r\n  const htmlElement: HTMLElement = node as any;\r\n  const fontWeight = htmlElement.style.fontWeight;\r\n  const fontStyle = htmlElement.style.fontStyle;\r\n  const textDecoration = htmlElement.style.textDecoration;\r\n\r\n  return style.withMutations(style => {\r\n    if (boldValues.indexOf(fontWeight) >= 0) {\r\n      style.add('BOLD');\r\n    } else if (notBoldValues.indexOf(fontWeight) >= 0) {\r\n      style.remove('BOLD');\r\n    }\r\n\r\n    if (fontStyle === 'italic') {\r\n      style.add('ITALIC');\r\n    } else if (fontStyle === 'normal') {\r\n      style.remove('ITALIC');\r\n    }\r\n\r\n    if (textDecoration === 'underline') {\r\n      style.add('UNDERLINE');\r\n    }\r\n    if (textDecoration === 'line-through') {\r\n      style.add('STRIKETHROUGH');\r\n    }\r\n    if (textDecoration === 'none') {\r\n      style.remove('UNDERLINE');\r\n      style.remove('STRIKETHROUGH');\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Determine if a nodeName is a list type, 'ul' or 'ol'\r\n */\r\nconst isListNode = (nodeName:string): boolean =>\r\n  nodeName === 'ul' || nodeName === 'ol';\r\n\r\n/**\r\n *  ContentBlockConfig is a mutable data structure that holds all\r\n *  the information requi red to build a ContentBlock and an array of\r\n *  all the child nodes (childConfigs).\r\n *  It is being used a temporary data structure by the\r\n *  ContentBlocksBuilder class.\r\n */\r\ntype ContentBlockConfig = {\r\n  characterList: List<CharacterMetadata>,\r\n  data?: Map<any, any>,\r\n  depth?: number,\r\n  key: string,\r\n  text: string,\r\n  type: string,\r\n  children: List<string>,\r\n  parent: string,\r\n  prevSibling: string,\r\n  nextSibling:string,\r\n  childConfigs: Array<ContentBlockConfig>,\r\n};\r\n\r\n/**\r\n * ContentBlocksBuilder builds a list of ContentBlocks and an Entity Map\r\n * out of one (or several) HTMLElement(s).\r\n *\r\n * The algorithm has two passes: first it builds a tree of ContentBlockConfigs\r\n * by walking through the HTML nodes and their children, then it walks the\r\n * ContentBlockConfigs tree to compute parents/siblings and create\r\n * the actual ContentBlocks.\r\n *\r\n * Typical usage is:\r\n *     new ContentBlocksBuilder()\r\n *        .addDOMNode(someHTMLNode)\r\n *        .addDOMNode(someOtherHTMLNode)\r\n *       .getContentBlocks();\r\n *\r\n */\r\nclass ContentBlocksBuilder {\r\n  // Most of the method in the class depend on the state of the content builder\r\n  // (i.e. currentBlockType, currentDepth, currentEntity etc.). Though it may\r\n  // be confusing at first, it made the code simpler than the alternative which\r\n  // is to pass those values around in every call.\r\n\r\n  // The following attributes are used to accumulate text and styles\r\n  // as we are walking the HTML node tree.\r\n  characterList: List<CharacterMetadata> = List();\r\n  currentBlockType: string = 'unstyled';\r\n  currentDepth: number = 0;\r\n  currentEntity: string = null;\r\n  currentStyle: DraftInlineStyle = OrderedSet();\r\n  currentText: string = '';\r\n  wrapper: string = null;\r\n\r\n  // Describes the future ContentState as a tree of content blocks\r\n  blockConfigs: Array<ContentBlockConfig> = [];\r\n\r\n  // The content blocks generated from the blockConfigs\r\n  contentBlocks: Array<BlockNodeRecord> = [];\r\n\r\n  // Entity map use to store links and images found in the HTML nodes\r\n  entityMap: EntityMap = DraftEntity;\r\n\r\n  // Map HTML tags to draftjs block types and disambiguation function\r\n  blockTypeMap: BlockTypeMap;\r\n  disambiguate: any;\r\n\r\n  constructor(\r\n    blockTypeMap: BlockTypeMap,\r\n    disambiguate: any\r\n  ) {\r\n    this.clear();\r\n    this.blockTypeMap = blockTypeMap;\r\n    this.disambiguate = disambiguate;\r\n  }\r\n\r\n  /**\r\n   * Clear the internal state of the ContentBlocksBuilder\r\n   */\r\n  clear(): void {\r\n    this.characterList = List();\r\n    this.blockConfigs = [];\r\n    this.currentBlockType = 'unstyled';\r\n    this.currentDepth = 0;\r\n    this.currentEntity = null;\r\n    this.currentStyle = OrderedSet();\r\n    this.currentText = '';\r\n    this.entityMap = DraftEntity;\r\n    this.wrapper = null;\r\n    this.contentBlocks = [];\r\n  }\r\n\r\n  /**\r\n   * Add an HTMLElement to the ContentBlocksBuilder\r\n   */\r\n  addDOMNode(node: Node): ContentBlocksBuilder {\r\n    this.contentBlocks = [];\r\n    this.currentDepth = 0;\r\n    // Converts the HTML node to block config\r\n    this.blockConfigs.push(...this._toBlockConfigs([node]));\r\n\r\n    // There might be some left over text in the builder's\r\n    // internal state, if so make a ContentBlock out of it.\r\n    this._trimCurrentText();\r\n    if (this.currentText !== '') {\r\n      this.blockConfigs.push(this._makeBlockConfig());\r\n    }\r\n\r\n    // for chaining\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return the ContentBlocks and the EntityMap that corresponds\r\n   * to the previously added HTML nodes.\r\n   */\r\n  getContentBlocks(): {\r\n    contentBlocks: Array<BlockNodeRecord>,\r\n    entityMap: EntityMap,\r\n  } {\r\n    if (this.contentBlocks.length === 0) {\r\n      if (experimentalTreeDataSupport) {\r\n        this._toContentBlocks(this.blockConfigs);\r\n      } else {\r\n        this._toFlatContentBlocks(this.blockConfigs);\r\n      }\r\n    }\r\n    return {\r\n      contentBlocks: this.contentBlocks,\r\n      entityMap: this.entityMap,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Add a new inline style to the upcoming nodes.\r\n   */\r\n  addStyle(inlineStyle: DraftInlineStyle): void {\r\n    this.currentStyle = this.currentStyle.union(inlineStyle);\r\n  }\r\n\r\n  /**\r\n   * Remove a currently applied inline style.\r\n   */\r\n  removeStyle(inlineStyle: DraftInlineStyle): void {\r\n    this.currentStyle = this.currentStyle.subtract(inlineStyle);\r\n  }\r\n\r\n  // ***********************************WARNING******************************\r\n  // The methods below this line are private - don't call them directly.\r\n\r\n  /**\r\n   * Generate a new ContentBlockConfig out of the current internal state\r\n   * of the builder, then clears the internal state.\r\n   */\r\n  _makeBlockConfig(config?: any): ContentBlockConfig {\r\n    const key = config.key || generateRandomKey();\r\n    const block = {\r\n      key,\r\n      type: this.currentBlockType,\r\n      text: this.currentText,\r\n      characterList: this.characterList,\r\n      depth: this.currentDepth,\r\n      parent: null,\r\n      children: List(),\r\n      prevSibling: null,\r\n      nextSibling: null,\r\n      childConfigs: [],\r\n      ...config,\r\n    };\r\n    this.characterList = List();\r\n    this.currentBlockType = 'unstyled';\r\n    this.currentText = '';\r\n    return block;\r\n  }\r\n\r\n  /**\r\n   * Converts an array of HTML elements to a multi-root tree of content\r\n   * block configs. Some text content may be left in the builders internal\r\n   * state to enable chaining sucessive calls.\r\n   */\r\n  _toBlockConfigs(nodes: Array<Node>): Array<ContentBlockConfig> {\r\n    const blockConfigs = [];\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const node = nodes[i];\r\n      const nodeName = node.nodeName.toLowerCase();\r\n\r\n      if (nodeName === 'body' || isListNode(nodeName)) {\r\n        // body, ol and ul are 'block' type nodes so create a block config\r\n        // with the text accumulated so far (if any)\r\n        this._trimCurrentText();\r\n        if (this.currentText !== '') {\r\n          blockConfigs.push(this._makeBlockConfig());\r\n        }\r\n\r\n        // body, ol and ul nodes are ignored, but their children are inlined in\r\n        // the parent block config.\r\n        const wasCurrentDepth = this.currentDepth;\r\n        const wasWrapper = this.wrapper;\r\n        if (isListNode(nodeName)) {\r\n          this.wrapper = nodeName;\r\n          if (isListNode(wasWrapper)) {\r\n            this.currentDepth++;\r\n          }\r\n        }\r\n        blockConfigs.push(...this._toBlockConfigs(Array.from(node.childNodes)));\r\n        this.currentDepth = wasCurrentDepth;\r\n        this.wrapper = wasWrapper;\r\n        continue;\r\n      }\r\n\r\n      let blockType = this.blockTypeMap.get(nodeName);\r\n      if (blockType !== undefined) {\r\n        // 'block' type node means we need to create a block config\r\n        // with the text accumulated so far (if any)\r\n        this._trimCurrentText();\r\n        if (this.currentText !== '') {\r\n          blockConfigs.push(this._makeBlockConfig());\r\n        }\r\n\r\n        const wasCurrentDepth = this.currentDepth;\r\n        const wasWrapper = this.wrapper;\r\n        this.wrapper = nodeName === 'pre' ? 'pre' : this.wrapper;\r\n\r\n        if (typeof blockType !== 'string') {\r\n          blockType =\r\n            this.disambiguate(nodeName, this.wrapper) ||\r\n            blockType[0] ||\r\n            'unstyled';\r\n        }\r\n\r\n        if (\r\n          !experimentalTreeDataSupport &&\r\n          isHTMLElement(node) &&\r\n          (blockType === 'unordered-list-item' ||\r\n            blockType === 'ordered-list-item')\r\n        ) {\r\n          const htmlElement: HTMLElement = (node as any);\r\n          this.currentDepth = getListItemDepth(htmlElement, this.currentDepth);\r\n        }\r\n\r\n        const key = generateRandomKey();\r\n        const childConfigs = this._toBlockConfigs(Array.from(node.childNodes));\r\n        this._trimCurrentText();\r\n        blockConfigs.push(\r\n          this._makeBlockConfig({\r\n            key,\r\n            childConfigs,\r\n            type: blockType,\r\n          }),\r\n        );\r\n\r\n        this.currentDepth = wasCurrentDepth;\r\n        this.wrapper = wasWrapper;\r\n        continue;\r\n      }\r\n\r\n      if (nodeName === '#text') {\r\n        this._addTextNode(node);\r\n        continue;\r\n      }\r\n\r\n      if (nodeName === 'br') {\r\n        this._addBreakNode(node);\r\n        continue;\r\n      }\r\n\r\n      if (isValidImage(node)) {\r\n        this._addImgNode(node);\r\n        continue;\r\n      }\r\n\r\n      if (isValidAnchor(node)) {\r\n        this._addAnchorNode(node, blockConfigs);\r\n        continue;\r\n      }\r\n\r\n      const inlineStyle:any = HTMLTagToRawInlineStyleMap.has(nodeName)\r\n        ? OrderedSet.of(HTMLTagToRawInlineStyleMap.get(nodeName))\r\n        : OrderedSet();\r\n      const attributesStyle = styleFromNodeAttributes(node);\r\n\r\n      this.addStyle(inlineStyle);\r\n      this.addStyle(attributesStyle);\r\n\r\n      blockConfigs.push(...this._toBlockConfigs(Array.from(node.childNodes)));\r\n\r\n      this.removeStyle(attributesStyle);\r\n      this.removeStyle(inlineStyle);\r\n    }\r\n\r\n    return blockConfigs;\r\n  }\r\n\r\n  /**\r\n   * Append a string of text to the internal buffer.\r\n   */\r\n  _appendText(text: string) {\r\n    this.currentText += text;\r\n    const characterMetadata = CharacterMetadata.create({\r\n      style: this.currentStyle,\r\n      entity: this.currentEntity,\r\n    });\r\n    this.characterList = this.characterList.push(\r\n      ...Array(text.length).fill(characterMetadata),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Trim the text in the internal buffer.\r\n   */\r\n  _trimCurrentText() {\r\n    const l = this.currentText.length;\r\n    let begin = l - this.currentText.trimLeft().length;\r\n    let end = this.currentText.trimRight().length;\r\n\r\n    // We should not trim whitespaces for which an entity is defined.\r\n    let entity = this.characterList.findEntry(\r\n      characterMetadata => characterMetadata.getEntity() !== null,\r\n    );\r\n    begin = entity !== undefined ? Math.min(begin, entity[0]) : begin;\r\n\r\n    entity = this.characterList\r\n      .reverse()\r\n      .findEntry(characterMetadata => characterMetadata.getEntity() !== null);\r\n    end = entity !== undefined ? Math.max(end, l - entity[0]) : end;\r\n\r\n    if (begin > end) {\r\n      this.currentText = '';\r\n      this.characterList = List();\r\n    } else {\r\n      this.currentText = this.currentText.slice(begin, end);\r\n      this.characterList = this.characterList.slice(begin, end) as any;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add the content of an HTML text node to the internal state\r\n   */\r\n  _addTextNode(node: Node) {\r\n    let text = node.textContent;\r\n    const trimmedText = text.trim();\r\n\r\n    // If we are not in a pre block and the trimmed content is empty,\r\n    // normalize to a single space.\r\n    if (trimmedText === '' && this.wrapper !== 'pre') {\r\n      text = ' ';\r\n    }\r\n\r\n    if (this.wrapper !== 'pre') {\r\n      // Trim leading line feed, which is invisible in HTML\r\n      text = text.replace(REGEX_LEADING_LF, '');\r\n\r\n      // Can't use empty string because MSWord\r\n      text = text.replace(REGEX_LF, SPACE);\r\n    }\r\n\r\n    this._appendText(text);\r\n  }\r\n\r\n  _addBreakNode(node: Node) {\r\n    if (!isHTMLBRElement(node)) {\r\n      return;\r\n    }\r\n    this._appendText('\\n');\r\n  }\r\n\r\n  /**\r\n   * Add the content of an HTML img node to the internal state\r\n   */\r\n  _addImgNode(node: Node) {\r\n    if (!isHTMLImageElement(node)) {\r\n      return;\r\n    }\r\n    const image: HTMLImageElement = (node as any);\r\n    const entityConfig = {};\r\n\r\n    imgAttr.forEach(attr => {\r\n      const imageAttribute = image.getAttribute(attr);\r\n      if (imageAttribute) {\r\n        entityConfig[attr] = imageAttribute;\r\n      }\r\n    });\r\n\r\n    // TODO: T15530363 update this when we remove DraftEntity entirely\r\n    this.currentEntity = this.entityMap.__create(\r\n      'IMAGE',\r\n      'IMMUTABLE',\r\n      entityConfig,\r\n    );\r\n\r\n    // The child text node cannot just have a space or return as content (since\r\n    // we strip those out), unless the image is for presentation only.\r\n    // See https://github.com/facebook/draft-js/issues/231 for some context.\r\n    if (gkx('draftjs_fix_paste_for_img')) {\r\n      if (image.getAttribute('role') !== 'presentation') {\r\n        this._appendText('\\ud83d\\udcf7');\r\n      }\r\n    } else {\r\n      this._appendText('\\ud83d\\udcf7');\r\n    }\r\n\r\n    this.currentEntity = null;\r\n  }\r\n\r\n  /**\r\n   * Add the content of an HTML 'a' node to the internal state. Child nodes\r\n   * (if any) are converted to Block Configs and appended to the provided\r\n   * blockConfig array.\r\n   */\r\n  _addAnchorNode(node: Node, blockConfigs: Array<ContentBlockConfig>) {\r\n    // The check has already been made by isValidAnchor but\r\n    // we have to do it again to keep flow happy.\r\n    if (!isHTMLAnchorElement(node)) {\r\n      return;\r\n    }\r\n    const anchor: HTMLAnchorElement = (node as any);\r\n    const entityConfig:any = {};\r\n\r\n    anchorAttr.forEach(attr => {\r\n      const anchorAttribute = anchor.getAttribute(attr);\r\n      if (anchorAttribute) {\r\n        entityConfig[attr] = anchorAttribute;\r\n      }\r\n    });\r\n\r\n    entityConfig.url = new URI(anchor.href).toString();\r\n    // TODO: T15530363 update this when we remove DraftEntity completely\r\n    this.currentEntity = this.entityMap.__create(\r\n      'LINK',\r\n      'MUTABLE',\r\n      entityConfig || {},\r\n    );\r\n\r\n    blockConfigs.push(...this._toBlockConfigs(Array.from(node.childNodes)));\r\n    this.currentEntity = null;\r\n  }\r\n\r\n  /**\r\n   * Walk the BlockConfig tree, compute parent/children/siblings,\r\n   * and generate the corresponding ContentBlockNode\r\n   */\r\n  _toContentBlocks(\r\n    blockConfigs: Array<ContentBlockConfig>,\r\n    parent: string = null,\r\n  ) {\r\n    const l = blockConfigs.length - 1;\r\n    for (let i = 0; i <= l; i++) {\r\n      const config = blockConfigs[i];\r\n      config.parent = parent;\r\n      config.prevSibling = i > 0 ? blockConfigs[i - 1].key : null;\r\n      config.nextSibling = i < l ? blockConfigs[i + 1].key : null;\r\n      config.children = List(config.childConfigs.map(child => child.key));\r\n      this.contentBlocks.push(new ContentBlockNode({...config}));\r\n      this._toContentBlocks(config.childConfigs, config.key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove 'useless' container nodes from the block config hierarchy, by\r\n   * replacing them with their children.\r\n   */\r\n\r\n  _hoistContainersInBlockConfigs(\r\n    blockConfigs: Array<ContentBlockConfig>,\r\n  ): List<ContentBlockConfig> {\r\n    const hoisted:any = List(blockConfigs).flatMap(blockConfig => {\r\n      // Don't mess with useful blocks\r\n      if (blockConfig.type !== 'unstyled' || blockConfig.text !== '') {\r\n        return [blockConfig];\r\n      }\r\n\r\n      return this._hoistContainersInBlockConfigs(blockConfig.childConfigs);\r\n    });\r\n\r\n    return hoisted;\r\n  }\r\n\r\n  // ***********************************************************************\r\n  // The two methods below are used for backward compatibility when\r\n  // experimentalTreeDataSupport is disabled.\r\n\r\n  /**\r\n   * Same as _toContentBlocks but replaces nested blocks by their\r\n   * text content.\r\n   */\r\n  _toFlatContentBlocks(blockConfigs: Array<ContentBlockConfig>) {\r\n    const cleanConfigs = this._hoistContainersInBlockConfigs(blockConfigs);\r\n    cleanConfigs.forEach(config => {\r\n      const {text, characterList} = this._extractTextFromBlockConfigs(\r\n        config.childConfigs,\r\n      );\r\n      this.contentBlocks.push(\r\n        new ContentBlock({\r\n          ...config,\r\n          text: config.text + text,\r\n          characterList: config.characterList.concat(characterList) as any,\r\n        }),\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Extract the text and the associated inline styles form an\r\n   * array of content block configs.\r\n   */\r\n  _extractTextFromBlockConfigs(\r\n    blockConfigs: Array<ContentBlockConfig>,\r\n  ): {\r\n    text: string,\r\n    characterList: List<CharacterMetadata>,\r\n  } {\r\n    const l = blockConfigs.length - 1;\r\n    let text = '';\r\n    let characterList:any = List();\r\n    for (let i = 0; i <= l; i++) {\r\n      const config = blockConfigs[i];\r\n      text += config.text;\r\n      characterList = characterList.concat(config.characterList);\r\n      if (text !== '' && config.type !== 'unstyled') {\r\n        text += '\\n';\r\n        characterList = characterList.push(characterList.last());\r\n      }\r\n      const children = this._extractTextFromBlockConfigs(config.childConfigs);\r\n      text += children.text;\r\n      characterList = characterList.concat(children.characterList);\r\n    }\r\n    return {text, characterList};\r\n  }\r\n}\r\n\r\n/**\r\n * Converts an HTML string to an array of ContentBlocks and an EntityMap\r\n * suitable to initialize the internal state of a Draftjs component.\r\n */\r\nconst convertFromHTMLToContentBlocks = (\r\n  html: string,\r\n  DOMBuilder: Function = getSafeBodyFromHTML,\r\n  blockRenderMap = DefaultDraftBlockRenderMap,\r\n): {contentBlocks: Array<BlockNodeRecord>, entityMap: EntityMap} => {\r\n  // Be ABSOLUTELY SURE that the dom builder you pass here won't execute\r\n  // arbitrary code in whatever environment you're running this in. For an\r\n  // example of how we try to do this in-browser, see getSafeBodyFromHTML.\r\n\r\n  // Remove funky characters from the HTML string\r\n  html = html\r\n    .trim()\r\n    .replace(REGEX_CR, '')\r\n    .replace(REGEX_NBSP, SPACE)\r\n    .replace(REGEX_CARRIAGE, '')\r\n    .replace(REGEX_ZWS, '');\r\n\r\n  // Build a DOM tree out of the HTML string\r\n  const safeBody = DOMBuilder(html);\r\n  if (!safeBody) {\r\n    return null;\r\n  }\r\n\r\n  // Build a BlockTypeMap out of the BlockRenderMap\r\n  const blockTypeMap = buildBlockTypeMap(blockRenderMap);\r\n\r\n  // Select the proper block type for the cases where the blockRenderMap\r\n  // uses multiple block types for the same html tag.\r\n  const disambiguate = (tag: string, wrapper: string): string => {\r\n    if (tag === 'li') {\r\n      return wrapper === 'ol' ? 'ordered-list-item' : 'unordered-list-item';\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return new ContentBlocksBuilder(blockTypeMap, disambiguate)\r\n    .addDOMNode(safeBody)\r\n    .getContentBlocks();\r\n};\r\n\r\nexport default  convertFromHTMLToContentBlocks;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport { BlockNodeRecord } from '../immutable/BlockNodeRecord';\r\nimport CharacterMetadata from '../immutable/CharacterMetadata';\r\nimport { DraftBlockRenderMap } from '../immutable/DraftBlockRenderMap';\r\nimport { DraftBlockType } from '../constants/DraftBlockType';\r\nimport { EntityMap } from '../immutable/EntityMap';\r\n\r\nimport ContentBlock from '../immutable/ContentBlock';\r\nimport ContentBlockNode from '../immutable/ContentBlockNode';\r\n\r\nimport convertFromHTMLToContentBlocks from '../encoding/convertFromHTMLToContentBlocks';\r\nimport generateRandomKey from '../keys/generateRandomKey';\r\nimport getSafeBodyFromHTML from './getSafeBodyFromHTML';\r\nimport gkx from '../../stubs/gkx';\r\nimport { List, Repeat } from 'immutable';\r\nimport sanitizeDraftText from '../encoding/sanitizeDraftText';\r\n\r\nconst experimentalTreeDataSupport = gkx('draft_tree_data_support');\r\nconst ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\r\n\r\nconst DraftPasteProcessor = {\r\n    processHTML(html: string, blockRenderMap?: DraftBlockRenderMap): { contentBlocks: Array<BlockNodeRecord>; entityMap: EntityMap } {\r\n        return convertFromHTMLToContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\r\n    },\r\n\r\n    processText(textBlocks: Array<string>, character: CharacterMetadata, type: DraftBlockType): Array<BlockNodeRecord> {\r\n        return textBlocks.reduce((acc, textLine, index) => {\r\n            textLine = sanitizeDraftText(textLine);\r\n            const key = generateRandomKey();\r\n\r\n            let blockNodeConfig = {\r\n                key,\r\n                type,\r\n                text: textLine,\r\n                characterList: List(Repeat(character, textLine.length))\r\n            };\r\n\r\n            // next block updates previous block\r\n            if (experimentalTreeDataSupport && index !== 0) {\r\n                const prevSiblingIndex = index - 1;\r\n                // update previous block\r\n                const previousBlock = (acc[prevSiblingIndex] = acc[prevSiblingIndex].merge({\r\n                    nextSibling: key\r\n                }));\r\n                blockNodeConfig = {\r\n                    ...blockNodeConfig,\r\n                    prevSibling: previousBlock.getKey()\r\n                } as any;\r\n            }\r\n\r\n            acc.push(new ContentBlockRecord(blockNodeConfig));\r\n\r\n            return acc;\r\n        }, []);\r\n    }\r\n};\r\n\r\nexport default DraftPasteProcessor;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  SelectionState from '../immutable/SelectionState';\r\n\r\nfunction adjustBlockDepthForContentState(\r\n  contentState: ContentState,\r\n  selectionState: SelectionState,\r\n  adjustment: number,\r\n  maxDepth: number,\r\n): ContentState {\r\n  const startKey = selectionState.getStartKey();\r\n  const endKey = selectionState.getEndKey();\r\n  let blockMap = contentState.getBlockMap();\r\n  const blocks:any = blockMap\r\n    .toSeq()\r\n    .skipUntil((_, k) => k === startKey)\r\n    .takeUntil((_, k) => k === endKey)\r\n    .concat([[endKey, blockMap.get(endKey)]])\r\n    .map(block => {\r\n      let depth = block.getDepth() + adjustment;\r\n      depth = Math.max(0, Math.min(depth, maxDepth));\r\n      return block.set('depth', depth);\r\n    });\r\n\r\n  blockMap = blockMap.merge(blocks);\r\n\r\n  return contentState.merge({\r\n    blockMap,\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState,\r\n  }) as ContentState;\r\n}\r\n\r\nexport default  adjustBlockDepthForContentState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  ContentState from '../immutable/ContentState';\r\nimport  {DraftBlockType} from '../constants/DraftBlockType';\r\nimport {DraftEditorCommand} from '../constants/DraftEditorCommand';\r\nimport  {DataObjectForLink, RichTextUtils} from './RichTextUtils';\r\nimport  SelectionState from '../immutable/SelectionState';\r\nimport  URI from 'fbjs/lib/URI';\r\n\r\nimport DraftModifier from './DraftModifier';\r\nimport EditorState from '../immutable/EditorState';\r\n\r\nimport adjustBlockDepthForContentState from '../transaction/adjustBlockDepthForContentState';\r\nimport nullthrows from 'fbjs/lib/nullthrows';\r\n\r\nconst RichTextEditorUtil: RichTextUtils = {\r\n  currentBlockContainsLink: function(editorState: EditorState): boolean {\r\n    const selection = editorState.getSelection();\r\n    const contentState = editorState.getCurrentContent();\r\n    const entityMap = contentState.getEntityMap();\r\n    return contentState\r\n      .getBlockForKey(selection.getAnchorKey())\r\n      .getCharacterList()\r\n      .slice(selection.getStartOffset(), selection.getEndOffset())\r\n      .some(v => {\r\n        const entity = v.getEntity();\r\n        return !!entity && entityMap.__get(entity).getType() === 'LINK';\r\n      });\r\n  },\r\n\r\n  getCurrentBlockType: function(editorState: EditorState): DraftBlockType {\r\n    const selection = editorState.getSelection();\r\n    return editorState\r\n      .getCurrentContent()\r\n      .getBlockForKey(selection.getStartKey())\r\n      .getType();\r\n  },\r\n\r\n  getDataObjectForLinkURL: function(uri: URI): DataObjectForLink {\r\n    return {url: uri.toString()};\r\n  },\r\n\r\n  handleKeyCommand: function(\r\n    editorState: EditorState,\r\n    command: DraftEditorCommand | string\r\n  ): EditorState {\r\n    switch (command) {\r\n      case 'bold':\r\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\r\n      case 'italic':\r\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\r\n      case 'underline':\r\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\r\n      case 'code':\r\n        return RichTextEditorUtil.toggleCode(editorState);\r\n      case 'backspace':\r\n      case 'backspace-word':\r\n      case 'backspace-to-start-of-line':\r\n        return RichTextEditorUtil.onBackspace(editorState);\r\n      case 'delete':\r\n      case 'delete-word':\r\n      case 'delete-to-end-of-block':\r\n        return RichTextEditorUtil.onDelete(editorState);\r\n      default:\r\n        // they may have custom editor commands; ignore those\r\n        return null;\r\n    }\r\n  },\r\n\r\n  insertSoftNewline: function(editorState: EditorState): EditorState {\r\n    const contentState = DraftModifier.insertText(\r\n      editorState.getCurrentContent(),\r\n      editorState.getSelection(),\r\n      '\\n',\r\n      editorState.getCurrentInlineStyle(),\r\n      null,\r\n    );\r\n\r\n    const newEditorState = EditorState.push(\r\n      editorState,\r\n      contentState,\r\n      'insert-characters',\r\n    );\r\n\r\n    return EditorState.forceSelection(\r\n      newEditorState,\r\n      contentState.getSelectionAfter(),\r\n    );\r\n  },\r\n\r\n  /**\r\n   * For collapsed selections at the start of styled blocks, backspace should\r\n   * just remove the existing style.\r\n   */\r\n  onBackspace: function(editorState: EditorState): EditorState {\r\n    const selection = editorState.getSelection();\r\n    if (\r\n      !selection.isCollapsed() ||\r\n      selection.getAnchorOffset() ||\r\n      selection.getFocusOffset()\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    // First, try to remove a preceding atomic block.\r\n    const content = editorState.getCurrentContent();\r\n    const startKey = selection.getStartKey();\r\n    const blockBefore = content.getBlockBefore(startKey);\r\n\r\n    if (blockBefore && blockBefore.getType() === 'atomic') {\r\n      const blockMap = content.getBlockMap().delete(blockBefore.getKey());\r\n      const withoutAtomicBlock:any = content.merge({\r\n        blockMap,\r\n        selectionAfter: selection,\r\n      });\r\n      if (withoutAtomicBlock !== content) {\r\n        return EditorState.push(\r\n          editorState,\r\n          withoutAtomicBlock,\r\n          'remove-range',\r\n        );\r\n      }\r\n    }\r\n\r\n    // If that doesn't succeed, try to remove the current block style.\r\n    const withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(\r\n      editorState,\r\n    );\r\n\r\n    if (withoutBlockStyle) {\r\n      return EditorState.push(\r\n        editorState,\r\n        withoutBlockStyle,\r\n        'change-block-type',\r\n      );\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  onDelete: function(editorState: EditorState): EditorState {\r\n    const selection = editorState.getSelection();\r\n    if (!selection.isCollapsed()) {\r\n      return null;\r\n    }\r\n\r\n    const content = editorState.getCurrentContent();\r\n    const startKey = selection.getStartKey();\r\n    const block = content.getBlockForKey(startKey);\r\n    const length = block.getLength();\r\n\r\n    // The cursor is somewhere within the text. Behave normally.\r\n    if (selection.getStartOffset() < length) {\r\n      return null;\r\n    }\r\n\r\n    const blockAfter = content.getBlockAfter(startKey);\r\n\r\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\r\n      return null;\r\n    }\r\n\r\n    const atomicBlockTarget:any = selection.merge({\r\n      focusKey: blockAfter.getKey(),\r\n      focusOffset: blockAfter.getLength(),\r\n    });\r\n\r\n    const withoutAtomicBlock = DraftModifier.removeRange(\r\n      content,\r\n      atomicBlockTarget,\r\n      'forward',\r\n    );\r\n\r\n    if (withoutAtomicBlock !== content) {\r\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  onTab: function(\r\n    event: KeyboardEvent,\r\n    editorState: EditorState,\r\n    maxDepth: number,\r\n  ): EditorState {\r\n    const selection = editorState.getSelection();\r\n    const key = selection.getAnchorKey();\r\n    if (key !== selection.getFocusKey()) {\r\n      return editorState;\r\n    }\r\n\r\n    const content = editorState.getCurrentContent();\r\n    const block = content.getBlockForKey(key);\r\n    const type = block.getType();\r\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\r\n      return editorState;\r\n    }\r\n\r\n    event.preventDefault();\r\n\r\n    const depth = block.getDepth();\r\n    if (!event.shiftKey && depth === maxDepth) {\r\n      return editorState;\r\n    }\r\n\r\n    const withAdjustment = adjustBlockDepthForContentState(\r\n      content,\r\n      selection,\r\n      event.shiftKey ? -1 : 1,\r\n      maxDepth,\r\n    );\r\n\r\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\r\n  },\r\n\r\n  toggleBlockType: function(\r\n    editorState: EditorState,\r\n    blockType: DraftBlockType,\r\n  ): EditorState {\r\n    const selection = editorState.getSelection();\r\n    const startKey = selection.getStartKey();\r\n    let endKey = selection.getEndKey();\r\n    const content = editorState.getCurrentContent();\r\n    let target:any = selection;\r\n\r\n    // Triple-click can lead to a selection that includes offset 0 of the\r\n    // following block. The `SelectionState` for this case is accurate, but\r\n    // we should avoid toggling block type for the trailing block because it\r\n    // is a confusing interaction.\r\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\r\n      const blockBefore = nullthrows(content.getBlockBefore(endKey));\r\n      endKey = blockBefore.getKey();\r\n      target = target.merge({\r\n        anchorKey: startKey,\r\n        anchorOffset: selection.getStartOffset(),\r\n        focusKey: endKey,\r\n        focusOffset: blockBefore.getLength(),\r\n        isBackward: false,\r\n      });\r\n    }\r\n\r\n    const hasAtomicBlock = content\r\n      .getBlockMap()\r\n      .skipWhile((_, k) => k !== startKey)\r\n      .reverse()\r\n      .skipWhile((_, k) => k !== endKey)\r\n      .some(v => v.getType() === 'atomic');\r\n\r\n    if (hasAtomicBlock) {\r\n      return editorState;\r\n    }\r\n\r\n    const typeToSet =\r\n      content.getBlockForKey(startKey).getType() === blockType\r\n        ? 'unstyled'\r\n        : blockType;\r\n\r\n    return EditorState.push(\r\n      editorState,\r\n      DraftModifier.setBlockType(content, target, typeToSet),\r\n      'change-block-type',\r\n    );\r\n  },\r\n\r\n  toggleCode: function(editorState: EditorState): EditorState {\r\n    const selection = editorState.getSelection();\r\n    const anchorKey = selection.getAnchorKey();\r\n    const focusKey = selection.getFocusKey();\r\n\r\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\r\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\r\n    }\r\n\r\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\r\n  },\r\n\r\n  /**\r\n   * Toggle the specified inline style for the selection. If the\r\n   * user's selection is collapsed, apply or remove the style for the\r\n   * internal state. If it is not collapsed, apply the change directly\r\n   * to the document state.\r\n   */\r\n  toggleInlineStyle: function(\r\n    editorState: EditorState,\r\n    inlineStyle: string,\r\n  ): EditorState {\r\n    const selection = editorState.getSelection();\r\n    const currentStyle = editorState.getCurrentInlineStyle();\r\n\r\n    // If the selection is collapsed, toggle the specified style on or off and\r\n    // set the result as the new inline style override. This will then be\r\n    // used as the inline style for the next character to be inserted.\r\n    if (selection.isCollapsed()) {\r\n      return EditorState.setInlineStyleOverride(\r\n        editorState,\r\n        currentStyle.has(inlineStyle)\r\n          ? currentStyle.remove(inlineStyle)\r\n          : currentStyle.add(inlineStyle),\r\n      );\r\n    }\r\n\r\n    // If characters are selected, immediately apply or remove the\r\n    // inline style on the document state itself.\r\n    const content = editorState.getCurrentContent();\r\n    let newContent;\r\n\r\n    // If the style is already present for the selection range, remove it.\r\n    // Otherwise, apply it.\r\n    if (currentStyle.has(inlineStyle)) {\r\n      newContent = DraftModifier.removeInlineStyle(\r\n        content,\r\n        selection,\r\n        inlineStyle,\r\n      );\r\n    } else {\r\n      newContent = DraftModifier.applyInlineStyle(\r\n        content,\r\n        selection,\r\n        inlineStyle,\r\n      );\r\n    }\r\n\r\n    return EditorState.push(editorState, newContent, 'change-inline-style');\r\n  },\r\n\r\n  toggleLink: function(\r\n    editorState: EditorState,\r\n    targetSelection: SelectionState,\r\n    entityKey: string,\r\n  ): EditorState {\r\n    const withoutLink = DraftModifier.applyEntity(\r\n      editorState.getCurrentContent(),\r\n      targetSelection,\r\n      entityKey,\r\n    );\r\n\r\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\r\n  },\r\n\r\n  /**\r\n   * When a collapsed cursor is at the start of a styled block, changes block\r\n   * type to 'unstyled'. Returns null if selection does not meet that criteria.\r\n   */\r\n  tryToRemoveBlockStyle: function(editorState: EditorState): ContentState {\r\n    const selection = editorState.getSelection();\r\n    const offset = selection.getAnchorOffset();\r\n    if (selection.isCollapsed() && offset === 0) {\r\n      const key = selection.getAnchorKey();\r\n      const content = editorState.getCurrentContent();\r\n      const block = content.getBlockForKey(key);\r\n\r\n      const type = block.getType();\r\n      const blockBefore = content.getBlockBefore(key);\r\n      if (\r\n        type === 'code-block' &&\r\n        blockBefore &&\r\n        blockBefore.getType() === 'code-block' &&\r\n        blockBefore.getLength() !== 0\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      if (type !== 'unstyled') {\r\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\r\n      }\r\n    }\r\n    return null;\r\n  },\r\n};\r\n\r\nexport default  RichTextEditorUtil;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nconst NEWLINE_REGEX = /\\r\\n?|\\n/g;\r\n\r\nfunction splitTextIntoTextBlocks(text: string): Array<string> {\r\n  return text.split(NEWLINE_REGEX);\r\n}\r\n\r\nexport default  splitTextIntoTextBlocks;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from '../../../model/immutable/BlockMap';\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\nimport {EntityMap} from '../../../model/immutable/EntityMap';\r\n\r\nimport BlockMapBuilder from '../../../model/immutable/BlockMapBuilder';\r\nimport CharacterMetadata from '../../../model/immutable/CharacterMetadata';\r\nimport DataTransfer from 'fbjs/lib/DataTransfer';\r\nimport DraftModifier from '../../../model/modifier/DraftModifier';\r\nimport DraftPasteProcessor from '../../../model/paste/DraftPasteProcessor';\r\nimport EditorState from '../../../model/immutable/EditorState';\r\n\r\nimport RichTextEditorUtil from '../../../model/modifier/RichTextEditorUtil';\r\n\r\nimport getEntityKeyForSelection from '../../../model/entity/getEntityKeyForSelection';\r\nimport getTextContentFromFiles from '../../utils/getTextContentFromFiles';\r\nimport isEventHandled from '../../utils/isEventHandled';\r\nimport splitTextIntoTextBlocks from '../../utils/splitTextIntoTextBlocks';\r\n\r\n/**\r\n * Paste content.\r\n */\r\nfunction editOnPaste(editor: DraftEditor, e: any): void {\r\n  e.preventDefault();\r\n  const data = new DataTransfer(e.clipboardData);\r\n\r\n  // Get files, unless this is likely to be a string the user wants inline.\r\n  if (!data.isRichText()) {\r\n    /* $FlowFixMe This comment suppresses an error found DataTransfer was typed.\r\n     * getFiles() returns an array of <Files extends Blob>, not Blob */\r\n    const files: Array<Blob> = (data.getFiles() as any);\r\n    const defaultFileText = data.getText();\r\n    if (files.length > 0) {\r\n      // Allow customized paste handling for images, etc. Otherwise, fall\r\n      // through to insert text contents into the editor.\r\n      if (\r\n        editor.props.handlePastedFiles &&\r\n        isEventHandled(editor.props.handlePastedFiles(files))\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      getTextContentFromFiles(files as any, (/*string*/ fileText) => {\r\n        fileText = fileText || defaultFileText;\r\n        if (!fileText) {\r\n          return;\r\n        }\r\n\r\n        const editorState = editor._latestEditorState;\r\n        const blocks = splitTextIntoTextBlocks(fileText);\r\n        const character = CharacterMetadata.create({\r\n          style: editorState.getCurrentInlineStyle(),\r\n          entity: getEntityKeyForSelection(\r\n            editorState.getCurrentContent(),\r\n            editorState.getSelection(),\r\n          ),\r\n        });\r\n        const currentBlockType = RichTextEditorUtil.getCurrentBlockType(\r\n          editorState,\r\n        );\r\n\r\n        const text = DraftPasteProcessor.processText(\r\n          blocks,\r\n          character,\r\n          currentBlockType,\r\n        );\r\n        const fragment = BlockMapBuilder.createFromArray(text);\r\n\r\n        const withInsertedText = DraftModifier.replaceWithFragment(\r\n          editorState.getCurrentContent(),\r\n          editorState.getSelection(),\r\n          fragment,\r\n        );\r\n\r\n        editor.update(\r\n          EditorState.push(editorState, withInsertedText, 'insert-fragment'),\r\n        );\r\n      });\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n  let textBlocks: Array<string> = [];\r\n  const text: string = (data.getText() as any);\r\n  const html: string = (data.getHTML() as any);\r\n  const editorState = editor._latestEditorState;\r\n\r\n  if (\r\n    editor.props.handlePastedText &&\r\n    isEventHandled(editor.props.handlePastedText(text, html, editorState))\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  if (text) {\r\n    textBlocks = splitTextIntoTextBlocks(text);\r\n  }\r\n\r\n  if (!editor.props.stripPastedStyles) {\r\n    // If the text from the paste event is rich content that matches what we\r\n    // already have on the internal clipboard, assume that we should just use\r\n    // the clipboard fragment for the paste. This will allow us to preserve\r\n    // styling and entities, if any are present. Note that newlines are\r\n    // stripped during comparison -- this is because copy/paste within the\r\n    // editor in Firefox and IE will not include empty lines. The resulting\r\n    // paste will preserve the newlines correctly.\r\n    const internalClipboard = editor.getClipboard();\r\n    if (data.isRichText() && internalClipboard) {\r\n      if (\r\n        // If the editorKey is present in the pasted HTML, it should be safe to\r\n        // assume this is an internal paste.\r\n        html.indexOf(editor.getEditorKey()) !== -1 ||\r\n        // The copy may have been made within a single block, in which case the\r\n        // editor key won't be part of the paste. In this case, just check\r\n        // whether the pasted text matches the internal clipboard.\r\n        (textBlocks.length === 1 &&\r\n          internalClipboard.size === 1 &&\r\n          internalClipboard.first().getText() === text)\r\n      ) {\r\n        editor.update(\r\n          insertFragment(editor._latestEditorState, internalClipboard),\r\n        );\r\n        return;\r\n      }\r\n    } else if (\r\n      internalClipboard &&\r\n      data.types.includes('com.apple.webarchive') &&\r\n      !data.types.includes('text/html') &&\r\n      areTextBlocksAndClipboardEqual(textBlocks, internalClipboard)\r\n    ) {\r\n      // Safari does not properly store text/html in some cases.\r\n      // Use the internalClipboard if present and equal to what is on\r\n      // the clipboard. See https://bugs.webkit.org/show_bug.cgi?id=19893.\r\n      editor.update(\r\n        insertFragment(editor._latestEditorState, internalClipboard),\r\n      );\r\n      return;\r\n    }\r\n\r\n    // If there is html paste data, try to parse that.\r\n    if (html) {\r\n      const htmlFragment = DraftPasteProcessor.processHTML(\r\n        html,\r\n        editor.props.blockRenderMap,\r\n      );\r\n      if (htmlFragment) {\r\n        const {contentBlocks, entityMap} = htmlFragment;\r\n        if (contentBlocks) {\r\n          const htmlMap = BlockMapBuilder.createFromArray(contentBlocks);\r\n          editor.update(\r\n            insertFragment(editor._latestEditorState, htmlMap, entityMap),\r\n          );\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Otherwise, create a new fragment from our pasted text. Also\r\n    // empty the internal clipboard, since it's no longer valid.\r\n    editor.setClipboard(null);\r\n  }\r\n\r\n  if (textBlocks.length) {\r\n    const character = CharacterMetadata.create({\r\n      style: editorState.getCurrentInlineStyle(),\r\n      entity: getEntityKeyForSelection(\r\n        editorState.getCurrentContent(),\r\n        editorState.getSelection(),\r\n      ),\r\n    });\r\n\r\n    const currentBlockType = RichTextEditorUtil.getCurrentBlockType(\r\n      editorState,\r\n    );\r\n\r\n    const textFragment = DraftPasteProcessor.processText(\r\n      textBlocks,\r\n      character,\r\n      currentBlockType,\r\n    );\r\n\r\n    const textMap = BlockMapBuilder.createFromArray(textFragment);\r\n    editor.update(insertFragment(editor._latestEditorState, textMap));\r\n  }\r\n}\r\n\r\nfunction insertFragment(\r\n  editorState: EditorState,\r\n  fragment: BlockMap,\r\n  entityMap?:EntityMap,\r\n): EditorState {\r\n  const newContent = DraftModifier.replaceWithFragment(\r\n    editorState.getCurrentContent(),\r\n    editorState.getSelection(),\r\n    fragment,\r\n  );\r\n  // TODO: merge the entity map once we stop using DraftEntity\r\n  // like this:\r\n  // const mergedEntityMap = newContent.getEntityMap().merge(entityMap);\r\n\r\n  return EditorState.push(\r\n    editorState,\r\n    newContent.set('entityMap', entityMap) as any,\r\n    'insert-fragment',\r\n  );\r\n}\r\n\r\nfunction areTextBlocksAndClipboardEqual(\r\n  textBlocks: Array<string>,\r\n  blockMap: BlockMap,\r\n): boolean {\r\n  return (\r\n    textBlocks.length === blockMap.size &&\r\n    blockMap.valueSeq().every((block, ii) => block.getText() === textBlocks[ii])\r\n  );\r\n}\r\n\r\nexport default  editOnPaste;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  DraftEditor from '../../base/DraftEditor.react';\r\n\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nimport onBeforeInput from './editOnBeforeInput';\r\nimport onBlur from './editOnBlur';\r\nimport onCompositionStart from './editOnCompositionStart';\r\nimport onCopy from './editOnCopy';\r\nimport onCut from './editOnCut';\r\nimport onDragOver from './editOnDragOver';\r\nimport onDragStart from './editOnDragStart';\r\nimport onFocus from './editOnFocus';\r\nimport onInput from './editOnInput';\r\nimport onKeyDown from './editOnKeyDown';\r\nimport onPaste from './editOnPaste';\r\nimport onSelect from './editOnSelect';\r\n\r\nconst isChrome = UserAgent.isBrowser('Chrome');\r\n\r\nconst selectionHandler: (e: DraftEditor, event?) => void = isChrome\r\n  ? onSelect\r\n  : e => {};\r\n\r\nconst DraftEditorEditHandler = {\r\n  onBeforeInput,\r\n  onBlur,\r\n  onCompositionStart,\r\n  onCopy,\r\n  onCut,\r\n  onDragOver,\r\n  onDragStart,\r\n  onFocus,\r\n  onInput,\r\n  onKeyDown,\r\n  onPaste,\r\n  onSelect,\r\n  // In certain cases, contenteditable on chrome does not fire the onSelect\r\n  // event, causing problems with cursor positioning. Therefore, the selection\r\n  // state update handler is added to more events to ensure that the selection\r\n  // state is always synced with the actual cursor positions.\r\n  onMouseUp: selectionHandler,\r\n  onKeyUp: selectionHandler,\r\n};\r\n\r\nexport default  DraftEditorEditHandler;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {DraftTextAlignment} from './DraftTextAlignment';\r\nimport  EditorState from '../../model/immutable/EditorState';\r\n\r\nimport React from 'react'\r\n\r\nimport cx from 'fbjs/lib/cx'\r\n\r\ntype Props = {\r\n  accessibilityID: string,\r\n  editorState: EditorState,\r\n  text: string,\r\n  textAlignment: DraftTextAlignment,\r\n};\r\n\r\n/**\r\n * This component is responsible for rendering placeholder text for the\r\n * `DraftEditor` component.\r\n *\r\n * Override placeholder style via CSS.\r\n */\r\nclass DraftEditorPlaceholder extends React.Component<Props> {\r\n  shouldComponentUpdate(nextProps: Props): boolean {\r\n    return (\r\n      this.props.text !== nextProps.text ||\r\n      this.props.editorState.getSelection().getHasFocus() !==\r\n        nextProps.editorState.getSelection().getHasFocus()\r\n    );\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    const hasFocus = this.props.editorState.getSelection().getHasFocus();\r\n\r\n    const className = cx({\r\n      'public/DraftEditorPlaceholder/root': true,\r\n      'public/DraftEditorPlaceholder/hasFocus': hasFocus,\r\n    });\r\n\r\n    const contentStyle:any = {\r\n      whiteSpace: 'pre-wrap',\r\n    };\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div\r\n          className={cx('public/DraftEditorPlaceholder/inner')}\r\n          id={this.props.accessibilityID}\r\n          style={contentStyle}>\r\n          {this.props.text}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  DraftEditorPlaceholder;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\nimport React, {KeyboardEvent} from 'react'\r\n\r\nimport  {DraftEditorCommand} from '../../model/constants/DraftEditorCommand';\r\n\r\nimport KeyBindingUtil from './KeyBindingUtil';\r\nimport Keys from 'fbjs/lib/Keys'\r\n\r\nimport UserAgent from 'fbjs/lib/UserAgent'\r\n\r\nconst isOSX = UserAgent.isPlatform('Mac OS X');\r\n\r\n// Firefox on OSX had a bug resulting in navigation instead of cursor movement.\r\n// This bug was fixed in Firefox 29. Feature detection is virtually impossible\r\n// so we just check the version number. See #342765.\r\nconst shouldFixFirefoxMovement = isOSX && UserAgent.isBrowser('Firefox < 29');\r\n\r\nconst {hasCommandModifier, isCtrlKeyCommand} = KeyBindingUtil;\r\n\r\nfunction shouldRemoveWord(e: KeyboardEvent): boolean {\r\n  return (isOSX && e.altKey) || isCtrlKeyCommand(e);\r\n}\r\n\r\n/**\r\n * Get the appropriate undo/redo command for a Z key command.\r\n */\r\nfunction getZCommand(e: KeyboardEvent): DraftEditorCommand {\r\n  if (!hasCommandModifier(e)) {\r\n    return null;\r\n  }\r\n  return e.shiftKey ? 'redo' : 'undo';\r\n}\r\n\r\nfunction getDeleteCommand(e: KeyboardEvent): DraftEditorCommand {\r\n  // Allow default \"cut\" behavior for PCs on Shift + Delete.\r\n  if (!isOSX && e.shiftKey) {\r\n    return null;\r\n  }\r\n  return shouldRemoveWord(e) ? 'delete-word' : 'delete';\r\n}\r\n\r\nfunction getBackspaceCommand(e: KeyboardEvent): DraftEditorCommand {\r\n  if (hasCommandModifier(e) && isOSX) {\r\n    return 'backspace-to-start-of-line';\r\n  }\r\n  return shouldRemoveWord(e) ? 'backspace-word' : 'backspace';\r\n}\r\n\r\n/**\r\n * Retrieve a bound key command for the given event.\r\n */\r\nfunction getDefaultKeyBinding(\r\n  e: KeyboardEvent,\r\n): DraftEditorCommand {\r\n  switch (e.keyCode) {\r\n    case 66: // B\r\n      return hasCommandModifier(e) ? 'bold' : null;\r\n    case 68: // D\r\n      return isCtrlKeyCommand(e) ? 'delete' : null;\r\n    case 72: // H\r\n      return isCtrlKeyCommand(e) ? 'backspace' : null;\r\n    case 73: // I\r\n      return hasCommandModifier(e) ? 'italic' : null;\r\n    case 74: // J\r\n      return hasCommandModifier(e) ? 'code' : null;\r\n    case 75: // K\r\n      return isOSX && isCtrlKeyCommand(e) ? 'secondary-cut' : null;\r\n    case 77: // M\r\n      return isCtrlKeyCommand(e) ? 'split-block' : null;\r\n    case 79: // O\r\n      return isCtrlKeyCommand(e) ? 'split-block' : null;\r\n    case 84: // T\r\n      return isOSX && isCtrlKeyCommand(e) ? 'transpose-characters' : null;\r\n    case 85: // U\r\n      return hasCommandModifier(e) ? 'underline' : null;\r\n    case 87: // W\r\n      return isOSX && isCtrlKeyCommand(e) ? 'backspace-word' : null;\r\n    case 89: // Y\r\n      if (isCtrlKeyCommand(e)) {\r\n        return isOSX ? 'secondary-paste' : 'redo';\r\n      }\r\n      return null;\r\n    case 90: // Z\r\n      return getZCommand(e) || null;\r\n    case Keys.RETURN:\r\n      return 'split-block';\r\n    case Keys.DELETE:\r\n      return getDeleteCommand(e);\r\n    case Keys.BACKSPACE:\r\n      return getBackspaceCommand(e);\r\n    // LEFT/RIGHT handlers serve as a workaround for a Firefox bug.\r\n    case Keys.LEFT:\r\n      return shouldFixFirefoxMovement && hasCommandModifier(e)\r\n        ? 'move-selection-to-start-of-block'\r\n        : null;\r\n    case Keys.RIGHT:\r\n      return shouldFixFirefoxMovement && hasCommandModifier(e)\r\n        ? 'move-selection-to-end-of-block'\r\n        : null;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default  getDefaultKeyBinding;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @preventMunge\r\n * @emails oncall+draft_js\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport { BlockMap } from \"../../model/immutable/BlockMap\";\r\nimport { DraftEditorModes } from \"../handlers/DraftEditorModes\";\r\nimport { DraftEditorDefaultProps, DraftEditorProps } from \"./DraftEditorProps\";\r\nimport { DraftScrollPosition } from \"./DraftScrollPosition\";\r\n\r\nimport DefaultDraftBlockRenderMap from \"../../model/immutable/DefaultDraftBlockRenderMap\";\r\nimport DefaultDraftInlineStyle from \"../../model/immutable/DefaultDraftInlineStyle\";\r\nimport DraftEditorCompositionHandler from \"../handlers/composition/DraftEditorCompositionHandler\";\r\nimport DraftEditorContents from \"../../stubs/DraftEditorContents.react\";\r\nimport DraftEditorDragHandler from \"../handlers/drag/DraftEditorDragHandler\";\r\nimport DraftEditorEditHandler from \"../handlers/edit/DraftEditorEditHandler\";\r\nimport DraftEditorPlaceholder from \"./DraftEditorPlaceholder.react\";\r\nimport DraftEffects from \"../../stubs/DraftEffects\";\r\nimport EditorState from \"../../model/immutable/EditorState\";\r\nimport React, { ReactNode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Scroll from \"fbjs/lib/Scroll\";\r\nimport Style from \"fbjs/lib/Style\";\r\nimport UserAgent from \"fbjs/lib/UserAgent\";\r\n\r\nimport cx from \"fbjs/lib/cx\";\r\nimport generateRandomKey from \"../../model/keys/generateRandomKey\";\r\nimport getDefaultKeyBinding from \"../utils/getDefaultKeyBinding\";\r\nimport getScrollPosition from \"fbjs/lib/getScrollPosition\";\r\nimport gkx from \"../../stubs/gkx\";\r\nimport invariant from \"fbjs/lib/invariant\";\r\nimport isHTMLElement from \"../utils/isHTMLElement\";\r\nimport nullthrows from \"fbjs/lib/nullthrows\";\r\n\r\nconst isIE = UserAgent.isBrowser(\"IE\");\r\n\r\n// IE does not support the `input` event on contentEditable, so we can't\r\n// observe spellcheck behavior.\r\nconst allowSpellCheck = !isIE;\r\n\r\n// Define a set of handler objects to correspond to each possible `mode`\r\n// of editor behavior.\r\nconst handlerMap = {\r\n    edit: DraftEditorEditHandler,\r\n    composite: DraftEditorCompositionHandler,\r\n    drag: DraftEditorDragHandler,\r\n    cut: null,\r\n    render: null\r\n};\r\n\r\ntype State = {\r\n    contentsKey: number;\r\n};\r\n\r\nlet didInitODS = false;\r\n\r\nclass UpdateDraftEditorFlags extends React.Component<{\r\n    editor: DraftEditor;\r\n    editorState: EditorState;\r\n}> {\r\n    render(): ReactNode {\r\n        return null;\r\n    }\r\n    componentDidMount(): void {\r\n        this._update();\r\n    }\r\n    componentDidUpdate(): void {\r\n        this._update();\r\n    }\r\n    _update() {\r\n        const editor = this.props.editor;\r\n        /**\r\n         * Sometimes a render triggers a 'focus' or other event, and that will\r\n         * schedule a second render pass.\r\n         * In order to make sure the second render pass gets the latest editor\r\n         * state, we updat e it here.\r\n         * Example:\r\n         * render #1\r\n         * +\r\n         * |\r\n         * | cWU -> Nothing ... latestEditorState = STALE_STATE :(\r\n         * |\r\n         * | render -> this.props.editorState = FRESH_STATE\r\n         * | +         *and* set latestEditorState = FRESH_STATE\r\n         *   |\r\n         * | |\r\n         * | +--> triggers 'focus' event, calling 'handleFocus' with latestEditorState\r\n         * |                                                +\r\n         * |                                                |\r\n         * +>cdU -> latestEditorState = FRESH_STATE         | the 'handleFocus' call schedules render #2\r\n         *                                                  | with latestEditorState, which is FRESH_STATE\r\n         *                                                  |\r\n         * render #2 <--------------------------------------+\r\n         * +\r\n         * |\r\n         * | cwU -> nothing updates\r\n         * |\r\n         * | render -> this.props.editorState = FRESH_STATE which was passed in above\r\n         * |\r\n         * +>cdU fires and resets latestEditorState = FRESH_STATE\r\n         * ---\r\n         * Note that if we don't set latestEditorState in 'render' in the above\r\n         * diagram, then STALE_STATE gets passed to render #2.\r\n         */\r\n        editor._latestEditorState = this.props.editorState;\r\n\r\n        /**\r\n         * The reason we set this 'blockSelectEvents' flag is that  IE will fire a\r\n         * 'selectionChange' event when we programmatically change the selection,\r\n         * meaning it would trigger a new select event while we are in the middle\r\n         * of updating.\r\n         * We found that the 'selection.addRange' was what triggered the stray\r\n         * selectionchange event in IE.\r\n         * To be clear - we have not been able to reproduce specific bugs related\r\n         * to this stray selection event, but have recorded logs that some\r\n         * conditions do cause it to get bumped into during editOnSelect.\r\n         */\r\n        editor._blockSelectEvents = true;\r\n    }\r\n}\r\n\r\n/**\r\n * `DraftEditor` is the root editor component. It composes a `contentEditable`\r\n * div, and provides a wide variety of useful function props for managing the\r\n * state of the editor. See `DraftEditorProps` for details.\r\n */\r\nclass DraftEditor extends React.Component<DraftEditorProps, State> {\r\n    static defaultProps: DraftEditorDefaultProps = {\r\n        blockRenderMap: DefaultDraftBlockRenderMap,\r\n        blockRendererFn: function() {\r\n            return null;\r\n        },\r\n        blockStyleFn: function() {\r\n            return \"\";\r\n        },\r\n        keyBindingFn: getDefaultKeyBinding as any,\r\n        readOnly: false,\r\n        spellCheck: false,\r\n        stripPastedStyles: false\r\n    };\r\n\r\n    _blockSelectEvents: boolean;\r\n    _clipboard: BlockMap;\r\n    _handler: Object;\r\n    _dragCount: number;\r\n    _internalDrag: boolean;\r\n    _editorKey: string;\r\n    _placeholderAccessibilityID: string;\r\n    _latestEditorState: EditorState;\r\n    _latestCommittedEditorState: EditorState;\r\n    _pendingStateFromBeforeInput: void | EditorState;\r\n\r\n    /**\r\n     * Define proxies that can route events to the current handler.\r\n     */\r\n    _onBeforeInput: Function;\r\n    _onBlur: Function;\r\n    _onCharacterData: Function;\r\n    _onCompositionEnd: Function;\r\n    _onCompositionStart: Function;\r\n    _onCopy: Function;\r\n    _onCut: Function;\r\n    _onDragEnd: Function;\r\n    _onDragOver: Function;\r\n    _onDragStart: Function;\r\n    _onDrop: Function;\r\n    _onInput: Function;\r\n    _onFocus: Function;\r\n    _onKeyDown: Function;\r\n    _onKeyPress: Function;\r\n    _onKeyUp: Function;\r\n    _onMouseDown: Function;\r\n    _onMouseUp: Function;\r\n    _onPaste: Function;\r\n    _onSelect: Function;\r\n\r\n    editor: HTMLElement;\r\n    editorContainer: HTMLElement;\r\n    // focus: () => void;\r\n    // blur: () => void;\r\n    //setMode: (mode: DraftEditorModes) => void;\r\n    // exitCurrentMode: () => void;\r\n    // restoreEditorDOM: (scrollPosition?: DraftScrollPosition) => void;\r\n    // setClipboard: (clipboard: ?BlockMap) => void;\r\n    // getClipboard: () => ?BlockMap;\r\n    getEditorKey: () => string;\r\n    // updat e: (editorState: EditorState) => void;\r\n    // onDragEnter: () => void;\r\n    // onDragLeave: () => void;\r\n\r\n    constructor(props: DraftEditorProps) {\r\n        super(props);\r\n\r\n        this._blockSelectEvents = false;\r\n        this._clipboard = null;\r\n        this._handler = null;\r\n        this._dragCount = 0;\r\n        this._editorKey = props.editorKey || generateRandomKey();\r\n        this._placeholderAccessibilityID = \"placeholder-\" + this._editorKey;\r\n        this._latestEditorState = props.editorState;\r\n        this._latestCommittedEditorState = props.editorState;\r\n\r\n        this._onBeforeInput = this._buildHandler(\"onBeforeInput\");\r\n        this._onBlur = this._buildHandler(\"onBlur\");\r\n        this._onCharacterData = this._buildHandler(\"onCharacterData\");\r\n        this._onCompositionEnd = this._buildHandler(\"onCompositionEnd\");\r\n        this._onCompositionStart = this._buildHandler(\"onCompositionStart\");\r\n        this._onCopy = this._buildHandler(\"onCopy\");\r\n        this._onCut = this._buildHandler(\"onCut\");\r\n        this._onDragEnd = this._buildHandler(\"onDragEnd\");\r\n        this._onDragOver = this._buildHandler(\"onDragOver\");\r\n        this._onDragStart = this._buildHandler(\"onDragStart\");\r\n        this._onDrop = this._buildHandler(\"onDrop\");\r\n        this._onInput = this._buildHandler(\"onInput\");\r\n        this._onFocus = this._buildHandler(\"onFocus\");\r\n        this._onKeyDown = this._buildHandler(\"onKeyDown\");\r\n        this._onKeyPress = this._buildHandler(\"onKeyPress\");\r\n        this._onKeyUp = this._buildHandler(\"onKeyUp\");\r\n        this._onMouseDown = this._buildHandler(\"onMouseDown\");\r\n        this._onMouseUp = this._buildHandler(\"onMouseUp\");\r\n        this._onPaste = this._buildHandler(\"onPaste\");\r\n        this._onSelect = this._buildHandler(\"onSelect\");\r\n\r\n        this.getEditorKey = () => this._editorKey;\r\n\r\n        if (window[\"__DEV__\"]) {\r\n            [\"onDownArrow\", \"onEscape\", \"onLeftArrow\", \"onRightArrow\", \"onTab\", \"onUpArrow\"].forEach(propName => {\r\n                if (props.hasOwnProperty(propName)) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.warn(\r\n                        `Supplying an \\`${propName}\\` prop to \\`DraftEditor\\` has ` +\r\n                            \"been deprecated. If your handler needs access to the keyboard \" +\r\n                            \"event, supply a custom `keyBindingFn` prop that falls back to \" +\r\n                            \"the default one (eg. https://is.gd/RG31RJ).\"\r\n                    );\r\n                }\r\n            });\r\n        }\r\n\r\n        // See `restoreEditorDOM()`.\r\n        this.state = { contentsKey: 0 };\r\n    }\r\n\r\n    /**\r\n     * Build a method that will pass the event to the specified handler method.\r\n     * This allows us to look up the correct handler function for the current\r\n     * editor mode, if any has been specified.\r\n     */\r\n    _buildHandler(eventName: string): Function {\r\n        const flushControlled: (fn: Function) => void =\r\n            /* $FlowFixMe(>=0.79.1 site=www) This comment suppresses an error found\r\n             * when Flow v0.79 was deployed. To see the error delete this comment and\r\n             * run Flow. */\r\n            // @ts-ignore\r\n            ReactDOM.unstable_flushControlled;\r\n        // Wrap event handlers in `flushControlled`. In sync mode, this is\r\n        // effectively a no-op. In async mode, this ensures all updates scheduled\r\n        // inside the handler are flushed before React yields to the browser.\r\n        return e => {\r\n            if (!this.props.readOnly) {\r\n                const method = this._handler && this._handler[eventName];\r\n                if (method) {\r\n                    if (flushControlled) {\r\n                        flushControlled(() => method(this, e));\r\n                    } else {\r\n                        method(this, e);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    _showPlaceholder(): boolean {\r\n        return !!this.props.placeholder && !this.props.editorState.isInCompositionMode() && !this.props.editorState.getCurrentContent().hasText();\r\n    }\r\n\r\n    _renderPlaceholder(): ReactNode {\r\n        if (this._showPlaceholder()) {\r\n            const placeHolderProps = {\r\n                text: nullthrows(this.props.placeholder),\r\n                editorState: this.props.editorState,\r\n                textAlignment: this.props.textAlignment,\r\n                accessibilityID: this._placeholderAccessibilityID\r\n            };\r\n\r\n            /* $FlowFixMe(>=0.112.0 site=mobile) This comment suppresses an error\r\n             * found when Flow v0.112 was deployed. To see the error delete this\r\n             * comment and run Flow. */\r\n            /* $FlowFixMe(>=0.112.0 site=www) This comment suppresses an error found\r\n             * when Flow v0.112 was deployed. To see the error delete this comment\r\n             * and run Flow. */\r\n            /* $FlowFixMe(>=0.112.0 site=www,mobile) This comment suppresses an error\r\n             * found when Flow v0.112 was deployed. To see the error delete this\r\n             * comment and run Flow. */\r\n            // @ts-ignore\r\n            return <DraftEditorPlaceholder {...placeHolderProps} />;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { blockRenderMap, blockRendererFn, blockStyleFn, customStyleFn, customStyleMap, editorState, readOnly, textAlignment, textDirectionality } = this.props;\r\n        console.log('ffffffffffffff')\r\n        const rootClass = cx({\r\n            \"DraftEditor/root\": true,\r\n            \"DraftEditor/alignLeft\": textAlignment === \"left\",\r\n            \"DraftEditor/alignRight\": textAlignment === \"right\",\r\n            \"DraftEditor/alignCenter\": textAlignment === \"center\"\r\n        });\r\n\r\n        const contentStyle = {\r\n            outline: \"none\",\r\n            // fix parent-draggable Safari bug. #1326\r\n            userSelect: \"text\",\r\n            WebkitUserSelect: \"text\",\r\n            whiteSpace: \"pre-wrap\",\r\n            wordWrap: \"break-word\"\r\n        };\r\n\r\n        // The aria-expanded and aria-haspopup properties should only be rendered\r\n        // for a combobox.\r\n        /* $FlowFixMe(>=0.68.0 site=www,mobile) This comment suppresses an error\r\n         * found when Flow v0.68 was deployed. To see the error delete this comment\r\n         * and run Flow. */\r\n        const ariaRole = (this.props as any).role || \"textbox\";\r\n        const ariaExpanded = ariaRole === \"combobox\" ? !!this.props.ariaExpanded : null;\r\n\r\n        const editorContentsProps = {\r\n            blockRenderMap,\r\n            blockRendererFn,\r\n            blockStyleFn,\r\n            customStyleMap: {\r\n                ...DefaultDraftInlineStyle,\r\n                ...customStyleMap\r\n            },\r\n            customStyleFn,\r\n            editorKey: this._editorKey,\r\n            editorState,\r\n            textDirectionality\r\n        };\r\n\r\n        return (\r\n            <div className={rootClass}>\r\n                {this._renderPlaceholder()}\r\n                <div className={cx(\"DraftEditor/editorContainer\")} ref={ref => (this.editorContainer = ref)}>\r\n                    <div\r\n                        aria-activedescendant={readOnly ? null : this.props.ariaActiveDescendantID}\r\n                        aria-autocomplete={(readOnly ? null : this.props.ariaAutoComplete) as any}\r\n                        aria-controls={readOnly ? null : this.props.ariaControls}\r\n                        aria-describedby={this.props.ariaDescribedBy || this._placeholderAccessibilityID}\r\n                        aria-expanded={readOnly ? null : ariaExpanded}\r\n                        aria-label={this.props.ariaLabel}\r\n                        aria-labelledby={this.props.ariaLabelledBy}\r\n                        aria-multiline={this.props.ariaMultiline}\r\n                        aria-owns={readOnly ? null : this.props.ariaOwneeID}\r\n                        autoCapitalize={this.props.autoCapitalize}\r\n                        // autoComplete={this.props.autoComplete}\r\n                        autoCorrect={this.props.autoCorrect}\r\n                        className={cx({\r\n                            // Chrome's built-in translation feature mutates the DOM in ways\r\n                            // that Draft doesn't expect (ex: adding <font> tags inside\r\n                            // DraftEditorLeaf spans) and causes problems. We add notranslate\r\n                            // here which makes its autotranslation skip over this subtree.\r\n                            notranslate: !readOnly,\r\n                            \"public/DraftEditor/content\": true\r\n                        })}\r\n                        contentEditable={!readOnly}\r\n                        data-testid={this.props.webDriverTestID}\r\n                        onBeforeInput={this._onBeforeInput as any}\r\n                        onBlur={this._onBlur as any}\r\n                        onCompositionEnd={this._onCompositionEnd as any}\r\n                        onCompositionStart={this._onCompositionStart as any}\r\n                        onCopy={this._onCopy as any}\r\n                        onCut={this._onCut as any}\r\n                        onDragEnd={this._onDragEnd as any}\r\n                        onDragEnter={this.onDragEnter}\r\n                        onDragLeave={this.onDragLeave}\r\n                        onDragOver={this._onDragOver as any}\r\n                        onDragStart={this._onDragStart as any}\r\n                        onDrop={this._onDrop as any}\r\n                        onFocus={this._onFocus as any}\r\n                        onInput={this._onInput as any}\r\n                        onKeyDown={this._onKeyDown as any}\r\n                        onKeyPress={this._onKeyPress as any}\r\n                        onKeyUp={this._onKeyUp as any}\r\n                        onMouseUp={this._onMouseUp as any}\r\n                        onPaste={this._onPaste as any}\r\n                        onSelect={this._onSelect as any}\r\n                        ref={ref => (this.editor = ref)}\r\n                        role={readOnly ? null : ariaRole}\r\n                        spellCheck={allowSpellCheck && this.props.spellCheck}\r\n                        style={contentStyle as any}\r\n                        suppressContentEditableWarning\r\n                        tabIndex={this.props.tabIndex}\r\n                    >\r\n                        {/*\r\n              Needs to come earlier in the tree as a sibling (not ancestor) of\r\n              all DraftEditorLeaf nodes so it's first in postorder traversal.\r\n            */}\r\n                        <UpdateDraftEditorFlags editor={this} editorState={editorState} />\r\n                        <DraftEditorContents {...editorContentsProps} key={\"contents\" + this.state.contentsKey} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this._blockSelectEvents = false;\r\n        if (!didInitODS && gkx(\"draft_ods_enabled\")) {\r\n            didInitODS = true;\r\n            DraftEffects.initODS();\r\n        }\r\n        this.setMode(\"edit\");\r\n\r\n        /**\r\n         * IE has a hardcoded \"feature\" that attempts to convert link text into\r\n         * anchors in contentEditable DOM. This breaks the editor's expectations of\r\n         * the DOM, and control is lost. Disable it to make IE behave.\r\n         * See: http://blogs.msdn.com/b/ieinternals/archive/2010/09/15/\r\n         * ie9-beta-minor-change-list.aspx\r\n         */\r\n        if (isIE) {\r\n            // editor can be null after mounting\r\n            // https://stackoverflow.com/questions/44074747/componentdidmount-called-before-ref-callback\r\n            if (!this.editor) {\r\n                global[\"execCommand\"](\"AutoUrlDetect\", false, false);\r\n            } else {\r\n                this.editor.ownerDocument[\"execCommand\"](\"AutoUrlDetect\", false, false as any);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(): void {\r\n        this._blockSelectEvents = false;\r\n        this._latestEditorState = this.props.editorState;\r\n        this._latestCommittedEditorState = this.props.editorState;\r\n    }\r\n\r\n    /**\r\n     * Used via `this.focus()`.\r\n     *\r\n     * Force focus back onto the editor node.\r\n     *\r\n     * We attempt to preserve scroll position when focusing. You can also pass\r\n     * a specified scroll position (for cases like `cut` behavior where it should\r\n     * be restored to a known position).\r\n     */\r\n    focus: (scrollPosition?: DraftScrollPosition) => void = (scrollPosition?: DraftScrollPosition): void => {\r\n        const { editorState } = this.props;\r\n        const alreadyHasFocus = editorState.getSelection().getHasFocus();\r\n        const editorNode = this.editor;\r\n\r\n        if (!editorNode) {\r\n            // once in a while people call 'focus' in a setTimeout, and the node has\r\n            // been deleted, so it can be null in that case.\r\n            return;\r\n        }\r\n\r\n        const scrollParent = Style.getScrollParent(editorNode);\r\n        const { x, y } = scrollPosition || getScrollPosition(scrollParent);\r\n\r\n        invariant(isHTMLElement(editorNode), \"editorNode is not an HTMLElement\");\r\n\r\n        editorNode.focus();\r\n\r\n        // Restore scroll position\r\n        if (scrollParent === window) {\r\n            window.scrollTo(x, y);\r\n        } else {\r\n            Scroll.setTop(scrollParent, y);\r\n        }\r\n\r\n        // On Chrome and Safari, calling focus on contenteditable focuses the\r\n        // cursor at the first character. This is something you don't expect when\r\n        // you're clicking on an input element but not directly on a character.\r\n        // Put the cursor back where it was before the blur.\r\n        if (!alreadyHasFocus) {\r\n            this.update(EditorState.forceSelection(editorState, editorState.getSelection()));\r\n        }\r\n    };\r\n\r\n    blur: () => void = (): void => {\r\n        const editorNode = this.editor;\r\n        if (!editorNode) {\r\n            return;\r\n        }\r\n        invariant(isHTMLElement(editorNode), \"editorNode is not an HTMLElement\");\r\n        editorNode.blur();\r\n    };\r\n\r\n    /**\r\n     * Used via `this.setMode(...)`.\r\n     *\r\n     * Set the behavior mode for the editor component. This switches the current\r\n     * handler module to ensure that DOM events are managed appropriately for\r\n     * the active mode.\r\n     */\r\n    setMode = (mode: DraftEditorModes): void => {\r\n        const { onPaste, onCut, onCopy } = this.props;\r\n        const editHandler = { ...handlerMap.edit };\r\n\r\n        if (onPaste) {\r\n            /* $FlowFixMe(>=0.111.0) This comment suppresses an error found when Flow\r\n             * v0.111.0 was deployed. To see the error, delete this comment and run\r\n             * Flow. */\r\n            editHandler.onPaste = onPaste;\r\n        }\r\n\r\n        if (onCut) {\r\n            editHandler.onCut = onCut;\r\n        }\r\n\r\n        if (onCopy) {\r\n            editHandler.onCopy = onCopy;\r\n        }\r\n\r\n        const handler = {\r\n            ...handlerMap,\r\n            edit: editHandler\r\n        };\r\n        this._handler = handler[mode];\r\n    };\r\n\r\n    exitCurrentMode: () => void = (): void => {\r\n        this.setMode(\"edit\");\r\n    };\r\n\r\n    /**\r\n     * Used via `this.restoreEditorDOM()`.\r\n     *\r\n     * Force a complete re-render of the DraftEditorContents based on the current\r\n     * EditorState. This is useful when we know we are going to lose control of\r\n     * the DOM state (cut command, IME) and we want to make sure that\r\n     * reconciliation occurs on a version of the DOM that is synchronized with\r\n     * our EditorState.\r\n     */\r\n    restoreEditorDOM: (scrollPosition?: DraftScrollPosition) => void = (scrollPosition?: DraftScrollPosition): void => {\r\n        this.setState({ contentsKey: this.state.contentsKey + 1 }, () => {\r\n            this.focus(scrollPosition);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Used via `this.setClipboard(...)`.\r\n     *\r\n     * Set the clipboard state for a cut/copy event.\r\n     */\r\n    setClipboard = (clipboard: BlockMap): void => {\r\n        this._clipboard = clipboard;\r\n    };\r\n\r\n    /**\r\n     * Used via `this.getClipboard()`.\r\n     *\r\n     * Retrieve the clipboard state for a cut/copy event.\r\n     */\r\n    getClipboard: () => BlockMap = (): BlockMap => {\r\n        return this._clipboard;\r\n    };\r\n\r\n    /**\r\n     * Used via `this.updat e(...)`.\r\n     *\r\n     * Propagate a new `EditorState` object to higher-level components. This is\r\n     * the method by which event handlers inform the `DraftEditor` component of\r\n     * state changes. A component that composes a `DraftEditor` **must** provide\r\n     * an `onChange` prop to receive state updates passed along from this\r\n     * function.\r\n     */\r\n    update = (editorState: EditorState) => {\r\n        this._latestEditorState = editorState;\r\n        this.props.onChange(editorState);\r\n    };\r\n\r\n    /**\r\n     * Used in conjunction with `onDragLeave()`, by counting the number of times\r\n     * a dragged element enters and leaves the editor (or any of its children),\r\n     * to determine when the dragged element absolutely leaves the editor.\r\n     */\r\n    onDragEnter: () => void = (): void => {\r\n        this._dragCount++;\r\n    };\r\n\r\n    /**\r\n     * See `onDragEnter()`.\r\n     */\r\n    onDragLeave: () => void = (): void => {\r\n        this._dragCount--;\r\n        if (this._dragCount === 0) {\r\n            this.exitCurrentMode();\r\n        }\r\n    };\r\n}\r\n\r\nexport default DraftEditor;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {RawDraftContentBlock} from './RawDraftContentBlock';\r\nimport  {RawDraftEntity} from './RawDraftEntity';\r\n\r\n/**\r\n * A type that represents a composed document as vanilla JavaScript objects,\r\n * with all styles and entities represented as ranges. Corresponding entity\r\n * objects are packaged as objects as well.\r\n *\r\n * This object is especially useful when sending the document state to the\r\n * server for storage, as its representation is more concise than our\r\n * immutable objects.\r\n */\r\nexport type RawDraftContentState = {\r\n  blocks: Array<RawDraftContentBlock>,\r\n  entityMap: {[key: string]: RawDraftEntity},\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nconst DraftStringKey = {\r\n  stringify: function(key: string): string {\r\n    return '_' + String(key);\r\n  },\r\n\r\n  unstringify: function(key: string): string {\r\n    return key.slice(1);\r\n  },\r\n};\r\n\r\nexport default  DraftStringKey;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport  {EntityRange} from './EntityRange';\r\n\r\nimport DraftStringKey  from './DraftStringKey';\r\nimport UnicodeUtils from 'fbjs/lib/UnicodeUtils';\r\n\r\nconst {strlen} = UnicodeUtils;\r\n\r\n/**\r\n * Convert to UTF-8 character counts for storage.\r\n */\r\nfunction encodeEntityRanges(\r\n  block: BlockNodeRecord,\r\n  storageMap: Object,\r\n): Array<EntityRange> {\r\n  const encoded = [];\r\n  block.findEntityRanges(\r\n    character => !!character.getEntity(),\r\n    (/*number*/ start, /*number*/ end) => {\r\n      const text = block.getText();\r\n      const key = block.getEntityAt(start);\r\n      encoded.push({\r\n        offset: strlen(text.slice(0, start)),\r\n        length: strlen(text.slice(start, end)),\r\n        // Encode the key as a number for range storage.\r\n        key: Number(storageMap[DraftStringKey.stringify(key)]),\r\n      });\r\n    },\r\n  );\r\n  return encoded;\r\n}\r\n\r\nexport default  encodeEntityRanges;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport  {DraftInlineStyle} from '../immutable/DraftInlineStyle';\r\nimport  {InlineStyleRange} from './InlineStyleRange';\r\nimport  {List} from 'immutable';\r\n\r\nimport UnicodeUtils from 'fbjs/lib/UnicodeUtils';\r\n\r\nimport findRangesImmutable from '../immutable/findRangesImmutable';\r\n\r\nconst areEqual = (a, b) => a === b;\r\nconst isTruthy = a => !!a;\r\nconst EMPTY_ARRAY = [];\r\n\r\n/**\r\n * Helper function for getting encoded styles for each inline style. Convert\r\n * to UTF-8 character counts for storage.\r\n */\r\nfunction getEncodedInlinesForType(\r\n  block: BlockNodeRecord,\r\n  styleList: List<DraftInlineStyle>,\r\n  styleToEncode: string,\r\n): Array<InlineStyleRange> {\r\n  const ranges = [];\r\n\r\n  // Obtain an array with ranges for only the specified style.\r\n  const filteredInlines = styleList\r\n    .map(style => style.has(styleToEncode))\r\n    .toList();\r\n\r\n  findRangesImmutable(\r\n    filteredInlines,\r\n    areEqual,\r\n    // We only want to keep ranges with nonzero style values.\r\n    isTruthy,\r\n    (start, end) => {\r\n      const text = block.getText();\r\n      ranges.push({\r\n        offset: UnicodeUtils.strlen(text.slice(0, start)),\r\n        length: UnicodeUtils.strlen(text.slice(start, end)),\r\n        style: styleToEncode,\r\n      });\r\n    },\r\n  );\r\n\r\n  return ranges;\r\n}\r\n\r\n/*\r\n * Retrieve the encoded arrays of inline styles, with each individual style\r\n * treated separately.\r\n */\r\nfunction encodeInlineStyleRanges(\r\n  block: BlockNodeRecord,\r\n): Array<InlineStyleRange> {\r\n  const styleList = block\r\n    .getCharacterList()\r\n    .map(c => c.getStyle())\r\n    .toList();\r\n  const ranges = styleList\r\n    .flatten()\r\n    .toSet()\r\n    .map(style => getEncodedInlinesForType(block, styleList, style));\r\n\r\n  return Array.prototype.concat.apply(EMPTY_ARRAY, ranges.toJS());\r\n}\r\n\r\nexport default  encodeInlineStyleRanges;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockNodeRecord} from '../immutable/BlockNodeRecord';\r\nimport ContentState from '../immutable/ContentState';\r\nimport  {RawDraftContentBlock} from './RawDraftContentBlock';\r\nimport  {RawDraftContentState} from './RawDraftContentState';\r\n\r\nimport ContentBlock from '../immutable/ContentBlock';\r\nimport ContentBlockNode from '../immutable/ContentBlockNode';\r\nimport DraftStringKey from './DraftStringKey';\r\n\r\nimport encodeEntityRanges from './encodeEntityRanges';\r\nimport encodeInlineStyleRanges from './encodeInlineStyleRanges';\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\nconst createRawBlock = (block: BlockNodeRecord, entityStorageMap: any) => {\r\n  return {\r\n    key: block.getKey(),\r\n    text: block.getText(),\r\n    type: block.getType(),\r\n    depth: block.getDepth(),\r\n    inlineStyleRanges: encodeInlineStyleRanges(block),\r\n    entityRanges: encodeEntityRanges(block, entityStorageMap),\r\n    data: block.getData().toObject(),\r\n  };\r\n};\r\n\r\nconst insertRawBlock = (\r\n  block: BlockNodeRecord,\r\n  entityMap: any,\r\n  rawBlocks: Array<RawDraftContentBlock>,\r\n  blockCacheRef: any,\r\n) => {\r\n  if (block instanceof ContentBlock) {\r\n    rawBlocks.push(createRawBlock(block, entityMap));\r\n    return;\r\n  }\r\n\r\n  invariant(block instanceof ContentBlockNode, 'block is not a BlockNode');\r\n\r\n  const parentKey = (block as ContentBlockNode).getParentKey();\r\n  const rawBlock = (blockCacheRef[block.getKey()] = {\r\n    ...createRawBlock(block, entityMap),\r\n    children: [],\r\n  });\r\n\r\n  if (parentKey) {\r\n    blockCacheRef[parentKey].children.push(rawBlock);\r\n    return;\r\n  }\r\n\r\n  rawBlocks.push(rawBlock);\r\n};\r\n\r\nconst encodeRawBlocks = (\r\n  contentState: ContentState,\r\n  rawState: RawDraftContentState,\r\n): RawDraftContentState => {\r\n  const {entityMap} = rawState;\r\n\r\n  const rawBlocks = [];\r\n\r\n  const blockCacheRef = {};\r\n  const entityCacheRef = {};\r\n  let entityStorageKey = 0;\r\n\r\n  contentState.getBlockMap().forEach(block => {\r\n    block.findEntityRanges(\r\n      character => character.getEntity() !== null,\r\n      start => {\r\n        const entityKey = block.getEntityAt(start);\r\n        // Stringify to maintain order of otherwise numeric keys.\r\n        const stringifiedEntityKey = DraftStringKey.stringify(entityKey);\r\n        // This makes this function resilient to two entities\r\n        // erroneously having the same key\r\n        if (entityCacheRef[stringifiedEntityKey]) {\r\n          return;\r\n        }\r\n        entityCacheRef[stringifiedEntityKey] = entityKey;\r\n        // we need the `any` casting here since this is a temporary state\r\n        // where we will later on flip the entity map and populate it with\r\n        // real entity, at this stage we just need to map back the entity\r\n        // key used by the BlockNode\r\n        entityMap[stringifiedEntityKey] = `${entityStorageKey}` as any\r\n        entityStorageKey++;\r\n      },\r\n    );\r\n\r\n    insertRawBlock(block, entityMap, rawBlocks, blockCacheRef);\r\n  });\r\n\r\n  return {\r\n    blocks: rawBlocks,\r\n    entityMap,\r\n  };\r\n};\r\n\r\n// Flip storage map so that our storage keys map to global\r\n// DraftEntity keys.\r\nconst encodeRawEntityMap = (\r\n  contentState: ContentState,\r\n  rawState: RawDraftContentState,\r\n): RawDraftContentState => {\r\n  const {blocks, entityMap} = rawState;\r\n\r\n  const rawEntityMap = {};\r\n\r\n  Object.keys(entityMap).forEach((key, index) => {\r\n    const entity = contentState.getEntity(DraftStringKey.unstringify(key));\r\n    rawEntityMap[index] = {\r\n      type: entity.getType(),\r\n      mutability: entity.getMutability(),\r\n      data: entity.getData(),\r\n    };\r\n  });\r\n\r\n  return {\r\n    blocks,\r\n    entityMap: rawEntityMap,\r\n  };\r\n};\r\n\r\nconst convertFromDraftStateToRaw = (\r\n  contentState: ContentState,\r\n): RawDraftContentState => {\r\n  let rawDraftContentState = {\r\n    entityMap: {},\r\n    blocks: [],\r\n  };\r\n\r\n  // add blocks\r\n  rawDraftContentState = encodeRawBlocks(contentState, rawDraftContentState);\r\n\r\n  // add entities\r\n  rawDraftContentState = encodeRawEntityMap(contentState, rawDraftContentState);\r\n\r\n  return rawDraftContentState;\r\n};\r\n\r\nexport default  convertFromDraftStateToRaw;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n *\r\n * This is unstable and not part of the public API and should not be used by\r\n * production systems. This file may be update/removed without notice.\r\n */\r\n\r\nimport {RawDraftContentBlock} from '../../../model/encoding/RawDraftContentBlock';\r\nimport  {RawDraftContentState} from '../../../model/encoding/RawDraftContentState';\r\n\r\nimport generateRandomKey from '../../../model/keys/generateRandomKey';\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\nconst traverseInDepthOrder = (\r\n  blocks: Array<RawDraftContentBlock>,\r\n  fn: (block: RawDraftContentBlock) => void,\r\n) => {\r\n  let stack = [...blocks].reverse();\r\n  while (stack.length) {\r\n    const block = stack.pop();\r\n\r\n    fn(block);\r\n\r\n    const children = block.children;\r\n\r\n    invariant(Array.isArray(children), 'Invalid tree raw block');\r\n\r\n    stack = stack.concat([...children.reverse()]);\r\n  }\r\n};\r\n\r\nconst isListBlock = (block?: RawDraftContentBlock): boolean => {\r\n  if (!(block && block.type)) {\r\n    return false;\r\n  }\r\n  const {type} = block;\r\n  return type === 'unordered-list-item' || type === 'ordered-list-item';\r\n};\r\n\r\nconst addDepthToChildren = (block: RawDraftContentBlock) => {\r\n  if (Array.isArray(block.children)) {\r\n    block.children = block.children.map(child =>\r\n      child.type === block.type\r\n        ? {...child, depth: (block.depth || 0) + 1}\r\n        : child,\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This adapter is intended to be be used as an adapter to draft tree data\r\n *\r\n * draft state <=====> draft tree state\r\n */\r\nconst DraftTreeAdapter = {\r\n  /**\r\n   * Converts from a tree raw state back to draft raw state\r\n   */\r\n  fromRawTreeStateToRawState(\r\n    draftTreeState: RawDraftContentState,\r\n  ): RawDraftContentState {\r\n    const {blocks} = draftTreeState;\r\n    const transformedBlocks = [];\r\n\r\n    invariant(Array.isArray(blocks), 'Invalid raw state');\r\n\r\n    if (!Array.isArray(blocks) || !blocks.length) {\r\n      return draftTreeState;\r\n    }\r\n\r\n    traverseInDepthOrder(blocks, block => {\r\n      const newBlock = {\r\n        ...block,\r\n      };\r\n\r\n      if (isListBlock(block)) {\r\n        newBlock.depth = newBlock.depth || 0;\r\n        addDepthToChildren(block);\r\n\r\n        // if it's a non-leaf node, we don't do anything else\r\n        if (block.children != null && block.children.length > 0) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      delete newBlock.children;\r\n\r\n      transformedBlocks.push(newBlock);\r\n    });\r\n\r\n    draftTreeState.blocks = transformedBlocks;\r\n\r\n    return {\r\n      ...draftTreeState,\r\n      blocks: transformedBlocks,\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Converts from draft raw state to tree draft state\r\n   */\r\n  fromRawStateToRawTreeState(\r\n    draftState: RawDraftContentState,\r\n  ): RawDraftContentState {\r\n    const transformedBlocks = [];\r\n    const parentStack = [];\r\n\r\n    draftState.blocks.forEach(block => {\r\n      const isList = isListBlock(block);\r\n      const depth = block.depth || 0;\r\n      const treeBlock = {\r\n        ...block,\r\n        children: [],\r\n      };\r\n\r\n      if (!isList) {\r\n        transformedBlocks.push(treeBlock);\r\n        return;\r\n      }\r\n\r\n      let lastParent = parentStack[0];\r\n      // block is non-nested & there are no nested blocks, directly push block\r\n      if (lastParent == null && depth === 0) {\r\n        transformedBlocks.push(treeBlock);\r\n        // block is first nested block or previous nested block is at a lower level\r\n      } else if (lastParent == null || lastParent.depth < depth - 1) {\r\n        // create new parent block\r\n        const newParent = {\r\n          key: generateRandomKey(),\r\n          text: '',\r\n          depth: depth - 1,\r\n          type: block.type,\r\n          children: [],\r\n          entityRanges: [],\r\n          inlineStyleRanges: [],\r\n        };\r\n\r\n        parentStack.unshift(newParent);\r\n        if (depth === 1) {\r\n          // add as a root-level block\r\n          transformedBlocks.push(newParent);\r\n        } else if (lastParent != null) {\r\n          // depth > 1 => also add as previous parent's child\r\n          lastParent.children.push(newParent);\r\n        }\r\n        newParent.children.push(treeBlock);\r\n      } else if (lastParent.depth === depth - 1) {\r\n        // add as child of last parent\r\n        lastParent.children.push(treeBlock);\r\n      } else {\r\n        // pop out parents at levels above this one from the parent stack\r\n        while (lastParent != null && lastParent.depth >= depth) {\r\n          parentStack.shift();\r\n          lastParent = parentStack[0];\r\n        }\r\n        if (depth > 0) {\r\n          lastParent.children.push(treeBlock);\r\n        } else {\r\n          transformedBlocks.push(treeBlock);\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      ...draftState,\r\n      blocks: transformedBlocks,\r\n    };\r\n  },\r\n};\r\n\r\nexport default  DraftTreeAdapter;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n *\r\n * This is unstable and not part of the public API and should not be used by\r\n * production systems. This file may be update/removed without notice.\r\n */\r\nimport  {BlockMap} from '../../../model/immutable/BlockMap';\r\nimport  ContentBlockNode from '../../../model/immutable/ContentBlockNode';\r\n\r\nimport warning from 'fbjs/lib/warning';\r\n\r\nconst DraftTreeInvariants = {\r\n  /**\r\n   * Check if the block is valid\r\n   */\r\n  isValidBlock(block: ContentBlockNode, blockMap: BlockMap): boolean {\r\n    const key = block.getKey();\r\n    // is its parent's child\r\n    const parentKey = block.getParentKey();\r\n    if (parentKey != null) {\r\n      const parent:any = blockMap.get(parentKey);\r\n      if (!parent.getChildKeys().includes(key)) {\r\n        warning(true, 'Tree is missing parent -> child pointer on %s', key);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // is its children's parent\r\n    const children = block.getChildKeys().map(k => blockMap.get(k));\r\n    if (!children.every(c => c.getParentKey() === key)) {\r\n      warning(true, 'Tree is missing child -> parent pointer on %s', key);\r\n      return false;\r\n    }\r\n\r\n    // is its previous sibling's next sibling\r\n    const prevSiblingKey = block.getPrevSiblingKey();\r\n    if (prevSiblingKey != null) {\r\n      const prevSibling = blockMap.get(prevSiblingKey);\r\n      if (prevSibling.getNextSiblingKey() !== key) {\r\n        warning(\r\n          true,\r\n          \"Tree is missing nextSibling pointer on %s's prevSibling\",\r\n          key,\r\n        );\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // is its next sibling's previous sibling\r\n    const nextSiblingKey = block.getNextSiblingKey();\r\n    if (nextSiblingKey != null) {\r\n      const nextSibling = blockMap.get(nextSiblingKey);\r\n      if (nextSibling.getPrevSiblingKey() !== key) {\r\n        warning(\r\n          true,\r\n          \"Tree is missing prevSibling pointer on %s's nextSibling\",\r\n          key,\r\n        );\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // no 2-node cycles\r\n    if (nextSiblingKey !== null && prevSiblingKey !== null) {\r\n      if (prevSiblingKey === nextSiblingKey) {\r\n        warning(true, 'Tree has a two-node cycle at %s', key);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // if it's a leaf node, it has text but no children\r\n    if ((block as any).text != '') {\r\n      if (block.getChildKeys().size > 0) {\r\n        warning(true, 'Leaf node %s has children', key);\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * Checks that this is a connected tree on all the blocks\r\n   * starting from the first block, traversing nextSibling and child pointers\r\n   * should be a tree (preorder traversal - parent, then children)\r\n   * num of connected node === number of blocks\r\n   */\r\n  isConnectedTree(blockMap: BlockMap): boolean {\r\n    // exactly one node has no previous sibling + no parent\r\n    const eligibleFirstNodes = blockMap\r\n      .toArray()\r\n      .filter(\r\n        block =>\r\n          block.getParentKey() == null && block.getPrevSiblingKey() == null,\r\n      );\r\n    if (eligibleFirstNodes.length !== 1) {\r\n      warning(true, 'Tree is not connected. More or less than one first node');\r\n      return false;\r\n    }\r\n    const firstNode = eligibleFirstNodes.shift();\r\n    let nodesSeen = 0;\r\n    let currentKey = firstNode.getKey();\r\n    const visitedStack = [];\r\n    while (currentKey != null) {\r\n      const currentNode:any = blockMap.get(currentKey);\r\n      const childKeys = currentNode.getChildKeys();\r\n      const nextSiblingKey = currentNode.getNextSiblingKey();\r\n      // if the node has children, add parent's next sibling to stack and go to children\r\n      if (childKeys.size > 0) {\r\n        if (nextSiblingKey != null) {\r\n          visitedStack.unshift(nextSiblingKey);\r\n        }\r\n        const children = childKeys.map(k => blockMap.get(k));\r\n        const firstNode = children.find(\r\n          block => block.getPrevSiblingKey() == null,\r\n        );\r\n        if (firstNode == null) {\r\n          warning(true, '%s has no first child', currentKey);\r\n          return false;\r\n        }\r\n        currentKey = firstNode.getKey();\r\n        // TODO(T32490138): Deal with multi-node cycles here\r\n      } else {\r\n        if (currentNode.getNextSiblingKey() != null) {\r\n          currentKey = currentNode.getNextSiblingKey();\r\n        } else {\r\n          currentKey = visitedStack.shift();\r\n        }\r\n      }\r\n      nodesSeen++;\r\n    }\r\n\r\n    if (nodesSeen !== blockMap.size) {\r\n      warning(\r\n        true,\r\n        'Tree is not connected. %s nodes were seen instead of %s',\r\n        nodesSeen,\r\n        blockMap.size,\r\n      );\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * Checks that the block map is a connected tree with valid blocks\r\n   */\r\n  isValidTree(blockMap: BlockMap): boolean {\r\n    const blocks = blockMap.toArray();\r\n    if (!blocks.every(block => this.isValidBlock(block, blockMap))) {\r\n      return false;\r\n    }\r\n    return this.isConnectedTree(blockMap);\r\n  },\r\n};\r\n\r\nexport default  DraftTreeInvariants;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {DraftInlineStyle} from '../immutable/DraftInlineStyle';\r\n\r\nimport CharacterMetadata from '../immutable/CharacterMetadata';\r\n\r\nimport {List}from 'immutable';\r\n\r\nfunction createCharacterList(\r\n  inlineStyles: Array<DraftInlineStyle>,\r\n  entities: Array<string>,\r\n): List<CharacterMetadata> {\r\n  const characterArray = inlineStyles.map((style, ii) => {\r\n    const entity = entities[ii];\r\n    return CharacterMetadata.create({style, entity});\r\n  });\r\n  return List(characterArray);\r\n}\r\n\r\nexport default  createCharacterList;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport UnicodeUtils from 'fbjs/lib/UnicodeUtils';\r\n\r\nconst {substr} = UnicodeUtils;\r\n\r\n/**\r\n * Convert to native JavaScript string lengths to determine ranges.\r\n */\r\nfunction decodeEntityRanges(\r\n  text: string,\r\n  ranges: Array<any>,\r\n): Array<string> {\r\n  const entities = Array(text.length).fill(null);\r\n  if (ranges) {\r\n    ranges.forEach(range => {\r\n      // Using Unicode-enabled substrings converted to JavaScript lengths,\r\n      // fill the output array with entity keys.\r\n      const start = substr(text, 0, range.offset).length;\r\n      const end = start + substr(text, range.offset, range.length).length;\r\n      for (let ii = start; ii < end; ii++) {\r\n        entities[ii] = range.key;\r\n      }\r\n    });\r\n  }\r\n  return entities;\r\n}\r\n\r\nexport default  decodeEntityRanges;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {DraftInlineStyle} from '../immutable/DraftInlineStyle';\r\nimport  {InlineStyleRange} from './InlineStyleRange';\r\n\r\nimport UnicodeUtils from 'fbjs/lib/UnicodeUtils';\r\n\r\nimport {OrderedSet} from 'immutable';\r\nconst {substr} = UnicodeUtils;\r\n\r\nconst EMPTY_SET = OrderedSet();\r\n\r\n/**\r\n * Convert to native JavaScript string lengths to determine ranges.\r\n */\r\nfunction decodeInlineStyleRanges(\r\n  text: string,\r\n  ranges?: Array<InlineStyleRange>,\r\n): Array<DraftInlineStyle> {\r\n  const styles = Array(text.length).fill(EMPTY_SET);\r\n  if (ranges) {\r\n    ranges.forEach(range => {\r\n      let cursor = substr(text, 0, range.offset).length;\r\n      const end = cursor + substr(text, range.offset, range.length).length;\r\n      while (cursor < end) {\r\n        styles[cursor] = styles[cursor].add(range.style);\r\n        cursor++;\r\n      }\r\n    });\r\n  }\r\n  return styles;\r\n}\r\n\r\nexport default  decodeInlineStyleRanges;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport  {BlockMap} from '../immutable/BlockMap';\r\nimport {BlockNodeConfig} from '../immutable/BlockNode';\r\nimport  CharacterMetadata from '../immutable/CharacterMetadata';\r\nimport  {RawDraftContentBlock} from './RawDraftContentBlock';\r\nimport  {RawDraftContentState} from './RawDraftContentState';\r\n\r\nimport ContentBlock from '../immutable/ContentBlock';\r\nimport ContentBlockNode from '../immutable/ContentBlockNode';\r\nimport ContentState from '../immutable/ContentState';\r\nimport DraftEntity from '../entity/DraftEntity';\r\nimport DraftTreeAdapter from '../../component/utils/exploration/DraftTreeAdapter';\r\nimport DraftTreeInvariants from '../../component/utils/exploration/DraftTreeInvariants';\r\nimport SelectionState from '../immutable/SelectionState';\r\n\r\nimport createCharacterList from './createCharacterList';\r\nimport decodeEntityRanges from './decodeEntityRanges';\r\nimport decodeInlineStyleRanges from './decodeInlineStyleRanges';\r\nimport generateRandomKey from '../keys/generateRandomKey';\r\nimport gkx from '../../stubs/gkx';\r\nimport {List, Map, OrderedMap} from 'immutable';\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\nconst experimentalTreeDataSupport = gkx('draft_tree_data_support');\r\n\r\nconst decodeBlockNodeConfig = (\r\n  block: RawDraftContentBlock,\r\n  entityMap: any,\r\n): BlockNodeConfig => {\r\n  const {key, type, data, text, depth} = block;\r\n\r\n  const blockNodeConfig: BlockNodeConfig = {\r\n    text,\r\n    depth: depth || 0,\r\n    type: type || 'unstyled',\r\n    key: key || generateRandomKey(),\r\n    data: Map(data),\r\n    characterList: decodeCharacterList(block, entityMap),\r\n  };\r\n\r\n  return blockNodeConfig;\r\n};\r\n\r\nconst decodeCharacterList = (\r\n  block: RawDraftContentBlock,\r\n  entityMap: any,\r\n): List<CharacterMetadata> => {\r\n  const {\r\n    text,\r\n    entityRanges: rawEntityRanges,\r\n    inlineStyleRanges: rawInlineStyleRanges,\r\n  } = block;\r\n\r\n  const entityRanges = rawEntityRanges || [];\r\n  const inlineStyleRanges = rawInlineStyleRanges || [];\r\n\r\n  // Translate entity range keys to the DraftEntity map.\r\n  return createCharacterList(\r\n    decodeInlineStyleRanges(text, inlineStyleRanges),\r\n    decodeEntityRanges(\r\n      text,\r\n      entityRanges\r\n        .filter(range => entityMap.hasOwnProperty(range.key))\r\n        .map(range => ({...range, key: entityMap[range.key]})),\r\n    ),\r\n  );\r\n};\r\n\r\nconst addKeyIfMissing = (block: RawDraftContentBlock): RawDraftContentBlock => {\r\n  return {\r\n    ...block,\r\n    key: block.key || generateRandomKey(),\r\n  };\r\n};\r\n\r\n/**\r\n * Node stack is responsible to ensure we traverse the tree only once\r\n * in depth order, while also providing parent refs to inner nodes to\r\n * construct their links.\r\n */\r\nconst updateNodeStack = (\r\n  stack: Array<any>,\r\n  nodes: Array<any>,\r\n  parentRef: ContentBlockNode,\r\n): Array<any> => {\r\n  const nodesWithParentRef = nodes.map(block => {\r\n    return {\r\n      ...block,\r\n      parentRef,\r\n    };\r\n  });\r\n\r\n  // since we pop nodes from the stack we need to insert them in reverse\r\n  return stack.concat(nodesWithParentRef.reverse());\r\n};\r\n\r\n/**\r\n * This will build a tree draft content state by creating the node\r\n * reference links into a single tree walk. Each node has a link\r\n * reference to \"parent\", \"children\", \"nextSibling\" and \"prevSibling\"\r\n * blockMap will be created using depth ordering.\r\n */\r\nconst decodeContentBlockNodes = (\r\n  blocks: Array<RawDraftContentBlock>,\r\n  entityMap: any,\r\n): BlockMap => {\r\n  return (\r\n    blocks\r\n      // ensure children have valid keys to enable sibling links\r\n      .map(addKeyIfMissing)\r\n      .reduce(\r\n        (blockMap: BlockMap, block: RawDraftContentBlock, index: number) => {\r\n          invariant(\r\n            Array.isArray(block.children),\r\n            'invalid RawDraftContentBlock can not be converted to ContentBlockNode',\r\n          );\r\n\r\n          // ensure children have valid keys to enable sibling links\r\n          const children = block.children.map(addKeyIfMissing);\r\n\r\n          // root level nodes\r\n          const contentBlockNode = new ContentBlockNode({\r\n            ...decodeBlockNodeConfig(block, entityMap),\r\n            prevSibling: index === 0 ? null : blocks[index - 1].key,\r\n            nextSibling:\r\n              index === blocks.length - 1 ? null : blocks[index + 1].key,\r\n            children: List(children.map((child: any) => child.key)),\r\n          });\r\n\r\n          // push root node to blockMap\r\n          blockMap = blockMap.set(contentBlockNode.getKey(), contentBlockNode);\r\n\r\n          // this stack is used to ensure we visit all nodes respecting depth ordering\r\n          let stack = updateNodeStack([], children, contentBlockNode);\r\n\r\n          // start computing children nodes\r\n          while (stack.length > 0) {\r\n            // we pop from the stack and start processing this node\r\n            const node: any = stack.pop();\r\n\r\n            // parentRef already points to a converted ContentBlockNode\r\n            const parentRef: ContentBlockNode = node.parentRef;\r\n            const siblings = parentRef.getChildKeys();\r\n            const index = siblings.indexOf(node.key);\r\n            const isValidBlock = Array.isArray(node.children);\r\n\r\n            if (!isValidBlock) {\r\n              invariant(\r\n                isValidBlock,\r\n                'invalid RawDraftContentBlock can not be converted to ContentBlockNode',\r\n              );\r\n              break;\r\n            }\r\n\r\n            // ensure children have valid keys to enable sibling links\r\n            const children = node.children.map(addKeyIfMissing);\r\n\r\n            const contentBlockNode = new ContentBlockNode({\r\n              ...decodeBlockNodeConfig(node, entityMap),\r\n              parent: parentRef.getKey(),\r\n              children: List(children.map((child: any) => child.key)),\r\n              prevSibling: index === 0 ? null : siblings.get(index - 1),\r\n              nextSibling:\r\n                index === siblings.size - 1 ? null : siblings.get(index + 1),\r\n            });\r\n\r\n            // push node to blockMap\r\n            blockMap = blockMap.set(\r\n              contentBlockNode.getKey(),\r\n              contentBlockNode,\r\n            );\r\n\r\n            // this stack is used to ensure we visit all nodes respecting depth ordering\r\n            stack = updateNodeStack(stack, children, contentBlockNode);\r\n          }\r\n\r\n          return blockMap;\r\n        },\r\n        OrderedMap(),\r\n      )\r\n  );\r\n};\r\n\r\nconst decodeContentBlocks = (\r\n  blocks: Array<RawDraftContentBlock>,\r\n  entityMap: any,\r\n): BlockMap => {\r\n  return OrderedMap(\r\n    blocks.map((block: RawDraftContentBlock) => {\r\n      const contentBlock = new ContentBlock(\r\n        decodeBlockNodeConfig(block, entityMap),\r\n      );\r\n      return [contentBlock.getKey(), contentBlock];\r\n    }),\r\n  );\r\n};\r\n\r\nconst decodeRawBlocks = (\r\n  rawState: RawDraftContentState,\r\n  entityMap: any,\r\n): BlockMap => {\r\n  const isTreeRawBlock = rawState.blocks.find(\r\n    block => Array.isArray(block.children) && block.children.length > 0,\r\n  );\r\n  const rawBlocks =\r\n    experimentalTreeDataSupport && !isTreeRawBlock\r\n      ? DraftTreeAdapter.fromRawStateToRawTreeState(rawState).blocks\r\n      : rawState.blocks;\r\n\r\n  if (!experimentalTreeDataSupport) {\r\n    return decodeContentBlocks(\r\n      isTreeRawBlock\r\n        ? DraftTreeAdapter.fromRawTreeStateToRawState(rawState).blocks\r\n        : rawBlocks,\r\n      entityMap,\r\n    );\r\n  }\r\n\r\n  const blockMap = decodeContentBlockNodes(rawBlocks, entityMap);\r\n  // in dev mode, check that the tree invariants are met\r\n  if (window['__DEV__']) {\r\n    invariant(\r\n      DraftTreeInvariants.isValidTree(blockMap),\r\n      'Should be a valid tree',\r\n    );\r\n  }\r\n  return blockMap;\r\n};\r\n\r\nconst decodeRawEntityMap = (rawState: RawDraftContentState): any => {\r\n  const {entityMap: rawEntityMap} = rawState;\r\n  const entityMap = {};\r\n\r\n  // TODO: Update this once we completely remove DraftEntity\r\n  Object.keys(rawEntityMap).forEach(rawEntityKey => {\r\n    const {type, mutability, data} = rawEntityMap[rawEntityKey];\r\n\r\n    // get the key reference to created entity\r\n    entityMap[rawEntityKey] = DraftEntity.__create(\r\n      type,\r\n      mutability,\r\n      data || {},\r\n    );\r\n  });\r\n\r\n  return entityMap;\r\n};\r\n\r\nconst convertFromRawToDraftState = (\r\n  rawState: RawDraftContentState,\r\n): ContentState => {\r\n  invariant(Array.isArray(rawState.blocks), 'invalid RawDraftContentState');\r\n\r\n  // decode entities\r\n  const entityMap = decodeRawEntityMap(rawState);\r\n\r\n  // decode blockMap\r\n  const blockMap = decodeRawBlocks(rawState, entityMap);\r\n\r\n  // create initial selection\r\n  const selectionState = blockMap.isEmpty()\r\n    ? new SelectionState()\r\n    : SelectionState.createEmpty(blockMap.first().getKey());\r\n\r\n  return new ContentState({\r\n    blockMap,\r\n    entityMap,\r\n    selectionBefore: selectionState,\r\n    selectionAfter: selectionState,\r\n  });\r\n};\r\n\r\nexport default  convertFromRawToDraftState;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport getRangeClientRects from './getRangeClientRects';\r\n\r\nexport type FakeClientRect = {\r\n  left: number,\r\n  width: number,\r\n  right: number,\r\n  top: number,\r\n  bottom: number,\r\n  height: number,\r\n};\r\n\r\n/**\r\n * Like range.getBoundingClientRect() but normalizes for browser bugs.\r\n */\r\nfunction getRangeBoundingClientRect(range: Range): FakeClientRect {\r\n  // \"Return a DOMRect object describing the smallest rectangle that includes\r\n  // the first rectangle in list and all of the remaining rectangles of which\r\n  // the height or width is not zero.\"\r\n  // http://www.w3.org/TR/cssom-view/#dom-range-getboundingclientrect\r\n  const rects = getRangeClientRects(range);\r\n  let top = 0;\r\n  let right = 0;\r\n  let bottom = 0;\r\n  let left = 0;\r\n\r\n  if (rects.length) {\r\n    // If the first rectangle has 0 width, we use the second, this is needed\r\n    // because Chrome renders a 0 width rectangle when the selection contains\r\n    // a line break.\r\n    if (rects.length > 1 && rects[0].width === 0) {\r\n      ({top, right, bottom, left} = rects[1]);\r\n    } else {\r\n      ({top, right, bottom, left} = rects[0]);\r\n    }\r\n\r\n    for (let ii = 1; ii < rects.length; ii++) {\r\n      const rect = rects[ii];\r\n      if (rect.height !== 0 && rect.width !== 0) {\r\n        top = Math.min(top, rect.top);\r\n        right = Math.max(right, rect.right);\r\n        bottom = Math.max(bottom, rect.bottom);\r\n        left = Math.min(left, rect.left);\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    top,\r\n    right,\r\n    bottom,\r\n    left,\r\n    width: right - left,\r\n    height: bottom - top,\r\n  };\r\n}\r\n\r\nexport default  getRangeBoundingClientRect;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n * @emails oncall+draft_js\r\n */\r\n\r\n'use strict';\r\n\r\nimport {FakeClientRect} from './getRangeBoundingClientRect';\r\n\r\nimport getRangeBoundingClientRect from './getRangeBoundingClientRect';\r\n\r\n/**\r\n * Return the bounding ClientRect for the visible DOM selection, if any.\r\n * In cases where there are no selected ranges or the bounding rect is\r\n * temporarily invalid, return null.\r\n *\r\n * When using from an iframe, you should pass the iframe window object\r\n */\r\nfunction getVisibleSelectionRect(global: any): FakeClientRect {\r\n  const selection = global.getSelection();\r\n  if (!selection.rangeCount) {\r\n    return null;\r\n  }\r\n\r\n  const range = selection.getRangeAt(0);\r\n  const boundingRect = getRangeBoundingClientRect(range);\r\n  const {top, right, bottom, left} = boundingRect;\r\n\r\n  // When a re-render leads to a node being removed, the DOM selection will\r\n  // temporarily be placed on an ancestor node, which leads to an invalid\r\n  // bounding rect. Discard this state.\r\n  if (top === 0 && right === 0 && bottom === 0 && left === 0) {\r\n    return null;\r\n  }\r\n\r\n  return boundingRect;\r\n}\r\n\r\nexport default  getVisibleSelectionRect;\r\n"],"names":["OrderedMap","OrderedSet","Record","Map","EMPTY_SET","defaultRecord","List","Repeat","haveEqualStyle","haveEqualEntity","decorateCharacterList","updateBlockMapLinks","transformBlock","is","Stack","ContentBlockRecord","SCROLL_BUFFER","isBlockOnSelectionEdge","experimentalTreeDataSupport","isNode","getNodeLength","isChrome","insertFragment","onSelect","isOSX","DraftEditorContents","areEqual","substr"],"mappings":"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"}